00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.02
Created On: 5/3/2015 7:59:54 AM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :  Monitor Project
00000000                             3  * Written by :  Adam Sumner 
00000000                             4  * Date       :  4/28/2015
00000000                             5  * Description:  Monitor Final Project
00000000                             6  *-----------------------------------------------------------
00000000                             7  
00000000                             8  
00000000                             9  *---------------DISCLAIMER!-------------------------*
00000000                            10  *Subroutines are not as optimized as they should be!*
00000000                            11  *Things such as checking for spaces, getting addresses, etc. *
00000000                            12  *can easily be their own subroutines to save code space!*
00000000                            13  *Luckily code size is not a huge concern*
00000000                            14  *This is why there are no plans to optimize in the future*
00000000                            15  
00000000                            16  
00000000                            17  
00003000                            18      ORG    $3000
00003000                            19      
00003000                            20  BUFFER        DS.B      80              ;space for command storage 
00003050                            21  OUTPUTBUFF    DS.B      8               ;to output numbers easily
00003058= 4D 4F 4E 49 54 4F ...     22  PROMPT        DC.B      'MONITOR441>'   ;prompt definition
00003063                            23  
00003063                            24  *Help text*
00003063= 4C 69 73 74 20 6F ...     25  HTXT          DC.B      'List of Commands:'
00003074= 4D 44 53 50 20 3C ...     26  HTXT1         DC.B      'MDSP <address1> <address2> - Memory Display: Outputs the address and memory' 
000030BF= 63 6F 6E 74 65 6E ...     27  HTXT1A        DC.B      'contents from <address1> to <address2> and from <address1> to' 
000030FC= 3C 61 64 64 72 65 ...     28  HTXT1B        DC.B      '<address2 + 16bytes>'
00003110= 48 58 44 45 43 20 ...     29  HTXT2         DC.B      'HXDEC <num> - Conversion: Converts a hexadecimal number to a decimal number'
0000315B= 53 4F 52 54 57 20 ...     30  HTXT3         DC.B      'SORTW <option> <address1> <address2> - Sort: Sorts a block of memory.'
000031A0= 3C 6F 70 74 69 6F ...     31  HTXT3A        DC.B      '<option> specifies the order in which the list is sorted:'
000031D9= 3B 41 20 2D 20 41 ...     32  HTXT3B        DC.B      ';A - Ascending Order'
000031ED= 3B 44 20 2D 20 44 ...     33  HTXT3C        DC.B      ';D - Descending Order'
00003202= 2D 28 64 65 66 61 ...     34  HTXT3D        DC.B      '-(default) - Descending Order'
0000321F= 53 6F 72 74 73 20 ...     35  HTXT3E        DC.B      'Sorts block of memory from <address1> to <address2>'
00003252= 4D 4D 20 3C 6F 70 ...     36  HTXT4         DC.B      'MM <option> <address> - Memory Modify: Display memory and, as required,'
00003299= 6D 6F 64 69 66 79 ...     37  HTXT4A        DC.B      'modify data or enter new data. <option> specifies the number of bytes'
000032DE= 64 69 73 70 6C 61 ...     38  HTXT4B        DC.B      'displayed for each address:'
000032F9= 2D 28 64 65 66 61 ...     39  HTXT4C        DC.B      '-(default) - Displays one byte'
00003317= 3B 57 20 2D 20 44 ...     40  HTXT4D        DC.B      ';W - Displays one word(2 bytes)'
00003336= 3B 4C 20 2D 20 44 ...     41  HTXT4E        DC.B      ';L - Displays one long word(4 bytes)'
0000335A= 4D 53 20 3C 64 61 ...     42  HTXT5         DC.B      'MS <data> <address> - Memory Set: Alters memory by setting <data> into' 
000033A0= 3C 61 64 64 72 65 ...     43  HTXT5A        DC.B      '<address>. Only accepts byte'
000033BC= 42 46 20 3C 64 61 ...     44  HTXT6         DC.B      'BF <data> <address1> <address2> - Block Fill: Fills memory starting at' 
00003402= 3C 61 64 64 72 65 ...     45  HTXT6A        DC.B      '<address1> to <address2>. Both must be even addresses. This command only'
0000344A= 77 6F 72 6B 73 20 ...     46  HTXT6B        DC.B      'works with a word-sized <data> pattern'
00003470= 42 4D 4F 56 20 3C ...     47  HTXT7         DC.B      'BMOV <address1> <address2> <address3> <address4> - Block Move: Moves' 
000034B4= 61 20 64 75 70 6C ...     48  HTXT7A        DC.B      'a duplicate block of memory from <address1> to <address2> into the block'
000034FC= 3C 61 64 64 72 65 ...     49  HTXT7B        DC.B      '<address3> to <address4>'
00003514= 42 54 53 54 20 3C ...     50  HTXT8         DC.B      'BTST <data> <address1> <address2> - Block Test: Tests a block of memory'
0000355B= 66 72 6F 6D 20 3C ...     51  HTXT8A        DC.B      'from <address1> to <address2> for <data>. Only accepts Byte'
00003596= 42 53 43 48 20 3C ...     52  HTXT9         DC.B      'BSCH <data> <address1> <address2> - Block Search: Searches for <data> in'
000035DE= 69 6E 20 6D 65 6D ...     53  HTXT9A        DC.B      'in memory block from <address1> to <address2>'
0000360B= 47 4F 20 3C 61 64 ...     54  HTXT10        DC.B      'GO <address> - Execute Program: Executes program at <address>'
00003648= 44 46 20 2D 20 44 ...     55  HTXT11        DC.B      'DF - Display Formatted Registers: Displays all registers'
00003680= 48 45 4C 50 20 2D ...     56  HTXT12        DC.B      'HELP - Help: Displays all available commands and their description'
000036C2= 45 43 48 4F 20 3C ...     57  HTXT13        DC.B      'ECHO <data> - Echo: Displays <data> to the terminal'
000036F5= 2E 3C 52 65 67 69 ...     58  HTXT14        DC.B      '.<Register Type><Register Number> <data>- Modify Register: Modifies the'
0000373C= 63 6F 6E 74 65 6E ...     59  HTXT15        DC.B      'contents of register <Register Type><Register Number> to <data>'
0000377B                            60  
0000377B                            61  *Error Message*
0000377B= 45 52 52 4F 52 3A ...     62  ERROR         DC.B      'ERROR: TRY COMMAND AGAIN WITH CORRECT SYNTAX'
000037A7= 45 52 52 4F 52 3A ...     63  ERROR1        DC.B      'ERROR: UNKNOWN COMMAND'
000037BD                            64  *Space*
000037BD= 20                        65  SPACE         DC.B      ' '
000037BE                            66  
000037BE                            67  *Debugger Print Statement*
000037BE= 57 49 4E                  68  DEBUG         DC.B      'WIN'      
000037C1                            69  
000037C1                            70  *BTST Text*
000037C1= 4E 75 6D 62 65 72 ...     71  BTST1         DC.B      'Number written was: '
000037D5= 4E 75 6D 62 65 72 ...     72  BTST2         DC.B      'Number read was: '
000037E6= 42 6C 6F 63 6B 20 ...     73  BTST3         DC.B      'Block Test PASSES!'
000037F8= 46 41 49 4C 55 52 ...     74  BTST4         DC.B      'FAILURE!!!!'  
00003803= 45 72 72 6F 72 20 ...     75  BTST5         DC.B      'Error Occurred at address: '      
0000381E                            76  
0000381E                            77  *BSCH Text*
0000381E= 44 61 74 61 3A 20         78  BSCH1         DC.B      'Data: '
00003824= 46 6F 75 6E 64 20 ...     79  BSCH2         DC.B      'Found at address: '
00003836= 50 61 74 74 65 72 ...     80  BSCH3         DC.B      'Pattern not found'
00003847                            81  
00003847                            82  *DF Text*
00003847= 44 30 3A 20               83  RD0            DC.B      'D0: '
0000384B= 44 31 3A 20               84  RD1            DC.B      'D1: '
0000384F= 44 32 3A 20               85  RD2            DC.B      'D2: '
00003853= 44 33 3A 20               86  RD3            DC.B      'D3: '
00003857= 44 34 3A 20               87  RD4            DC.B      'D4: '
0000385B= 44 35 3A 20               88  RD5            DC.B      'D5: '
0000385F= 44 36 3A 20               89  RD6            DC.B      'D6: '
00003863= 44 37 3A 20               90  RD7            DC.B      'D7: '
00003867                            91  
00003867= 41 30 3A 20               92  RA0            DC.B      'A0: '
0000386B= 41 31 3A 20               93  RA1            DC.B      'A1: '
0000386F= 41 32 3A 20               94  RA2            DC.B      'A2: '
00003873= 41 33 3A 20               95  RA3            DC.B      'A3: '
00003877= 41 34 3A 20               96  RA4            DC.B      'A4: '
0000387B= 41 35 3A 20               97  RA5            DC.B      'A5: '
0000387F= 41 36 3A 20               98  RA6            DC.B      'A6: '
00003883                            99  
00003883= 53 53 2F 41 37 3A 20     100  RSS            DC.B      'SS/A7: '
0000388A= 55 53 3A 20              101  RUS            DC.B      'US: '
0000388E= 50 43 3A 20              102  RPC            DC.B      'PC: '
00003892= 53 52 3A 20              103  RSR            DC.B      'SR: '
00003896                           104  
00003896                           105  *Exception Messages*
00003896= 41 20 42 75 73 20 ...    106  BERR_TEXT      DC.B 'A Bus Error Occured! :(',0
000038AE= 41 6E 20 41 64 64 ...    107  AERR_TEXT      DC.B 'An Address Error Occured! :(',0
000038CB= 41 6E 20 49 6C 6C ...    108  IERR_TEXT      DC.B 'An Illegal Instruction Error Occured! :(',0
000038F4= 41 20 50 72 69 76 ...    109  PERR_TEXT      DC.B 'A Privilege Error Occured! :(',0
00003912= 41 20 44 69 76 69 ...    110  ZERR_TEXT      DC.B 'A Divide by Zero Error Occured! :(',0
00003935= 41 6E 20 41 20 4C ...    111  ALERR_TEXT      DC.B 'An A Line Error Occured! :(',0
00003951= 41 6E 20 46 20 4C ...    112  FLERR_TEXT      DC.B 'An F Line Error Occured! :(',0
0000396D= 41 20 43 68 65 63 ...    113  CHKERR_TEXT      DC.B 'A Check Error Occured! :(',0
00003987                           114  
00003987= 53 53 57 3A 20 00        115  SSW            DC.B 'SSW: ',0
0000398D= 42 41 3A 20 00           116  BA             DC.B 'BA: ',0
00003992= 49 52 3A 20 00           117  IR             DC.B 'IR: ',0
00003997                           118  
00003997                           119  *Color definition for Font*
00003997  =01090000                120  FONT        EQU     $01090000  
00003997  =0000FF00                121  GREEN       EQU     $0000FF00
00003997                           122  
00001000                           123      ORG     $1000
00001000                           124  START:  
00001000  48E7 E040                125          MOVEM.L D0-D2/A1,-(SP)
00001004                           126          *Makes it look like a REAL terminal*
00001004  223C 0000FF00            127          MOVE.L  #GREEN,D1
0000100A  243C 01090000            128          MOVE.L  #FONT,D2
00001010  103C 0015                129          MOVE.B  #21,D0
00001014  4E4F                     130          TRAP    #15
00001016  4281                     131          CLR.L   D1
00001018  4282                     132          CLR.L   D2
0000101A  4200                     133          CLR.B   D0
0000101C                           134          *Load custom exceptions*
0000101C  43F9 000025A6            135          LEA BERR,A1 ;init exception handlers
00001022  21C9 0008                136          MOVE.L A1,$8
00001026  43F9 00002612            137          LEA AERR,A1
0000102C  21C9 000C                138          MOVE.L A1,$C
00001030  43F9 0000267E            139          LEA IERR,A1
00001036  21C9 0010                140          MOVE.L A1,$10
0000103A  43F9 000026AE            141          LEA ZERR,A1
00001040  21C9 0014                142          MOVE.L A1,$14
00001044  43F9 000026F6            143          LEA CHKERR,A1
0000104A  21C9 0018                144          MOVE.L  A1,$18
0000104E  43F9 00002696            145          LEA PERR,A1
00001054  21C9 0020                146          MOVE.L A1,$20
00001058  43F9 000026C6            147          LEA ALERR,A1
0000105E  21C9 0028                148          MOVE.L A1,$28
00001062  43F9 000026DE            149          LEA FLERR,A1
00001068  21C9 002C                150          MOVE.L A1,$2C
0000106C  4CDF 0207                151          MOVEM.L (SP)+,D0-D2/A1  ;restore any preset values
00001070                           152  
00001070                           153  *--------------------------------------------------------------------------------------*
00001070                           154  SHELL:       
00001070  4878 1070                155              PEA     *           ;save PC on Stack for DF
00001074  588F                     156              ADD.L   #4,SP       ;get original value of stack pointer
00001076  2F4F FFF8                157              MOVE.L  SP,-8(SP)   ;save it
0000107A  DFFC FFFFFFF8            158              ADD.L   #-8,SP      ;update Stack position
00001080  40E7                     159              MOVE    SR,-(SP)    ;save Status register for use with DF
00001082  2F0E                     160              MOVE.L  A6,-(SP)    ;temp save
00001084                           161              
00001084  4E6E                     162              MOVE    USP,A6      ;for use with DF command
00001086  2F0E                     163              MOVE.L  A6,-(SP)    ;store USP to STACK
00001088  588F                     164              ADD.L   #4,SP       
0000108A  2C57                     165              MOVE.L  (SP),A6    ;restore original value
0000108C  2F67 0004                166              MOVE.L  -(SP),4(SP)  ;move correct value to correct stack position
00001090  588F                     167              ADD.L   #4,SP       ;point stack to CORRECT PLACE
00001092                           168              
00001092                           169  
00001092  48E7 FFFE                170              MOVEM.L D0-D7/A0-A6,-(SP)  ;save initial values of registers
00001096  48E7 FFFE                171              MOVEM.L D0-D7/A0-A6,-(SP)  ;unorthodox implementation to save registers when using DF command
0000109A                           172               
0000109A                           173                
0000109A  43F8 3058                174              LEA  PROMPT,A1      ;Load message            
0000109E  323C 000B                175              MOVE.W  #11,D1      ;load n bytes
000010A2  103C 0001                176              MOVE.B  #1,D0       ;set up trap call
000010A6  4E4F                     177              TRAP    #15
000010A8  43F8 3000                178              LEA     BUFFER,A1   ;set up storage for command
000010AC  103C 0002                179              MOVE.B  #2,D0       ;load input trap call
000010B0  4E4F                     180              TRAP    #15
000010B2  0C11 0048                181              CMP.B   #$48,(A1)   ;check for help/hxdc
000010B6  6700 017C                182              BEQ     HELPORHXDC
000010BA  0C11 004D                183              CMP.B   #$4D,(A1)   ;check for memory command
000010BE  6700 01AC                184              BEQ     MEMTEST
000010C2  0C11 0047                185              CMP.B   #$47,(A1)   ;check for go
000010C6  6700 0154                186              BEQ     GOTST
000010CA  0C11 0044                187              CMP.B   #$44,(A1)   ;check for df
000010CE  6700 00FE                188              BEQ     DFTST
000010D2  0C11 0042                189              CMP.B   #$42,(A1)   ;check for blck command
000010D6  6700 005C                190              BEQ     BLCKTEST
000010DA  0C11 0053                191              CMP.B   #$53,(A1)   ;check for sort command
000010DE  6700 0106                192              BEQ     SORTTEST
000010E2  0C11 0045                193              CMP.B   #$45,(A1)   ;check for echo command
000010E6  6700 0026                194              BEQ     ECHOTEST
000010EA  0C11 002E                195              CMP.B   #$2E,(A1)   ;check for modify register command
000010EE  6700 0204                196              BEQ     MODIFYREGTEST
000010F2  6000 1726                197              BRA     UNKNOWNCMD
000010F6  4CDF 7FFF                198  RESTORE:    MOVEM.L (SP)+,D0-D7/A0-A6
000010FA  4CDF 7FFF                199              MOVEM.L (SP)+,D0-D7/A0-A6 ;double restore because of DF hack workaround
000010FE  588F                     200              ADD.L   #4,SP       ;account for USP, it'll fix itself (it shouldn't be used)
00001100                           201                                  ;EASY68k simulator starts in supervisor mode
00001100  46DF                     202              MOVE    (SP)+,SR
00001102  201F                     203              MOVE.L  (SP)+,D0    ;save stack cuz it'll get destroyed
00001104  588F                     204              ADD.L   #4,SP       ;get rid of PC, itll fix itself
00001106  2E40                     205              MOVE.L  D0,SP
00001108  4280                     206              CLR.L   D0          ;no longer needed
0000110A                           207  
0000110A  6000 FF64                208              BRA     SHELL
0000110E                           209  *--------------------------------------------------------------------------------------*
0000110E                           210  
0000110E  5289                     211  ECHOTEST:   ADD.L   #1,A1
00001110  0C19 0043                212              CMP.B   #$43,(A1)+   ;C?
00001114  6600 1704                213              BNE     UNKNOWNCMD
00001118  0C19 0048                214              CMP.B   #$48,(A1)+   ;H?
0000111C  6600 16FC                215              BNE     UNKNOWNCMD
00001120  0C19 004F                216              CMP.B   #$4F,(A1)+   ;O?
00001124  6600 16F4                217              BNE     UNKNOWNCMD
00001128  0C19 0020                218              CMP.B   #$20,(A1)+   ;SPACE?
0000112C  6700 01DC                219              BEQ     ECHO
00001130  6000 15DC                220              BRA     ERRORSR
00001134                           221  *--------------------------------------------------------------------------------------*
00001134                           222  
00001134                           223  
00001134                           224  *--------------------------------------------------------------------------------------*
00001134                           225  
00001134  5289                     226  BLCKTEST:   ADD.L   #1,A1
00001136  0C11 0046                227              CMP.B   #$46,(A1)   ;BF?
0000113A  6700 0084                228              BEQ     BFTEST
0000113E  0C11 004D                229              CMP.B   #$4D,(A1)   ;BMOV?
00001142  6700 005A                230              BEQ     BMOVTEST
00001146  0C11 0054                231              CMP.B   #$54,(A1)   ;BTST?
0000114A  6700 0030                232              BEQ     BTSTTEST
0000114E  0C11 0053                233              CMP.B   #$53,(A1)   ;BSCH?
00001152  6700 0006                234              BEQ     BSCHTEST
00001156  6000 16C2                235              BRA     UNKNOWNCMD
0000115A                           236  *--------------------------------------------------------------------------------------*
0000115A                           237  
0000115A  5289                     238  BSCHTEST:   ADD.L   #1,A1
0000115C  0C11 0043                239              CMP.B   #$43,(A1)
00001160  6600 16B8                240              BNE     UNKNOWNCMD
00001164  5289                     241              ADD.L   #1,A1
00001166  0C11 0048                242              CMP.B   #$48,(A1)
0000116A  6600 16AE                243              BNE     UNKNOWNCMD
0000116E  5289                     244              ADD.L   #1,A1
00001170  0C11 0020                245              CMP.B   #$20,(A1)
00001174  6600 1598                246              BNE     ERRORSR
00001178  6000 0FBC                247              BRA     BSCH
0000117C                           248                        
0000117C                           249  *--------------------------------------------------------------------------------------*
0000117C                           250  
0000117C                           251  BTSTTEST:   
0000117C  5289                     252              ADD.L   #1,A1
0000117E  0C11 0053                253              CMP.B   #$53,(A1)
00001182  6600 1696                254              BNE     UNKNOWNCMD
00001186  5289                     255              ADD.L   #1,A1
00001188  0C11 0054                256              CMP.B   #$54,(A1)
0000118C  6600 168C                257              BNE     UNKNOWNCMD
00001190  5289                     258              ADD.L   #1,A1
00001192  0C11 0020                259              CMP.B   #$20,(A1)
00001196  6600 1576                260              BNE     ERRORSR
0000119A  6000 0EC4                261              BRA     BTST
0000119E                           262  
0000119E                           263  *--------------------------------------------------------------------------------------*
0000119E                           264  
0000119E  5289                     265  BMOVTEST:   ADD.L   #1,A1
000011A0  0C11 004F                266              CMP.B   #$4F,(A1)
000011A4  6600 1674                267              BNE     UNKNOWNCMD
000011A8  5289                     268              ADD.L   #1,A1
000011AA  0C11 0056                269              CMP.B   #$56,(A1)
000011AE  6600 166A                270              BNE     UNKNOWNCMD
000011B2  5289                     271              ADD.L   #1,A1
000011B4  0C11 0020                272              CMP.B   #$20,(A1)
000011B8  6600 1554                273              BNE     ERRORSR
000011BC  6000 0E12                274              BRA     BMOV
000011C0                           275  *--------------------------------------------------------------------------------------*
000011C0  5289                     276  BFTEST:     ADD.L   #1,A1
000011C2  0C11 0020                277              CMP.B   #$20,(A1)
000011C6  6600 1546                278              BNE     ERRORSR
000011CA  6000 0D8E                279              BRA     BF
000011CE                           280  *--------------------------------------------------------------------------------------*
000011CE                           281  
000011CE  5289                     282  DFTST:      ADD.L   #1,A1
000011D0  0C11 0046                283              CMP.B   #$46,(A1)
000011D4  6600 1644                284              BNE     UNKNOWNCMD
000011D8  5289                     285              ADD.L   #1,A1
000011DA  0C11 0000                286              CMP.B   #$00,(A1)
000011DE  6600 152E                287              BNE     ERRORSR
000011E2  6000 1056                288              BRA     DF
000011E6                           289  *--------------------------------------------------------------------------------------*
000011E6                           290  
000011E6  5289                     291  SORTTEST:    ADD.L   #1,A1
000011E8  0C11 004F                292              CMP.B   #$4F,(A1)   ;O?
000011EC  6600 162C                293              BNE     UNKNOWNCMD
000011F0  5289                     294               ADD.L   #1,A1
000011F2  0C11 0052                295              CMP.B   #$52,(A1)   ;R?
000011F6  6600 1622                296              BNE     UNKNOWNCMD
000011FA  5289                     297              ADD.L   #1,A1
000011FC  0C11 0054                298              CMP.B   #$54,(A1)   ;T?
00001200  6600 1618                299              BNE     UNKNOWNCMD
00001204  5289                     300              ADD.L   #1,A1
00001206  0C11 0057                301              CMP.B   #$57,(A1)   ;W?
0000120A  6600 160E                302              BNE     UNKNOWNCMD
0000120E  5289                     303              ADD.L   #1,A1
00001210  0C11 0020                304              CMP.B   #$20,(A1)
00001214  6600 14F8                305              BNE     ERRORSR
00001218                           306  
00001218  6000 0912                307              BRA     SORTW
0000121C                           308  *--------------------------------------------------------------------------------------*
0000121C                           309  
0000121C  5289                     310  GOTST:      ADD.L   #1,A1
0000121E  0C11 004F                311              CMP.B   #$4F,(A1)
00001222  6600 15F6                312              BNE     UNKNOWNCMD
00001226  5289                     313              ADD.L   #1,A1
00001228  0C19 0020                314              CMP.B   #$20,(A1)+
0000122C  6600 14E0                315              BNE     ERRORSR
00001230  6000 0FEA                316              BRA     GO
00001234                           317  *--------------------------------------------------------------------------------------*
00001234                           318  
00001234  5289                     319  HELPORHXDC: ADD.L   #1,A1
00001236  0C11 0045                320              CMP.B   #$45,(A1)   ;is it help?
0000123A  6700 000E                321              BEQ     HELPTST
0000123E  0C11 0058                322              CMP.B   #$58,(A1)   ;or is it hxdc
00001242  6700 0084                323              BEQ     HXDCTEST
00001246  6000 15D2                324              BRA     UNKNOWNCMD     
0000124A                           325  *--------------------------------------------------------------------------------------*
0000124A                           326  
0000124A                           327  HELPTST:   
0000124A  5289                     328             ADD.L   #1,A1   ; check next char
0000124C  0C11 004C                329             CMP.B    #$4C,(A1) ;check for L
00001250  6600 15C8                330             BNE      UNKNOWNCMD
00001254  5289                     331             ADD.L   #1,A1
00001256  0C11 0050                332             CMP.B    #$50,(A1)   ;check for P
0000125A  6600 15BE                333             BNE      UNKNOWNCMD
0000125E  5289                     334             ADD.L   #1,A1   ;check for anything else
00001260  0C11 0000                335             CMP.B    #$00,(A1)
00001264  6600 14A8                336             BNE      ERRORSR
00001268  6000 050E                337             BRA      HELP
0000126C                           338              
0000126C                           339  
0000126C                           340   
0000126C                           341  *--------------------------------------------------------------------------------------*
0000126C                           342              
0000126C  5289                     343  MEMTEST:    ADD.L   #1,A1
0000126E  0C11 0053                344              CMP.B   #$53,(A1)
00001272  6700 0016                345              BEQ     MSSPCTEST
00001276  0C11 0044                346              CMP.B   #$44,(A1)
0000127A  6700 001C                347              BEQ     MDSPCTEST
0000127E  0C11 004D                348              CMP.B   #$4D,(A1)
00001282  6700 0036                349              BEQ     MMSPCTEST
00001286  6000 1592                350              BRA     UNKNOWNCMD
0000128A                           351              
0000128A  5289                     352  MSSPCTEST   ADD.L   #1,A1
0000128C  0C11 0020                353              CMP.B   #$20,(A1)
00001290  6700 072E                354              BEQ     MEMSET
00001294  6000 1478                355              BRA     ERRORSR
00001298                           356              
00001298                           357  MDSPCTEST:  
00001298  5289                     358              ADD.L   #1,A1
0000129A  0C11 0053                359              CMP.B   #$53,(A1)
0000129E  6600 146E                360              BNE     ERRORSR
000012A2  5289                     361              ADD.L   #1,A1
000012A4  0C11 0050                362              CMP.B   #$50,(A1)
000012A8  6600 1570                363              BNE     UNKNOWNCMD
000012AC  5289                     364              ADD.L   #1,A1
000012AE  0C11 0020                365              CMP.B   #$20,(A1)
000012B2  6700 0748                366              BEQ     MEMDISP          
000012B6  6000 1456                367              BRA     ERRORSR
000012BA                           368             
000012BA  5289                     369  MMSPCTEST:  ADD.L   #1,A1
000012BC  0C11 0020                370              CMP.B   #$20,(A1)
000012C0  6700 099E                371              BEQ     MM          
000012C4  6000 1448                372              BRA     ERRORSR
000012C8                           373  *--------------------------------------------------------------------------------------*
000012C8                           374  HXDCTEST:   
000012C8  5289                     375              ADD.L   #1,A1
000012CA  0C11 0044                376              CMP.B   #$44,(A1)
000012CE  6600 154A                377              BNE    UNKNOWNCMD
000012D2  5289                     378              ADD.L   #1,A1
000012D4  0C11 0045                379              CMP.B   #$45,(A1)
000012D8  6600 1540                380              BNE     UNKNOWNCMD
000012DC  5289                     381              ADD.L   #1,A1
000012DE  0C11 0043                382              CMP.B   #$43,(A1)
000012E2  6600 1536                383              BNE     UNKNOWNCMD
000012E6  5289                     384              ADD.L   #1,A1
000012E8  0C11 0020                385              CMP.B   #$20,(A1)
000012EC  6600 1420                386              BNE     ERRORSR
000012F0  6000 07AC                387              BRA     HXDC
000012F4                           388  *--------------------------------------------------------------------------------------*
000012F4                           389  MODIFYREGTEST:
000012F4  5289                     390              ADD.L   #1,A1
000012F6  0C11 0044                391              CMP.B   #$44,(A1)
000012FA  6700 0028                392              BEQ     MRD
000012FE  0C11 0041                393              CMP.B   #$41,(A1)
00001302  6700 0066                394              BEQ     MRA
00001306  6000 1512                395              BRA     UNKNOWNCMD
0000130A                           396              
0000130A                           397  *----------------------------USER DEFINED COMMANDS---------------------------------*
0000130A                           398  *--------------------------------------------------------------------------------------*
0000130A                           399  ECHO: *What terminal DOESN'T have echo?*
0000130A                           400  
0000130A  2449                     401          MOVE.L  A1,A2   ;setup to find end of string
0000130C  0C1A 0000                402  EEND:   CMP.B   #$00,(A2)+
00001310  6700 0004                403          BEQ     EFOUND
00001314  60F6                     404          BRA     EEND
00001316                           405  EFOUND:
00001316  538A                     406          SUB.L   #1,A2   ;off by one
00001318  95C9                     407          SUB.L   A1,A2   ;find out how many bytes
0000131A  220A                     408          MOVE.L  A2,D1   ;place it for trap function
0000131C  7000                     409          MOVE.L  #0,D0
0000131E  4E4F                     410          TRAP    #15
00001320                           411          
00001320  6000 FDD4                412          BRA RESTORE
00001324                           413  *--------------------------------------------------------------------------------------*
00001324                           414  MODIFYREGS:
00001324                           415  
00001324                           416  MRD:
00001324  5289                     417          ADD.L   #1,A1   ;inc
00001326  0C11 0030                418          CMP.B   #$30,(A1)
0000132A  6700 007C                419          BEQ     MRD0
0000132E  0C11 0031                420          CMP.B   #$31,(A1)
00001332  6700 00B4                421          BEQ     MRD1
00001336  0C11 0032                422          CMP.B   #$32,(A1)
0000133A  6700 00EC                423          BEQ     MRD2
0000133E  0C11 0033                424          CMP.B   #$33,(A1)
00001342  6700 0124                425          BEQ     MRD3
00001346  0C11 0034                426          CMP.B   #$34,(A1)
0000134A  6700 015C                427          BEQ     MRD4
0000134E  0C11 0035                428          CMP.B   #$35,(A1)
00001352  6700 0194                429          BEQ     MRD5
00001356  0C11 0036                430          CMP.B   #$36,(A1)
0000135A  6700 01CC                431          BEQ     MRD6
0000135E  0C11 0037                432          CMP.B   #$37,(A1)
00001362  6700 0204                433          BEQ     MRD7
00001366  6000 13A6                434          BRA     ERRORSR
0000136A                           435  
0000136A                           436  MRA:
0000136A  5289                     437          ADD.L   #1,A1   ;inc
0000136C  0C11 0030                438          CMP.B   #$30,(A1)
00001370  6700 0236                439          BEQ     MRA0
00001374  0C11 0031                440          CMP.B   #$31,(A1)
00001378  6700 026E                441          BEQ     MRA1
0000137C  0C11 0032                442          CMP.B   #$32,(A1)
00001380  6700 02A6                443          BEQ     MRA2
00001384  0C11 0033                444          CMP.B   #$33,(A1)
00001388  6700 02DE                445          BEQ     MRA3
0000138C  0C11 0034                446          CMP.B   #$34,(A1)
00001390  6700 0316                447          BEQ     MRA4
00001394  0C11 0035                448          CMP.B   #$35,(A1)
00001398  6700 034E                449          BEQ     MRA5
0000139C  0C11 0036                450          CMP.B   #$36,(A1)
000013A0  6700 0386                451          BEQ     MRA6
000013A4  6000 1368                452          BRA     ERRORSR
000013A8                           453               
000013A8                           454  
000013A8                           455  
000013A8                           456          
000013A8                           457          
000013A8                           458  MRD0: 
000013A8  5289                     459          ADD.L   #1,A1
000013AA  0C19 0020                460          CMP.B   #$20,(A1)+
000013AE  6600 135E                461          BNE     ERRORSR
000013B2  2449                     462          MOVE.L  A1,A2
000013B4  264A                     463          MOVE.L  A2,A3
000013B6  4EB9 00001768            464          JSR     MRDFINDDATA
000013BC  538B                     465          SUB.L   #1,A3
000013BE  4EB9 0000275A            466          JSR     ASCII_ADDRESS   ;convert data to hex
000013C4  2F05                     467          MOVE.L  D5,-(SP)        ;store it temporarily
000013C6  588F                     468          ADD.L   #4,SP       ;dont lose data
000013C8  4CDF 7FFF                469          MOVEM.L (SP)+,D0-D7/A0-A6
000013CC  4CDF 7FFF                470          MOVEM.L (SP)+,D0-D7/A0-A6 ;double restore because of DF hack workaround
000013D0  588F                     471          ADD.L   #4,SP       ;account for USP, it'll fix itself (it shouldn't be used)
000013D2                           472                                  ;EASY68k simulator starts in supervisor mode
000013D2  46DF                     473          MOVE    (SP)+,SR
000013D4  588F                     474          ADD.L   #4,SP       ;skip saved stack
000013D6  9FFC 00000086            475          SUB.L   #134,SP     ;find data again
000013DC  2017                     476          MOVE.L  (SP),D0
000013DE  DFFC 0000008A            477          ADD.L   #138,SP     ;go back to original spot
000013E4  6000 FC8A                478          BRA     SHELL
000013E8                           479               
000013E8                           480  MRD1:
000013E8  5289                     481          ADD.L   #1,A1
000013EA  0C19 0020                482          CMP.B   #$20,(A1)+
000013EE  6600 131E                483          BNE     ERRORSR
000013F2  2449                     484          MOVE.L  A1,A2
000013F4  264A                     485          MOVE.L  A2,A3
000013F6  4EB9 00001768            486          JSR     MRDFINDDATA
000013FC  538B                     487          SUB.L   #1,A3
000013FE  4EB9 0000275A            488          JSR     ASCII_ADDRESS   ;convert data to hex
00001404  2F05                     489          MOVE.L  D5,-(SP)        ;store it temporarily
00001406  588F                     490          ADD.L   #4,SP       ;dont lose data
00001408  4CDF 7FFF                491          MOVEM.L (SP)+,D0-D7/A0-A6
0000140C  4CDF 7FFF                492          MOVEM.L (SP)+,D0-D7/A0-A6 ;double restore because of DF hack workaround
00001410  588F                     493          ADD.L   #4,SP       ;account for USP, it'll fix itself (it shouldn't be used)
00001412                           494                                  ;EASY68k simulator starts in supervisor mode
00001412  46DF                     495          MOVE    (SP)+,SR
00001414  588F                     496          ADD.L   #4,SP       ;skip saved stack
00001416  9FFC 00000086            497          SUB.L   #134,SP     ;find data again
0000141C  2217                     498          MOVE.L  (SP),D1
0000141E  DFFC 0000008A            499          ADD.L   #138,SP     ;go back to original spot
00001424  6000 FC4A                500          BRA     SHELL
00001428                           501  
00001428                           502  MRD2:
00001428  5289                     503          ADD.L   #1,A1
0000142A  0C19 0020                504          CMP.B   #$20,(A1)+
0000142E  6600 12DE                505          BNE     ERRORSR
00001432  2449                     506          MOVE.L  A1,A2
00001434  264A                     507          MOVE.L  A2,A3
00001436  4EB9 00001768            508          JSR     MRDFINDDATA
0000143C  538B                     509          SUB.L   #1,A3
0000143E  4EB9 0000275A            510          JSR     ASCII_ADDRESS   ;convert data to hex
00001444  2F05                     511          MOVE.L  D5,-(SP)        ;store it temporarily
00001446  588F                     512          ADD.L   #4,SP       ;dont lose data
00001448  4CDF 7FFF                513          MOVEM.L (SP)+,D0-D7/A0-A6
0000144C  4CDF 7FFF                514          MOVEM.L (SP)+,D0-D7/A0-A6 ;double restore because of DF hack workaround
00001450  588F                     515          ADD.L   #4,SP       ;account for USP, it'll fix itself (it shouldn't be used)
00001452                           516                                  ;EASY68k simulator starts in supervisor mode
00001452  46DF                     517          MOVE    (SP)+,SR
00001454  588F                     518          ADD.L   #4,SP       ;skip saved stack
00001456  9FFC 00000086            519          SUB.L   #134,SP     ;find data again
0000145C  2417                     520          MOVE.L  (SP),D2
0000145E  DFFC 0000008A            521          ADD.L   #138,SP     ;go back to original spot
00001464  6000 FC0A                522          BRA     SHELL
00001468                           523  
00001468                           524  MRD3:
00001468  5289                     525          ADD.L   #1,A1
0000146A  0C19 0020                526          CMP.B   #$20,(A1)+
0000146E  6600 129E                527          BNE     ERRORSR
00001472  2449                     528          MOVE.L  A1,A2
00001474  264A                     529          MOVE.L  A2,A3
00001476  4EB9 00001768            530          JSR     MRDFINDDATA
0000147C  538B                     531          SUB.L   #1,A3
0000147E  4EB9 0000275A            532          JSR     ASCII_ADDRESS   ;convert data to hex
00001484  2F05                     533          MOVE.L  D5,-(SP)        ;store it temporarily
00001486  588F                     534          ADD.L   #4,SP       ;dont lose data
00001488  4CDF 7FFF                535          MOVEM.L (SP)+,D0-D7/A0-A6
0000148C  4CDF 7FFF                536          MOVEM.L (SP)+,D0-D7/A0-A6 ;double restore because of DF hack workaround
00001490  588F                     537          ADD.L   #4,SP       ;account for USP, it'll fix itself (it shouldn't be used)
00001492                           538                                  ;EASY68k simulator starts in supervisor mode
00001492  46DF                     539          MOVE    (SP)+,SR
00001494  588F                     540          ADD.L   #4,SP       ;skip saved stack
00001496  9FFC 00000086            541          SUB.L   #134,SP     ;find data again
0000149C  2617                     542          MOVE.L  (SP),D3
0000149E  DFFC 0000008A            543          ADD.L   #138,SP     ;go back to original spot
000014A4  6000 FBCA                544          BRA     SHELL
000014A8                           545  
000014A8                           546  MRD4:
000014A8  5289                     547          ADD.L   #1,A1
000014AA  0C19 0020                548          CMP.B   #$20,(A1)+
000014AE  6600 125E                549          BNE     ERRORSR
000014B2  2449                     550          MOVE.L  A1,A2
000014B4  264A                     551          MOVE.L  A2,A3
000014B6  4EB9 00001768            552          JSR     MRDFINDDATA
000014BC  538B                     553          SUB.L   #1,A3
000014BE  4EB9 0000275A            554          JSR     ASCII_ADDRESS   ;convert data to hex
000014C4  2F05                     555          MOVE.L  D5,-(SP)        ;store it temporarily
000014C6  588F                     556          ADD.L   #4,SP       ;dont lose data
000014C8  4CDF 7FFF                557          MOVEM.L (SP)+,D0-D7/A0-A6
000014CC  4CDF 7FFF                558          MOVEM.L (SP)+,D0-D7/A0-A6 ;double restore because of DF hack workaround
000014D0  588F                     559          ADD.L   #4,SP       ;account for USP, it'll fix itself (it shouldn't be used)
000014D2                           560                                  ;EASY68k simulator starts in supervisor mode
000014D2  46DF                     561          MOVE    (SP)+,SR
000014D4  588F                     562          ADD.L   #4,SP       ;skip saved stack
000014D6  9FFC 00000086            563          SUB.L   #134,SP     ;find data again
000014DC  2817                     564          MOVE.L  (SP),D4
000014DE  DFFC 0000008A            565          ADD.L   #138,SP     ;go back to original spot
000014E4  6000 FB8A                566          BRA     SHELL
000014E8                           567  
000014E8                           568  MRD5:
000014E8  5289                     569          ADD.L   #1,A1
000014EA  0C19 0020                570          CMP.B   #$20,(A1)+
000014EE  6600 121E                571          BNE     ERRORSR
000014F2  2449                     572          MOVE.L  A1,A2
000014F4  264A                     573          MOVE.L  A2,A3
000014F6  4EB9 00001768            574          JSR     MRDFINDDATA
000014FC  538B                     575          SUB.L   #1,A3
000014FE  4EB9 0000275A            576          JSR     ASCII_ADDRESS   ;convert data to hex
00001504  2F05                     577          MOVE.L  D5,-(SP)        ;store it temporarily
00001506  588F                     578          ADD.L   #4,SP       ;dont lose data
00001508  4CDF 7FFF                579          MOVEM.L (SP)+,D0-D7/A0-A6
0000150C  4CDF 7FFF                580          MOVEM.L (SP)+,D0-D7/A0-A6 ;double restore because of DF hack workaround
00001510  588F                     581          ADD.L   #4,SP       ;account for USP, it'll fix itself (it shouldn't be used)
00001512                           582                                  ;EASY68k simulator starts in supervisor mode
00001512  46DF                     583          MOVE    (SP)+,SR
00001514  588F                     584          ADD.L   #4,SP       ;skip saved stack
00001516  9FFC 00000086            585          SUB.L   #134,SP     ;find data again
0000151C  2A17                     586          MOVE.L  (SP),D5
0000151E  DFFC 0000008A            587          ADD.L   #138,SP     ;go back to original spot
00001524  6000 FB4A                588          BRA     SHELL
00001528                           589  
00001528                           590  MRD6:
00001528  5289                     591          ADD.L   #1,A1
0000152A  0C19 0020                592          CMP.B   #$20,(A1)+
0000152E  6600 11DE                593          BNE     ERRORSR
00001532  2449                     594          MOVE.L  A1,A2
00001534  264A                     595          MOVE.L  A2,A3
00001536  4EB9 00001768            596          JSR     MRDFINDDATA
0000153C  538B                     597          SUB.L   #1,A3
0000153E  4EB9 0000275A            598          JSR     ASCII_ADDRESS   ;convert data to hex
00001544  2F05                     599          MOVE.L  D5,-(SP)        ;store it temporarily
00001546  588F                     600          ADD.L   #4,SP       ;dont lose data
00001548  4CDF 7FFF                601          MOVEM.L (SP)+,D0-D7/A0-A6
0000154C  4CDF 7FFF                602          MOVEM.L (SP)+,D0-D7/A0-A6 ;double restore because of DF hack workaround
00001550  588F                     603          ADD.L   #4,SP       ;account for USP, it'll fix itself (it shouldn't be used)
00001552                           604                                  ;EASY68k simulator starts in supervisor mode
00001552  46DF                     605          MOVE    (SP)+,SR
00001554  588F                     606          ADD.L   #4,SP       ;skip saved stack
00001556  9FFC 00000086            607          SUB.L   #134,SP     ;find data again
0000155C  2C17                     608          MOVE.L  (SP),D6
0000155E  DFFC 0000008A            609          ADD.L   #138,SP     ;go back to original spot
00001564  6000 FB0A                610          BRA     SHELL
00001568                           611  
00001568                           612  MRD7:
00001568  5289                     613          ADD.L   #1,A1
0000156A  0C19 0020                614          CMP.B   #$20,(A1)+
0000156E  6600 119E                615          BNE     ERRORSR
00001572  2449                     616          MOVE.L  A1,A2
00001574  264A                     617          MOVE.L  A2,A3
00001576  4EB9 00001768            618          JSR     MRDFINDDATA
0000157C  538B                     619          SUB.L   #1,A3
0000157E  4EB9 0000275A            620          JSR     ASCII_ADDRESS   ;convert data to hex
00001584  2F05                     621          MOVE.L  D5,-(SP)        ;store it temporarily
00001586  588F                     622          ADD.L   #4,SP       ;dont lose data
00001588  4CDF 7FFF                623          MOVEM.L (SP)+,D0-D7/A0-A6
0000158C  4CDF 7FFF                624          MOVEM.L (SP)+,D0-D7/A0-A6 ;double restore because of DF hack workaround
00001590  588F                     625          ADD.L   #4,SP       ;account for USP, it'll fix itself (it shouldn't be used)
00001592                           626                                  ;EASY68k simulator starts in supervisor mode
00001592  46DF                     627          MOVE    (SP)+,SR
00001594  588F                     628         ADD.L   #4,SP       ;skip saved stack
00001596  9FFC 00000086            629          SUB.L   #134,SP     ;find data again
0000159C  2E17                     630          MOVE.L  (SP),D7
0000159E  DFFC 0000008A            631          ADD.L   #138,SP     ;go back to original spot
000015A4  6000 FACA                632          BRA     SHELL
000015A8                           633  
000015A8                           634  MRA0:
000015A8  5289                     635          ADD.L   #1,A1
000015AA  0C19 0020                636          CMP.B   #$20,(A1)+
000015AE  6600 115E                637          BNE     ERRORSR
000015B2  2449                     638          MOVE.L  A1,A2
000015B4  264A                     639          MOVE.L  A2,A3
000015B6  4EB9 00001768            640          JSR     MRDFINDDATA
000015BC  538B                     641          SUB.L   #1,A3
000015BE  4EB9 0000275A            642          JSR     ASCII_ADDRESS   ;convert data to hex
000015C4  2F05                     643          MOVE.L  D5,-(SP)        ;store it temporarily
000015C6  588F                     644          ADD.L   #4,SP       ;dont lose data
000015C8  4CDF 7FFF                645          MOVEM.L (SP)+,D0-D7/A0-A6
000015CC  4CDF 7FFF                646          MOVEM.L (SP)+,D0-D7/A0-A6 ;double restore because of DF hack workaround
000015D0  588F                     647          ADD.L   #4,SP       ;account for USP, it'll fix itself (it shouldn't be used)
000015D2                           648                                  ;EASY68k simulator starts in supervisor mode
000015D2  46DF                     649          MOVE    (SP)+,SR
000015D4  588F                     650          ADD.L   #4,SP       ;skip saved stack
000015D6  9FFC 00000086            651          SUB.L   #134,SP     ;find data again
000015DC  2057                     652          MOVE.L  (SP),A0
000015DE  DFFC 0000008A            653          ADD.L   #138,SP     ;go back to original spot
000015E4  6000 FA8A                654          BRA     SHELL
000015E8                           655  MRA1:
000015E8  5289                     656          ADD.L   #1,A1
000015EA  0C19 0020                657          CMP.B   #$20,(A1)+
000015EE  6600 111E                658          BNE     ERRORSR
000015F2  2449                     659          MOVE.L  A1,A2
000015F4  264A                     660          MOVE.L  A2,A3
000015F6  4EB9 00001768            661          JSR     MRDFINDDATA
000015FC  538B                     662          SUB.L   #1,A3
000015FE  4EB9 0000275A            663          JSR     ASCII_ADDRESS   ;convert data to hex
00001604  2F05                     664          MOVE.L  D5,-(SP)        ;store it temporarily
00001606  588F                     665          ADD.L   #4,SP       ;dont lose data
00001608  4CDF 7FFF                666          MOVEM.L (SP)+,D0-D7/A0-A6
0000160C  4CDF 7FFF                667          MOVEM.L (SP)+,D0-D7/A0-A6 ;double restore because of DF hack workaround
00001610  588F                     668          ADD.L   #4,SP       ;account for USP, it'll fix itself (it shouldn't be used)
00001612                           669                                  ;EASY68k simulator starts in supervisor mode
00001612  46DF                     670          MOVE    (SP)+,SR
00001614  588F                     671         ADD.L   #4,SP       ;skip saved stack
00001616  9FFC 00000086            672          SUB.L   #134,SP     ;find data again
0000161C  2257                     673          MOVE.L  (SP),A1
0000161E  DFFC 0000008A            674          ADD.L   #138,SP     ;go back to original spot
00001624  6000 FA4A                675          BRA     SHELL
00001628                           676  
00001628                           677  MRA2:
00001628  5289                     678          ADD.L   #1,A1
0000162A  0C19 0020                679          CMP.B   #$20,(A1)+
0000162E  6600 10DE                680          BNE     ERRORSR
00001632  2449                     681          MOVE.L  A1,A2
00001634  264A                     682          MOVE.L  A2,A3
00001636  4EB9 00001768            683          JSR     MRDFINDDATA
0000163C  538B                     684          SUB.L   #1,A3
0000163E  4EB9 0000275A            685          JSR     ASCII_ADDRESS   ;convert data to hex
00001644  2F05                     686          MOVE.L  D5,-(SP)        ;store it temporarily
00001646  588F                     687          ADD.L   #4,SP       ;dont lose data
00001648  4CDF 7FFF                688          MOVEM.L (SP)+,D0-D7/A0-A6
0000164C  4CDF 7FFF                689          MOVEM.L (SP)+,D0-D7/A0-A6 ;double restore because of DF hack workaround
00001650  588F                     690          ADD.L   #4,SP       ;account for USP, it'll fix itself (it shouldn't be used)
00001652                           691                                  ;EASY68k simulator starts in supervisor mode
00001652  46DF                     692          MOVE    (SP)+,SR
00001654  588F                     693          ADD.L   #4,SP       ;skip saved stack
00001656  9FFC 00000086            694          SUB.L   #134,SP     ;find data again
0000165C  2457                     695          MOVE.L  (SP),A2
0000165E  DFFC 0000008A            696          ADD.L   #138,SP     ;go back to original spot
00001664  6000 FA0A                697          BRA     SHELL
00001668                           698          
00001668                           699  MRA3:
00001668  5289                     700          ADD.L   #1,A1
0000166A  0C19 0020                701          CMP.B   #$20,(A1)+
0000166E  6600 109E                702          BNE     ERRORSR
00001672  2449                     703          MOVE.L  A1,A2
00001674  264A                     704          MOVE.L  A2,A3
00001676  4EB9 00001768            705          JSR     MRDFINDDATA
0000167C  538B                     706          SUB.L   #1,A3
0000167E  4EB9 0000275A            707          JSR     ASCII_ADDRESS   ;convert data to hex
00001684  2F05                     708          MOVE.L  D5,-(SP)        ;store it temporarily
00001686  588F                     709          ADD.L   #4,SP       ;dont lose data
00001688  4CDF 7FFF                710          MOVEM.L (SP)+,D0-D7/A0-A6
0000168C  4CDF 7FFF                711          MOVEM.L (SP)+,D0-D7/A0-A6 ;double restore because of DF hack workaround
00001690  588F                     712          ADD.L   #4,SP       ;account for USP, it'll fix itself (it shouldn't be used)
00001692                           713                                  ;EASY68k simulator starts in supervisor mode
00001692  46DF                     714          MOVE    (SP)+,SR
00001694  588F                     715          ADD.L   #4,SP       ;skip saved stack
00001696  9FFC 00000086            716          SUB.L   #134,SP     ;find data again
0000169C  2657                     717          MOVE.L  (SP),A3
0000169E  DFFC 0000008A            718          ADD.L   #138,SP     ;go back to original spot
000016A4  6000 F9CA                719          BRA     SHELL
000016A8                           720  
000016A8                           721  MRA4:
000016A8  5289                     722          ADD.L   #1,A1
000016AA  0C19 0020                723          CMP.B   #$20,(A1)+
000016AE  6600 105E                724          BNE     ERRORSR
000016B2  2449                     725          MOVE.L  A1,A2
000016B4  264A                     726          MOVE.L  A2,A3
000016B6  4EB9 00001768            727          JSR     MRDFINDDATA
000016BC  538B                     728          SUB.L   #1,A3
000016BE  4EB9 0000275A            729          JSR     ASCII_ADDRESS   ;convert data to hex
000016C4  2F05                     730          MOVE.L  D5,-(SP)        ;store it temporarily
000016C6  588F                     731          ADD.L   #4,SP       ;dont lose data
000016C8  4CDF 7FFF                732          MOVEM.L (SP)+,D0-D7/A0-A6
000016CC  4CDF 7FFF                733          MOVEM.L (SP)+,D0-D7/A0-A6 ;double restore because of DF hack workaround
000016D0  588F                     734          ADD.L   #4,SP       ;account for USP, it'll fix itself (it shouldn't be used)
000016D2                           735                                  ;EASY68k simulator starts in supervisor mode
000016D2  46DF                     736          MOVE    (SP)+,SR
000016D4  588F                     737          ADD.L   #4,SP       ;skip saved stack
000016D6  9FFC 00000086            738          SUB.L   #134,SP     ;find data again
000016DC  2857                     739          MOVE.L  (SP),A4
000016DE  DFFC 0000008A            740          ADD.L   #138,SP     ;go back to original spot
000016E4  6000 F98A                741          BRA     SHELL
000016E8                           742  
000016E8                           743  MRA5:
000016E8  5289                     744          ADD.L   #1,A1
000016EA  0C19 0020                745          CMP.B   #$20,(A1)+
000016EE  6600 101E                746          BNE     ERRORSR
000016F2  2449                     747          MOVE.L  A1,A2
000016F4  264A                     748          MOVE.L  A2,A3
000016F6  4EB9 00001768            749          JSR     MRDFINDDATA
000016FC  538B                     750          SUB.L   #1,A3
000016FE  4EB9 0000275A            751          JSR     ASCII_ADDRESS   ;convert data to hex
00001704  2F05                     752          MOVE.L  D5,-(SP)        ;store it temporarily
00001706  588F                     753          ADD.L   #4,SP       ;dont lose data
00001708  4CDF 7FFF                754          MOVEM.L (SP)+,D0-D7/A0-A6
0000170C  4CDF 7FFF                755          MOVEM.L (SP)+,D0-D7/A0-A6 ;double restore because of DF hack workaround
00001710  588F                     756          ADD.L   #4,SP       ;account for USP, it'll fix itself (it shouldn't be used)
00001712                           757                                  ;EASY68k simulator starts in supervisor mode
00001712  46DF                     758          MOVE    (SP)+,SR
00001714  588F                     759         ADD.L   #4,SP       ;skip saved stack
00001716  9FFC 00000086            760          SUB.L   #134,SP     ;find data again
0000171C  2A57                     761          MOVE.L  (SP),A5
0000171E  DFFC 0000008A            762          ADD.L   #138,SP     ;go back to original spot
00001724  6000 F94A                763          BRA     SHELL
00001728                           764  
00001728                           765  MRA6:
00001728  5289                     766          ADD.L   #1,A1
0000172A  0C19 0020                767          CMP.B   #$20,(A1)+
0000172E  6600 0FDE                768          BNE     ERRORSR
00001732  2449                     769          MOVE.L  A1,A2
00001734  264A                     770          MOVE.L  A2,A3
00001736  4EB9 00001768            771          JSR     MRDFINDDATA
0000173C  538B                     772          SUB.L   #1,A3
0000173E  4EB9 0000275A            773          JSR     ASCII_ADDRESS   ;convert data to hex
00001744  2F05                     774          MOVE.L  D5,-(SP)        ;store it temporarily
00001746  588F                     775          ADD.L   #4,SP       ;dont lose data
00001748  4CDF 7FFF                776          MOVEM.L (SP)+,D0-D7/A0-A6
0000174C  4CDF 7FFF                777          MOVEM.L (SP)+,D0-D7/A0-A6 ;double restore because of DF hack workaround
00001750  588F                     778          ADD.L   #4,SP       ;account for USP, it'll fix itself (it shouldn't be used)
00001752                           779                                  ;EASY68k simulator starts in supervisor mode
00001752  46DF                     780          MOVE    (SP)+,SR
00001754  588F                     781          ADD.L   #4,SP       ;skip saved stack
00001756  9FFC 00000086            782          SUB.L   #134,SP     ;find data again
0000175C  2C57                     783          MOVE.L  (SP),A6
0000175E  DFFC 0000008A            784          ADD.L   #138,SP     ;go back to original spot
00001764  6000 F90A                785          BRA     SHELL
00001768                           786  
00001768                           787  MRDFINDDATA:
00001768  0C1B 0000                788          CMP.B   #$00,(A3)+
0000176C  6700 0004                789          BEQ     GOBACK
00001770  60F6                     790          BRA     MRDFINDDATA
00001772  4E75                     791  GOBACK: RTS
00001774                           792          
00001774                           793  
00001774  6000 F980                794          BRA RESTORE
00001778                           795  *--------------------REQUIRED COMMAND DEFINITION START---------------------------------*
00001778                           796  *--------------------------------------------------------------------------------------*
00001778  43F8 3063                797  HELP:       LEA     HTXT,A1     ;list of commands test
0000177C  323C 0011                798              MOVE.W  #17,D1
00001780  103C 0000                799              MOVE.B  #0,D0
00001784  4E4F                     800              TRAP    #15
00001786  323C 0000                801              MOVE.W  #0,D1       ;newline
0000178A  4E4F                     802              TRAP    #15
0000178C                           803              
0000178C  43F8 3074                804              LEA     HTXT1,A1    ;mem display command
00001790  323C 004B                805              MOVE.W  #75,D1
00001794  103C 0000                806              MOVE.B  #0,D0
00001798  4E4F                     807              TRAP    #15
0000179A  43F8 30BF                808              LEA     HTXT1A,A1   ;mem display
0000179E  323C 003D                809              MOVE.W  #61,D1
000017A2  103C 0000                810              MOVE.B  #0,D0
000017A6  4E4F                     811              TRAP    #15
000017A8  43F8 30FC                812              LEA     HTXT1B,A1   ;mem display
000017AC  323C 0014                813              MOVE.W  #20,D1
000017B0  103C 0000                814              MOVE.B  #0,D0
000017B4  4E4F                     815              TRAP    #15
000017B6  323C 0000                816              MOVE.W  #0,D1       ;newline
000017BA  4E4F                     817              TRAP    #15
000017BC                           818              
000017BC  43F8 3110                819              LEA     HTXT2,A1    ;hxdec command text
000017C0  323C 004B                820              MOVE.W  #75,D1
000017C4  103C 0000                821              MOVE.B  #0,D0
000017C8  4E4F                     822              TRAP    #15
000017CA  123C 0000                823              MOVE.B  #0,D1       ;newline
000017CE  4E4F                     824              TRAP    #15
000017D0                           825              
000017D0  43F8 315B                826              LEA     HTXT3,A1    ;sort command text
000017D4  323C 0045                827              MOVE.W  #69,D1
000017D8  103C 0000                828              MOVE.B  #0,D0
000017DC  4E4F                     829              TRAP    #15
000017DE  43F8 31A0                830              LEA     HTXT3A,A1    ;sort command text continued
000017E2  323C 0039                831              MOVE.W  #57,D1
000017E6  103C 0000                832              MOVE.B  #0,D0
000017EA  4E4F                     833              TRAP    #15
000017EC  43F8 31D9                834              LEA     HTXT3B,A1    ;sort command text continued
000017F0  323C 0014                835              MOVE.W  #20,D1
000017F4  103C 0000                836              MOVE.B  #0,D0
000017F8  4E4F                     837              TRAP    #15
000017FA  43F8 31ED                838              LEA     HTXT3C,A1    ;sort command text continued
000017FE  323C 0015                839              MOVE.W  #21,D1
00001802  103C 0000                840              MOVE.B  #0,D0
00001806  4E4F                     841              TRAP    #15
00001808  43F8 3202                842              LEA     HTXT3D,A1    ;sort command text continued
0000180C  323C 001D                843              MOVE.W  #29,D1
00001810  103C 0000                844              MOVE.B  #0,D0
00001814  4E4F                     845              TRAP    #15
00001816  43F8 321F                846              LEA     HTXT3E,A1    ;sort command text continued
0000181A  323C 0033                847              MOVE.W  #51,D1
0000181E  103C 0000                848              MOVE.B  #0,D0
00001822  4E4F                     849              TRAP    #15
00001824  123C 0000                850              MOVE.B  #0,D1       ;newline
00001828  4E4F                     851              TRAP    #15
0000182A                           852              
0000182A  43F8 3252                853              LEA     HTXT4,A1    ;memory modify command text 
0000182E  323C 0047                854              MOVE.W  #71,D1
00001832  103C 0000                855              MOVE.B  #0,D0
00001836  4E4F                     856              TRAP    #15
00001838  43F8 3299                857              LEA     HTXT4A,A1    ;mem modify command text continued
0000183C  323C 0045                858              MOVE.W  #69,D1
00001840  103C 0000                859              MOVE.B  #0,D0
00001844  4E4F                     860              TRAP    #15
00001846  43F8 32DE                861              LEA     HTXT4B,A1    ;mem modify command text continued
0000184A  323C 001B                862              MOVE.W  #27,D1
0000184E  103C 0000                863              MOVE.B  #0,D0
00001852  4E4F                     864              TRAP    #15
00001854  43F8 32F9                865              LEA     HTXT4C,A1    ;mem modify command text continued
00001858  323C 001E                866              MOVE.W  #30,D1
0000185C  103C 0000                867              MOVE.B  #0,D0
00001860  4E4F                     868              TRAP    #15
00001862  43F8 3317                869              LEA     HTXT4D,A1    ;mem modify command text continued
00001866  323C 001F                870              MOVE.W  #31,D1
0000186A  103C 0000                871              MOVE.B  #0,D0
0000186E  4E4F                     872              TRAP    #15
00001870  43F8 3336                873              LEA     HTXT4E,A1    ;mem modify command text continued
00001874  323C 0024                874              MOVE.W  #36,D1
00001878  103C 0000                875              MOVE.B  #0,D0
0000187C  4E4F                     876              TRAP    #15
0000187E  123C 0000                877              MOVE.B  #0,D1
00001882  4E4F                     878              TRAP    #15         ;newline
00001884                           879              
00001884  43F8 335A                880              LEA     HTXT5,A1    ;memory set command text 
00001888  323C 0046                881              MOVE.W  #70,D1
0000188C  103C 0000                882              MOVE.B  #0,D0
00001890  4E4F                     883              TRAP    #15
00001892  43F8 33A0                884              LEA     HTXT5A,A1    ;memory set command text continued
00001896  323C 001C                885              MOVE.W  #28,D1
0000189A  103C 0000                886              MOVE.B  #0,D0
0000189E  4E4F                     887              TRAP    #15
000018A0  123C 0000                888              MOVE.B  #0,D1       ;newline
000018A4  4E4F                     889              TRAP    #15
000018A6                           890              
000018A6  43F8 33BC                891              LEA     HTXT6,A1    ;block fill command text
000018AA  323C 0046                892              MOVE.W  #70,D1
000018AE  103C 0000                893              MOVE.B  #0,D0
000018B2  4E4F                     894              TRAP    #15
000018B4  43F8 3402                895              LEA     HTXT6A,A1    ;block fill command text
000018B8  323C 0048                896              MOVE.W  #72,D1
000018BC  103C 0000                897              MOVE.B  #0,D0
000018C0  4E4F                     898              TRAP    #15
000018C2  43F8 344A                899              LEA     HTXT6B,A1    ;block fill command text
000018C6  323C 0026                900              MOVE.W  #38,D1
000018CA  103C 0000                901              MOVE.B  #0,D0
000018CE  4E4F                     902              TRAP    #15
000018D0  123C 0000                903              MOVE.B  #0,D1
000018D4  4E4F                     904              TRAP    #15         ;newline
000018D6                           905              
000018D6                           906              
000018D6  43F8 3470                907              LEA     HTXT7,A1    ;block move command text
000018DA  323C 0044                908              MOVE.W  #68,D1
000018DE  103C 0000                909              MOVE.B  #0,D0
000018E2  4E4F                     910              TRAP    #15
000018E4  43F8 34B4                911              LEA     HTXT7A,A1    ;block move command text
000018E8  323C 0048                912              MOVE.W  #72,D1
000018EC  103C 0000                913              MOVE.B  #0,D0
000018F0  4E4F                     914              TRAP    #15
000018F2  43F8 34FC                915              LEA     HTXT7B,A1    ;block move command text
000018F6  323C 0018                916              MOVE.W  #24,D1
000018FA  103C 0000                917              MOVE.B  #0,D0
000018FE  4E4F                     918              TRAP    #15
00001900  123C 0000                919              MOVE.B  #0,D1       ;newline
00001904  4E4F                     920              TRAP    #15
00001906                           921              
00001906  43F8 3514                922              LEA     HTXT8,A1    ;block test command text
0000190A  323C 0047                923              MOVE.W  #71,D1
0000190E  103C 0000                924              MOVE.B  #0,D0
00001912  4E4F                     925              TRAP    #15
00001914  43F8 355B                926              LEA     HTXT8A,A1    ;block test command text
00001918  323C 003B                927              MOVE.W  #59,D1
0000191C  103C 0000                928              MOVE.B  #0,D0
00001920  4E4F                     929              TRAP    #15
00001922  123C 0000                930              MOVE.B  #0,D1       ;newline
00001926  4E4F                     931              TRAP    #15
00001928                           932              
00001928  43F8 3596                933              LEA     HTXT9,A1    ;block search command text
0000192C  323C 0046                934              MOVE.W  #70,D1
00001930  103C 0000                935              MOVE.B  #0,D0
00001934  4E4F                     936              TRAP    #15
00001936  43F8 35DE                937              LEA     HTXT9A,A1    ;block search command text
0000193A  323C 002D                938              MOVE.W  #45,D1
0000193E  103C 0000                939              MOVE.B  #0,D0
00001942  4E4F                     940              TRAP    #15
00001944  123C 0000                941              MOVE.B  #0,D1       ;newline
00001948  4E4F                     942              TRAP    #15
0000194A                           943              
0000194A  43F8 360B                944              LEA     HTXT10,A1    ;go command text
0000194E  323C 003D                945              MOVE.W  #61,D1
00001952  103C 0000                946              MOVE.B  #0,D0
00001956  4E4F                     947              TRAP    #15
00001958  123C 0000                948              MOVE.B  #0,D1      ;newline
0000195C  4E4F                     949              TRAP    #15
0000195E                           950  
0000195E  43F8 3648                951              LEA     HTXT11,A1   ;df command text   
00001962  323C 0038                952              MOVE.W  #56,D1
00001966  103C 0000                953              MOVE.B  #0,D0
0000196A  4E4F                     954              TRAP    #15
0000196C  123C 0000                955              MOVE.B  #0,D1
00001970  4E4F                     956              TRAP    #15
00001972                           957              
00001972  43F8 3680                958              LEA     HTXT12,A1   ;help command text
00001976  323C 0042                959              MOVE.W  #66,D1
0000197A  103C 0000                960              MOVE.B  #0,D0
0000197E  4E4F                     961              TRAP    #15
00001980  123C 0000                962              MOVE.B  #0,D1       ;newline
00001984  4E4F                     963              TRAP    #15   
00001986                           964              
00001986  43F8 36C2                965              LEA     HTXT13,A1   ;echo command text   
0000198A  323C 0034                966              MOVE.W  #52,D1
0000198E  103C 0000                967              MOVE.B  #0,D0
00001992  4E4F                     968              TRAP    #15
00001994  123C 0000                969              MOVE.B  #0,D1       ;newline
00001998  4E4F                     970              TRAP    #15
0000199A                           971              
0000199A  43F8 36F5                972              LEA     HTXT14,A1   ;modify register command text   
0000199E  323C 0047                973              MOVE.W  #71,D1
000019A2  103C 0000                974              MOVE.B  #0,D0
000019A6  4E4F                     975              TRAP    #15
000019A8  43F8 373C                976              LEA     HTXT15,A1   ;modify register command text   
000019AC  323C 003F                977              MOVE.W  #63,D1
000019B0  103C 0000                978              MOVE.B  #0,D0
000019B4  4E4F                     979              TRAP    #15
000019B6  123C 0000                980              MOVE.B  #0,D1       ;newline
000019BA  4E4F                     981              TRAP    #15
000019BC                           982   
000019BC  6000 F738                983              BRA     RESTORE  
000019C0                           984  *--------------------------------------------------------------------------------------*
000019C0                           985  
000019C0  45F8 3000                986  MEMSET:     LEA     BUFFER,A2
000019C4  568A                     987              ADD.L   #3,A2
000019C6  264A                     988              MOVE.L  A2,A3   ;set up to find end
000019C8  0C1B 0020                989  FINDEND:    CMP.B   #$20,(A3)+
000019CC  6700 0004                990              BEQ     MEMCONT
000019D0  60F6                     991              BRA     FINDEND
000019D2  538B                     992  MEMCONT:    SUB.L  #1,A3   ;get rid of off by one erro
000019D4  284B                     993              MOVE.L  A3,A4   ;used for data length calculator
000019D6                           994            
000019D6  4EB9 0000275A            995              JSR ASCII_ADDRESS
000019DC  2E05                     996              MOVE.L  D5,D7   ;store value to be put in mem into D7
000019DE  528B                     997              ADD.L   #1,A3   ;increment to address to store it
000019E0  244B                     998              MOVE.L  A3,A2
000019E2                           999  MSFINDADDRESS:
000019E2  0C1B 0000               1000              CMP.B   #$00,(A3)+
000019E6  6700 0004               1001              BEQ     MOVEDATA
000019EA  60F6                    1002              BRA     MSFINDADDRESS
000019EC                          1003  
000019EC                          1004  MOVEDATA:
000019EC  538B                    1005              SUB.L   #1,A3   ;off by one error
000019EE  4EB9 0000275A           1006              JSR     ASCII_ADDRESS
000019F4  2645                    1007              MOVE.L  D5,A3   ;setup for storage
000019F6  1687                    1008              MOVE.B  D7,(A3)   ;store data 
000019F8                          1009              
000019F8                          1010  
000019F8                          1011  
000019F8                          1012            ;  MOVE.B  (A2)+,D1
000019F8                          1013            ;  MOVE.B  (A2),D2
000019F8                          1014            ;  MOVE.B  D1,D3       ;pass value to subroutine
000019F8                          1015            ;  JSR     ASCII_TO_BCD           
000019F8                          1016            ;  MOVE.B  D3,D1       ;get converted value
000019F8                          1017            ;  MOVE.B  D2,D3       ;pass value
000019F8                          1018            ;  JSR     ASCII_TO_BCD
000019F8                          1019            ;  MOVE.B  D3,D2       ;get returned value
000019F8                          1020            ;  MOVE.B  D1,D3
000019F8                          1021            ;  JSR     BCD_TO_HEX
000019F8                          1022            ;  MOVE.B  D3,D1
000019F8                          1023            ;  MOVE.B  D2,D3
000019F8                          1024            ;  JSR     BCD_TO_HEX
000019F8                          1025            ;  MOVE.B  D3,D2
000019F8                          1026            ;  ROL.L   #4,D1       ;put data in correct place
000019F8                          1027            ;  ADD     D1,D2       ;get combined data input
000019F8                          1028            ;  ADD.L   #2,A2       ;go to start of address
000019F8                          1029            ;  JSR     ASCII_ADDRESS  ;get address in workable form
000019F8                          1030            ;  MOVE.L  D5,A4       ;load target address
000019F8                          1031            ;  MOVE.B  D2,(A4)       ;put data in target address
000019F8  6000 F6FC               1032              BRA     RESTORE                 ;return to shell
000019FC                          1033  *--------------------------------------------------------------------------------------*
000019FC  45F8 3000               1034  MEMDISP:    LEA     BUFFER,A2
00001A00  7C01                    1035              MOVE.L  #1,D6       ;counter for how many times to loop
00001A02  5A8A                    1036              ADD.L   #5,A2       ;get first address
00001A04  264A                    1037              MOVE.L  A2,A3       
00001A06  0C1B 0020               1038  FINDEND1:   CMP.B   #$20,(A3)+
00001A0A  6700 0004               1039              BEQ     FINDNEXT
00001A0E  60F6                    1040              BRA     FINDEND1  
00001A10  284B                    1041  FINDNEXT:   MOVE.L  A3,A4
00001A12  2A4B                    1042              MOVE.L  A3,A5
00001A14  538B                    1043              SUB.L   #1,A3   ;get rid of off by one error
00001A16  0C1D 0000               1044  FINDEND2:   CMP.B   #$00,(A5)+
00001A1A  6700 0004               1045              BEQ     MEMNEXT
00001A1E  60F6                    1046              BRA     FINDEND2
00001A20  538D                    1047  MEMNEXT:    SUB.L   #1,A5   ;off by one error
00001A22  4EB9 0000275A           1048              JSR     ASCII_ADDRESS
00001A28  2C45                    1049              MOVE.L  D5,A6   ;put 1st address in A6
00001A2A  244C                    1050              MOVE.L  A4,A2
00001A2C  264D                    1051              MOVE.L  A5,A3
00001A2E  4EB9 0000275A           1052              JSR ASCII_ADDRESS
00001A34  2A45                    1053              MOVE.L  D5,A5   ;second address in A5
00001A36  204E                    1054              MOVE.L  A6,A0   ;for second run through
00001A38  224D                    1055              MOVE.L  A5,A1   ;see above comment
00001A3A  D3FC 00000010           1056              ADD.L   #16,A1 ;16 byte offset
00001A40  48E7 0040               1057              MOVEM.L A1,-(SP)
00001A44  BBCE                    1058  DISPLOOP:   CMP.L   A6,A5
00001A46  6D00 0034               1059              BLT     SECONDLOOP
00001A4A  260E                    1060              MOVE.L  A6,D3
00001A4C  4EB9 0000279A           1061              JSR     HEXTOASCII
00001A52  97CA                    1062              SUB.L   A2,A3
00001A54  220B                    1063              MOVE.L  A3,D1   ;number of ascii values to display
00001A56  224A                    1064              MOVE.L  A2,A1
00001A58  7001                    1065              MOVE.L  #1,D0
00001A5A  4E4F                    1066              TRAP    #15
00001A5C  43F8 37BD               1067              LEA     SPACE,A1
00001A60  7201                    1068              MOVE.L #1,D1
00001A62  4E4F                    1069              TRAP    #15
00001A64  4283                    1070              CLR.L   D3
00001A66  1616                    1071              MOVE.B  (A6),D3
00001A68  4EB9 0000279A           1072              JSR     HEXTOASCII
00001A6E  97CA                    1073              SUB.L   A2,A3
00001A70  220B                    1074              MOVE.L  A3,D1
00001A72  224A                    1075              MOVE.L  A2,A1
00001A74  7000                    1076              MOVE.L  #0,D0
00001A76  4E4F                    1077              TRAP    #15
00001A78  528E                    1078              ADD.L   #1,A6
00001A7A  60C8                    1079              BRA     DISPLOOP
00001A7C                          1080              
00001A7C                          1081  SECONDLOOP: 
00001A7C  103C 0000               1082              MOVE.B  #0,D0
00001A80  123C 0000               1083              MOVE.B  #0,D1
00001A84  4E4F                    1084              TRAP    #15
00001A86  4CDF 0200               1085              MOVEM.L (SP)+,A1
00001A8A  2C48                    1086              MOVE.L  A0,A6   ;reinit
00001A8C  2A49                    1087              MOVE.L  A1,A5
00001A8E  5386                    1088              SUBI.L  #1,D6
00001A90  BCBC 00000000           1089              CMP.L   #$0,D6
00001A96  67AC                    1090              BEQ     DISPLOOP
00001A98  598F                    1091              SUB.L   #4,SP   ;off by long error on stack
00001A9A  6000 F65A               1092              BRA     RESTORE
00001A9E                          1093              
00001A9E                          1094  *--------------------------------------------------------------------------------------*
00001A9E                          1095  
00001A9E  45F8 3000               1096  HXDC:   LEA BUFFER,A2   ;load buffer
00001AA2  5C8A                    1097          ADD.L   #6,A2   ; start of number
00001AA4  264A                    1098          MOVE.L  A2,A3   ;set up end pointer
00001AA6  7201                    1099          MOVE.L  #1,D1   ;set up 16's place
00001AA8  4282                    1100          CLR.L   D2      ;clear total
00001AAA  4283                    1101          CLR.L   D3      ;temp holder for number
00001AAC  4286                    1102          CLR.L   D6      ;Final Value in BCD
00001AAE  283C 00002710           1103          MOVE.L  #10000,D4    ;maximum 10's place of converted number
00001AB4  7A10                    1104          MOVE.L  #16,D5      ;Max number of rotates needed
00001AB6  4BF8 3A00               1105          LEA $3A00,A5
00001ABA  49F8 3A00               1106          LEA $3A00,A4   ;set up start pointer
00001ABE                          1107  FINDLASTNUM:    
00001ABE  0C1B 0000               1108          CMP.B #$00,(A3)+
00001AC2  6700 0004               1109          BEQ     CONVERTMINUS1
00001AC6  60F6                    1110          BRA     FINDLASTNUM
00001AC8                          1111  CONVERTMINUS1:   
00001AC8  538B                    1112               SUB.L   #1,A3 ; cure off by 1 error
00001ACA                          1113  CONVERT:
00001ACA  538B                    1114              SUB.L   #1,A3
00001ACC  B4CB                    1115              CMP   A3,A2
00001ACE  6E00 0028               1116              BGT   ENDCONVERT
00001AD2  0C13 0040               1117              CMP.B   #$40,(A3)
00001AD6  6E00 000A               1118              BGT     HIGHHEX
00001ADA  0413 0030               1119              SUBI.B  #$30,(A3)   ;get hex value
00001ADE  6000 0006               1120              BRA     COMPUTATION
00001AE2  0413 0037               1121  HIGHHEX:     SUBI.B  #$37,(A3)  ;get hex value
00001AE6                          1122  COMPUTATION:
00001AE6  1613                    1123              MOVE.B  (A3),D3 
00001AE8  C6C1                    1124              MULU    D1,D3   ;get 16's place
00001AEA                          1125             ; DIVU    #16,D3  ;get rid of off by 1 exponent error
00001AEA  C2FC 0010               1126              MULU    #16,D1  ;inc 16's place counter
00001AEE  1883                    1127              MOVE.B  D3,(A4)
00001AF0  538C                    1128              SUB.L   #1,A4
00001AF2  D483                    1129              ADD.L   D3,D2   ;store it in total for debugging 
00001AF4  4283                    1130              CLR.L   D3      ;get rid of any numbers in there   
00001AF6  60D2                    1131              BRA     CONVERT     
00001AF8                          1132  ENDCONVERT:                  ;must convert back to ascii for display
00001AF8  4283                    1133              CLR.L   D3      ;Cleared for workability
00001AFA  84C4                    1134              DIVU    D4,D2   ;get 10's place digit
00001AFC  3602                    1135              MOVE.W  D2,D3   ;extract 10's place digit to D3
00001AFE  EBBB                    1136              ROL.L   D5,D3   ;put it in its place
00001B00  4242                    1137              CLR.W   D2      ;get rid of whole number
00001B02  4842                    1138              SWAP    D2      ;keep remainder
00001B04  5985                    1139              SUBI.L  #4,D5   ;dec rotate counter
00001B06  DC83                    1140              ADD.L   D3,D6   ;put it into it's place
00001B08  88FC 000A               1141              DIVU    #10,D4  ;go down a 10's place
00001B0C  B87C 0000               1142              CMP.W   #0,D4   ;are we done
00001B10  6700 0004               1143              BEQ     OUTPUTNUM
00001B14  60E2                    1144              BRA     ENDCONVERT
00001B16                          1145              
00001B16                          1146  OUTPUTNUM:
00001B16  2606                    1147             MOVE.L   D6,D3   ;put into register for conversion to ASCII
00001B18  4EB9 0000279A           1148             JSR      HEXTOASCII
00001B1E  224A                    1149             MOVEA.L  A2,A1   ;get start of number
00001B20  96CA                    1150             SUBA     A2,A3   ;get how many bytes to output
00001B22  220B                    1151             MOVE.L   A3,D1   ;for Trap call
00001B24  7000                    1152             MOVE.L   #0,D0   
00001B26  4E4F                    1153             TRAP     #15
00001B28                          1154             
00001B28  6000 F5CC               1155             BRA RESTORE
00001B2C                          1156  
00001B2C                          1157  *--------------------------------------------------------------------------------------*
00001B2C                          1158  
00001B2C  5289                    1159  SORTW:  ADD.L   #1,A1       ;increment to check for semicolon/dash
00001B2E  0C11 002D               1160          CMP.B   #$2D,(A1)   ;check for default
00001B32  6700 001E               1161          BEQ     DEFAULTTEST
00001B36  0C19 003B               1162          CMP.B   #$3B,(A1)+
00001B3A  6600 0BD2               1163          BNE     ERRORSR
00001B3E  0C11 0041               1164          CMP.B   #$41,(A1)   ;is it ascending?
00001B42  6700 005C               1165          BEQ     ASCEND
00001B46  0C11 0044               1166          CMP.B   #$44,(A1)   ;or descending?
00001B4A  6600 0BC2               1167          BNE     ERRORSR
00001B4E  6000 00AE               1168          BRA     DESCEND
00001B52                          1169          
00001B52                          1170  DEFAULTTEST:
00001B52  5289                    1171                  ADD.L  #1,A1   ;check for paren
00001B54  0C19 0028               1172          CMP.B   #$28,(A1)+  ;(
00001B58  6600 0BB4               1173          BNE     ERRORSR
00001B5C  0C19 0064               1174          CMP.B   #$64,(A1)+  ;d
00001B60  6600 0BAC               1175          BNE     ERRORSR
00001B64  0C19 0065               1176          CMP.B   #$65,(A1)+  ;e
00001B68  6600 0BA4               1177          BNE     ERRORSR
00001B6C  0C19 0066               1178          CMP.B   #$66,(A1)+  ;f
00001B70  6600 0B9C               1179          BNE     ERRORSR
00001B74  0C19 0061               1180          CMP.B   #$61,(A1)+  ;a
00001B78  6600 0B94               1181          BNE     ERRORSR
00001B7C  0C19 0075               1182          CMP.B   #$75,(A1)+  ;u
00001B80  6600 0B8C               1183          BNE     ERRORSR
00001B84  0C19 006C               1184          CMP.B   #$6C,(A1)+  ;l
00001B88  6600 0B84               1185          BNE     ERRORSR     
00001B8C  0C19 0074               1186          CMP.B   #$74,(A1)+  ;t
00001B90  6600 0B7C               1187          BNE     ERRORSR
00001B94  0C11 0029               1188          CMP.B   #$29,(A1)  ;)
00001B98  6600 0B74               1189          BNE     ERRORSR
00001B9C  6000 0060               1190          BRA     DESCEND
00001BA0                          1191  
00001BA0                          1192          
00001BA0                          1193  ASCEND:
00001BA0  5289                    1194         ADD.L    #1,A1   ;inc
00001BA2  0C11 0020               1195         CMP.B    #$20,(A1)   ;check space
00001BA6  6600 0B66               1196         BNE      ERRORSR
00001BAA  5289                    1197         ADD.L    #1,A1   ;start of 1st address
00001BAC  2449                    1198         MOVE.L   A1,A2
00001BAE  264A                    1199         MOVE.L   A2,A3
00001BB0                          1200  AGETFIRSTADDRESS:
00001BB0  0C13 0000               1201         CMP.B    #$00,(A3)
00001BB4  6700 0B58               1202         BEQ      ERRORSR     ;incorrect syntax
00001BB8  0C1B 0020               1203         CMP.B    #$20,(A3)+  ;trying to find the end
00001BBC  6700 0004               1204         BEQ      AFADDCONV
00001BC0  60EE                    1205         BRA      AGETFIRSTADDRESS
00001BC2                          1206  AFADDCONV:
00001BC2  538B                    1207         SUB.L    #1,A3   ;off by one error
00001BC4  4EB9 0000275A           1208         JSR ASCII_ADDRESS    ;D5 now has that address 
00001BCA  2845                    1209         MOVE.L D5,A4
00001BCC  528B                    1210         ADD.L    #1,A3   ;start of second address
00001BCE  244B                    1211         MOVE.L   A3,A2   ;setup for second address
00001BD0                          1212  AGETSECADDRESS:
00001BD0  0C1B 0000               1213         CMP.B    #$00,(A3)+  ;trying to find the end
00001BD4  6700 0004               1214         BEQ      ASADDCONV
00001BD8  60F6                    1215         BRA      AGETSECADDRESS
00001BDA                          1216  ASADDCONV:
00001BDA  538B                    1217          SUB.L   #1,A3   ;off by one
00001BDC  4EB9 0000275A           1218          JSR     ASCII_ADDRESS
00001BE2  2A45                    1219          MOVE.L  D5,A5
00001BE4  2C4C                    1220          MOVEA.L  A4,A6  ;CLR A6
00001BE6                          1221          
00001BE6  284E                    1222  ARESETLOOP: MOVE.L  A6,A4    ;reset to top of loop
00001BE8  B94C                    1223  ACMP:       CMP.W   (A4)+,(A4)+  ;check adjacent mem
00001BEA  630A                    1224              BLS.S   ASWAP    
00001BEC  558C                    1225              SUBQ.L  #2,A4
00001BEE  BBCC                    1226              CMP.L   A4,A5   ;done?
00001BF0  66F6                    1227              BNE     ACMP     ;nope
00001BF2  6000 0068               1228              BRA     DONEASCEND  ;yep
00001BF6  2024                    1229  ASWAP:       MOVE.L  -(A4),D0    ;start bubbling 
00001BF8  4840                    1230              SWAP.W  D0
00001BFA  2880                    1231              MOVE.L  D0,(A4)
00001BFC  60E8                    1232              BRA     ARESETLOOP
00001BFE                          1233  
00001BFE                          1234  
00001BFE                          1235  DESCEND:
00001BFE  5289                    1236         ADD.L    #1,A1   ;inc
00001C00  0C11 0020               1237         CMP.B    #$20,(A1)   ;check space
00001C04  6600 0B08               1238         BNE      ERRORSR
00001C08  5289                    1239         ADD.L    #1,A1   ;start of 1st address
00001C0A  2449                    1240         MOVE.L   A1,A2
00001C0C  264A                    1241         MOVE.L   A2,A3
00001C0E                          1242  DGETFIRSTADDRESS:
00001C0E  0C13 0000               1243         CMP.B    #$00,(A3)
00001C12  6700 0AFA               1244         BEQ      ERRORSR     ;incorrect syntax
00001C16  0C1B 0020               1245         CMP.B    #$20,(A3)+  ;trying to find the end
00001C1A  6700 0004               1246         BEQ      DFADDCONV
00001C1E  60EE                    1247         BRA      DGETFIRSTADDRESS
00001C20                          1248  DFADDCONV:
00001C20  538B                    1249         SUB.L    #1,A3   ;off by one error
00001C22  4EB9 0000275A           1250         JSR ASCII_ADDRESS    ;D5 now has that address 
00001C28  2845                    1251         MOVE.L D5,A4
00001C2A  528B                    1252         ADD.L    #1,A3   ;start of second address
00001C2C  244B                    1253         MOVE.L   A3,A2   ;setup for second address
00001C2E                          1254  DGETSECADDRESS:
00001C2E  0C1B 0000               1255         CMP.B    #$00,(A3)+  ;trying to find the end
00001C32  6700 0004               1256         BEQ      DSADDCONV
00001C36  60F6                    1257         BRA      DGETSECADDRESS
00001C38                          1258  DSADDCONV:
00001C38  538B                    1259          SUB.L   #1,A3   ;off by one
00001C3A  4EB9 0000275A           1260          JSR     ASCII_ADDRESS
00001C40  2A45                    1261          MOVE.L  D5,A5
00001C42  2C4C                    1262          MOVEA.L  A4,A6  ;CLR A6
00001C44                          1263          
00001C44  284E                    1264  DRESETLOOP: MOVE.L  A6,A4    ;reset to top of loop
00001C46  B94C                    1265  DCMP:       CMP.W   (A4)+,(A4)+  ;check adjacent mem
00001C48  620A                    1266              BHI.S   DSWAP    
00001C4A  558C                    1267              SUBQ.L  #2,A4
00001C4C  BBCC                    1268              CMP.L   A4,A5   ;done?
00001C4E  66F6                    1269              BNE     DCMP     ;nope
00001C50  6000 000A               1270              BRA     DONEDESCEND  ;yep
00001C54  2024                    1271  DSWAP:       MOVE.L  -(A4),D0    ;start bubbling 
00001C56  4840                    1272              SWAP.W  D0
00001C58  2880                    1273              MOVE.L  D0,(A4)
00001C5A  60E8                    1274              BRA     DRESETLOOP
00001C5C                          1275  
00001C5C                          1276  DONEASCEND:
00001C5C                          1277  DONEDESCEND:
00001C5C  6000 F498               1278              BRA RESTORE
00001C60                          1279  
00001C60                          1280  *--------------------------------------------------------------------------------------*
00001C60                          1281  
00001C60  4282                    1282  MM:    CLR.L    D2      ;used for storing values
00001C62  4286                    1283         CLR.L    D6      
00001C64                          1284  SIZECHECK:  
00001C64  2649                    1285          MOVE.L  A1,A3   ;set up to find end ptr
00001C66                          1286  ENDPTRMM:
00001C66  0C1B 0000               1287          CMP.B   #$00,(A3)+
00001C6A  66FA                    1288          BNE     ENDPTRMM
00001C6C  538B                    1289          SUB.L   #1,A3   ;off by one error
00001C6E  5289                    1290          ADD.L   #1,A1   ;inc pointer to start of specifier
00001C70  0C11 002D               1291          CMP.B   #$2D,(A1)   ;check for default
00001C74  6700 0020               1292          BEQ     DEFAULT        
00001C78  0C11 003B               1293          CMP.B   #$3B,(A1)
00001C7C  6600 0A90               1294          BNE     ERRORSR
00001C80  5289                    1295          ADD.L   #1,A1   ;find out which size
00001C82  0C11 0057               1296          CMP.B   #$57,(A1) ; word
00001C86  6700 00FE               1297          BEQ     WORD
00001C8A  0C11 004C               1298          CMP.B   #$4C,(A1)   ;long
00001C8E  6700 01C0               1299          BEQ     LONG
00001C92  6000 0A7A               1300          BRA     ERRORSR
00001C96                          1301  
00001C96                          1302  ***************************************************
00001C96                          1303  
00001C96                          1304  DEFAULT: 
00001C96  5289                    1305          ADD.L  #1,A1   ;check for paren
00001C98  0C19 0028               1306          CMP.B   #$28,(A1)+  ;(
00001C9C  6600 0A70               1307          BNE     ERRORSR
00001CA0  0C19 0064               1308          CMP.B   #$64,(A1)+  ;d
00001CA4  6600 0A68               1309          BNE     ERRORSR
00001CA8  0C19 0065               1310          CMP.B   #$65,(A1)+  ;e
00001CAC  6600 0A60               1311          BNE     ERRORSR
00001CB0  0C19 0066               1312          CMP.B   #$66,(A1)+  ;f
00001CB4  6600 0A58               1313          BNE     ERRORSR
00001CB8  0C19 0061               1314          CMP.B   #$61,(A1)+  ;a
00001CBC  6600 0A50               1315          BNE     ERRORSR
00001CC0  0C19 0075               1316          CMP.B   #$75,(A1)+  ;u
00001CC4  6600 0A48               1317          BNE     ERRORSR
00001CC8  0C19 006C               1318          CMP.B   #$6C,(A1)+  ;l
00001CCC  6600 0A40               1319          BNE     ERRORSR     
00001CD0  0C19 0074               1320          CMP.B   #$74,(A1)+  ;t
00001CD4  6600 0A38               1321          BNE     ERRORSR
00001CD8  0C19 0029               1322          CMP.B   #$29,(A1)+  ;)
00001CDC  6600 0A30               1323          BNE     ERRORSR
00001CE0                          1324          
00001CE0                          1325          
00001CE0  5289                    1326          ADD.L   #1,A1       ;set up for subroutine
00001CE2  3449                    1327          MOVE    A1,A2       ;set up for subroutine
00001CE4  48E7 4270               1328          MOVEM.L D1/D6/A1-A3,-(SP)
00001CE8  4EB9 0000275A           1329          JSR     ASCII_ADDRESS
00001CEE  4CDF 0E42               1330          MOVEM.L (SP)+,D1/D6/A1-A3
00001CF2  2845                    1331          MOVE.L  D5,A4       ;set up address to modify
00001CF4                          1332         
00001CF4                          1333  MODIFYLOOP:
00001CF4                          1334          *-------Display Memory First-----*
00001CF4  260C                    1335          MOVE.L  A4,D3       ;set up for subroutine
00001CF6  4EB9 0000279A           1336          JSR     HEXTOASCII  ;convert new address to ascii for output
00001CFC  96CA                    1337          SUBA    A2,A3       ;get num of bytes to produce
00001CFE  7001                    1338          MOVE.L  #1,D0
00001D00  220B                    1339          MOVE.L  A3,D1
00001D02  224A                    1340          MOVE.L  A2,A1
00001D04  4E4F                    1341          TRAP    #15
00001D06                          1342          
00001D06                          1343          *add colon to denote containing data*
00001D06  12BC 003A               1344          MOVE.B  #$3A,(A1)
00001D0A  7201                    1345          MOVE.L  #1,D1   ;display only the colon
00001D0C  7001                    1346          MOVE.L  #1,D0
00001D0E  4E4F                    1347          TRAP    #15
00001D10                          1348          
00001D10  1614                    1349          MOVE.B  (A4),D3
00001D12  4EB9 0000279A           1350          JSR     HEXTOASCII
00001D18  7202                    1351          MOVE.L  #2,D1
00001D1A  97CA                    1352          SUB.L   A2,A3
00001D1C  B6FC 0002               1353          CMP     #2,A3
00001D20  6700 0004               1354          BEQ     FORMATGOOD
00001D24  538A                    1355          SUB.L   #1,A2
00001D26                          1356  FORMATGOOD:
00001D26  224A                    1357          MOVE.L  A2,A1
00001D28  103C 0001               1358          MOVE.B  #1,D0
00001D2C  4E4F                    1359          TRAP    #15
00001D2E                          1360          
00001D2E  12BC 0020               1361          MOVE.B  #$20,(A1)
00001D32  7201                    1362          MOVE.L  #1,D1   ;space between held data and input
00001D34  7001                    1363          MOVE.L  #1,D0
00001D36  4E4F                    1364          TRAP    #15
00001D38                          1365  
00001D38                          1366          
00001D38                          1367          *-----Enter Input-------*
00001D38  4283                    1368          CLR.L   D3
00001D3A  7C04                    1369          MOVE.L  #4,D6
00001D3C  43F8 3000               1370          LEA     BUFFER,A1   ;set up storage for command
00001D40  103C 0002               1371          MOVE.B  #2,D0       ;load input trap call
00001D44  4E4F                    1372          TRAP    #15
00001D46  0C11 002E               1373          CMP.B   #$2E,(A1)
00001D4A  6700 020A               1374          BEQ     ENDLP
00001D4E  0C11 0000               1375          CMP.B   #$00,(A1)
00001D52  6700 002C               1376          BEQ     ENTER
00001D56                          1377          
00001D56                          1378  PARSELOOP:
00001D56  0C11 0000               1379          CMP.B   #$00,(A1)
00001D5A  6700 0022               1380          BEQ     ENDPARSE        
00001D5E  0C11 0040               1381          CMP.B   #$40,(A1)
00001D62  6E00 000A               1382          BGT     HIGHHEXMM
00001D66  0411 0030               1383          SUBI.B  #$30,(A1)   ;get hex value
00001D6A  6000 0006               1384          BRA     NEXTMMSTEP
00001D6E  0411 0037               1385  HIGHHEXMM: SUBI.B  #$37,(A1)  ;get hex value
00001D72                          1386  NEXTMMSTEP:
00001D72  1411                    1387          MOVE.B  (A1),D2
00001D74  EDBA                    1388          ROL.L   D6,D2
00001D76  5986                    1389          SUBI.L  #4,D6
00001D78  5289                    1390          ADD.L   #1,A1
00001D7A  D602                    1391          ADD.B   D2,D3   ;total byte stored in D3
00001D7C  60D8                    1392          BRA     PARSELOOP
00001D7E                          1393  ENDPARSE:
00001D7E  1883                    1394          MOVE.B  D3,(A4)   ;commit memory change 
00001D80  528C                    1395  ENTER:  ADD.L   #1,A4   ;increment address
00001D82  6000 FF70               1396          BRA     MODIFYLOOP
00001D86                          1397          
00001D86                          1398  ***************************************************
00001D86                          1399  
00001D86                          1400  WORD:
00001D86                          1401              
00001D86  5489                    1402          ADD.L   #2,A1       ;set up for subroutine
00001D88  3449                    1403          MOVE    A1,A2       ;set up for subroutine
00001D8A  48E7 4270               1404          MOVEM.L D1/D6/A1-A3,-(SP)
00001D8E  4EB9 0000275A           1405          JSR     ASCII_ADDRESS
00001D94  4CDF 0E42               1406          MOVEM.L (SP)+,D1/D6/A1-A3
00001D98  2845                    1407          MOVE.L  D5,A4       ;set up address to modify
00001D9A                          1408         
00001D9A                          1409  MODIFYLOOPW:
00001D9A                          1410          *-------Display Memory First-----*
00001D9A                          1411         ; MOVE.L  A4,D0
00001D9A                          1412         ; DIVU    #2,D0
00001D9A                          1413         ; SWAP    D0      ;check if it's an odd address
00001D9A                          1414         ; CMP.W   #$00,D0
00001D9A                          1415         ; BNE     ERRORSR
00001D9A  260C                    1416          MOVE.L  A4,D3       ;set up for subroutine
00001D9C  2A4C                    1417          MOVE.L  A4,A5       ;next byte of memory may not be needed
00001D9E  528D                    1418          ADD.L   #1,A5
00001DA0  4EB9 0000279A           1419          JSR     HEXTOASCII  ;convert new address to ascii for output
00001DA6  96CA                    1420          SUBA    A2,A3       ;get num of bytes to produce
00001DA8  7001                    1421          MOVE.L  #1,D0
00001DAA  220B                    1422          MOVE.L  A3,D1
00001DAC  224A                    1423          MOVE.L  A2,A1
00001DAE  4E4F                    1424          TRAP    #15
00001DB0                          1425          
00001DB0                          1426          *add colon to denote containing data*
00001DB0  12BC 003A               1427          MOVE.B  #$3A,(A1)
00001DB4  7201                    1428          MOVE.L  #1,D1   ;display only the colon
00001DB6  7001                    1429          MOVE.L  #1,D0
00001DB8  4E4F                    1430          TRAP    #15
00001DBA                          1431          
00001DBA  1614                    1432          MOVE.B  (A4),D3
00001DBC  4EB9 0000279A           1433          JSR     HEXTOASCII
00001DC2  7202                    1434          MOVE.L  #2,D1
00001DC4  97CA                    1435          SUB.L   A2,A3
00001DC6  B6FC 0002               1436          CMP     #2,A3
00001DCA  6700 0004               1437          BEQ     FORMATGOOD1
00001DCE  538A                    1438          SUB.L   #1,A2     
00001DD0                          1439  FORMATGOOD1:
00001DD0                          1440  
00001DD0  224A                    1441          MOVE.L  A2,A1
00001DD2  103C 0001               1442          MOVE.B  #1,D0
00001DD6  4E4F                    1443          TRAP    #15
00001DD8                          1444          
00001DD8  1615                    1445          MOVE.B  (A5),D3
00001DDA  4EB9 0000279A           1446          JSR     HEXTOASCII
00001DE0  7202                    1447          MOVE.L  #2,D1
00001DE2  97CA                    1448          SUB.L   A2,A3
00001DE4  B6FC 0002               1449          CMP     #2,A3
00001DE8  6700 0004               1450          BEQ     FORMATGOOD2
00001DEC  538A                    1451          SUB.L   #1,A2     
00001DEE                          1452  FORMATGOOD2:
00001DEE                          1453  
00001DEE  224A                    1454          MOVE.L  A2,A1
00001DF0  103C 0001               1455          MOVE.B  #1,D0
00001DF4  4E4F                    1456          TRAP    #15
00001DF6                          1457  
00001DF6                          1458          
00001DF6  12BC 0020               1459          MOVE.B  #$20,(A1)
00001DFA  7201                    1460          MOVE.L  #1,D1   ;space between held data and input
00001DFC  7001                    1461          MOVE.L  #1,D0
00001DFE  4E4F                    1462          TRAP    #15
00001E00                          1463  
00001E00                          1464          
00001E00                          1465          *-----Enter Input-------*
00001E00  4283                    1466          CLR.L   D3
00001E02  7C0C                    1467          MOVE.L  #12,D6
00001E04  43F8 3000               1468          LEA     BUFFER,A1   ;set up storage for command
00001E08  103C 0002               1469          MOVE.B  #2,D0       ;load input trap call
00001E0C  4E4F                    1470          TRAP    #15
00001E0E  0C11 002E               1471          CMP.B   #$2E,(A1)
00001E12  6700 0142               1472          BEQ     ENDLP
00001E16  0C11 0000               1473          CMP.B   #$00,(A1)
00001E1A  6700 002E               1474          BEQ     ENTERW
00001E1E                          1475          
00001E1E                          1476  PARSELOOPW:
00001E1E  0C11 0000               1477          CMP.B   #$00,(A1)
00001E22  6700 0024               1478          BEQ     ENDPARSEW        
00001E26  0C11 0040               1479          CMP.B   #$40,(A1)
00001E2A  6E00 000A               1480          BGT     HIGHHEXMMW
00001E2E  0411 0030               1481          SUBI.B  #$30,(A1)   ;get hex value
00001E32  6000 0006               1482          BRA     NEXTMMSTEPW
00001E36  0411 0037               1483  HIGHHEXMMW: SUBI.B  #$37,(A1)  ;get hex value
00001E3A                          1484  NEXTMMSTEPW:
00001E3A  1411                    1485          MOVE.B  (A1),D2
00001E3C  EDBA                    1486          ROL.L   D6,D2
00001E3E  5986                    1487          SUBI.L  #4,D6
00001E40  5289                    1488          ADD.L   #1,A1
00001E42  D682                    1489          ADD.L   D2,D3   ;total byte stored in D3
00001E44  4282                    1490          CLR.L   D2      ;clear for next rotate
00001E46  60D6                    1491          BRA     PARSELOOPW
00001E48                          1492  ENDPARSEW:
00001E48                          1493          
00001E48  3883                    1494          MOVE.W  D3,(A4)   ;commit memory change 
00001E4A  548C                    1495  ENTERW:  ADD.L   #2,A4   ;increment address
00001E4C  6000 FF4C               1496          BRA     MODIFYLOOPW
00001E50                          1497  
00001E50                          1498  ***************************************************
00001E50                          1499  
00001E50                          1500  LONG:  
00001E50  5489                    1501          ADD.L   #2,A1       ;set up for subroutine
00001E52  3449                    1502          MOVE    A1,A2       ;set up for subroutine
00001E54  48E7 4270               1503          MOVEM.L D1/D6/A1-A3,-(SP)
00001E58  4EB9 0000275A           1504          JSR     ASCII_ADDRESS
00001E5E  2845                    1505          MOVE.L  D5,A4       ;set up address to modify
00001E60  4CDF 0E42               1506          MOVEM.L (SP)+,D1/D6/A1-A3
00001E64                          1507          
00001E64                          1508         
00001E64                          1509  MODIFYLOOPL:
00001E64                          1510          *-------Display Memory First-----*
00001E64                          1511         ; MOVE.L  A4,D0
00001E64                          1512         ; DIVU    #2,D0
00001E64                          1513         ; SWAP    D0      ;check if it's an odd address
00001E64                          1514         ; CMP.W   #$00,D0
00001E64                          1515         ; BNE     ERRORSR
00001E64  260C                    1516          MOVE.L  A4,D3       ;set up for subroutine
00001E66  2A4C                    1517          MOVE.L  A4,A5       ;next byte of memory may not be needed
00001E68  528D                    1518          ADD.L   #1,A5
00001E6A  4EB9 0000279A           1519          JSR     HEXTOASCII  ;convert new address to ascii for output
00001E70  96CA                    1520          SUBA    A2,A3       ;get num of bytes to produce
00001E72  7001                    1521          MOVE.L  #1,D0
00001E74  220B                    1522          MOVE.L  A3,D1
00001E76  224A                    1523          MOVE.L  A2,A1
00001E78  4E4F                    1524          TRAP    #15
00001E7A                          1525          
00001E7A                          1526          *add colon to denote containing data*
00001E7A  12BC 003A               1527          MOVE.B  #$3A,(A1)
00001E7E  7201                    1528          MOVE.L  #1,D1   ;display only the colon
00001E80  7001                    1529          MOVE.L  #1,D0
00001E82  4E4F                    1530          TRAP    #15
00001E84                          1531          
00001E84  1614                    1532          MOVE.B  (A4),D3
00001E86  4EB9 0000279A           1533          JSR     HEXTOASCII
00001E8C  7202                    1534          MOVE.L  #2,D1
00001E8E  97CA                    1535          SUB.L   A2,A3
00001E90  B6FC 0002               1536          CMP     #2,A3
00001E94  6700 0004               1537          BEQ     FORMATGOOD3
00001E98  538A                    1538          SUB.L   #1,A2     
00001E9A                          1539  FORMATGOOD3:
00001E9A                          1540  
00001E9A  224A                    1541          MOVE.L  A2,A1
00001E9C  103C 0001               1542          MOVE.B  #1,D0
00001EA0  4E4F                    1543          TRAP    #15
00001EA2                          1544          
00001EA2  161D                    1545          MOVE.B  (A5)+,D3
00001EA4  4EB9 0000279A           1546          JSR     HEXTOASCII
00001EAA  7202                    1547          MOVE.L  #2,D1
00001EAC  97CA                    1548          SUB.L   A2,A3
00001EAE  B6FC 0002               1549          CMP     #2,A3
00001EB2  6700 0004               1550          BEQ     FORMATGOOD4
00001EB6  538A                    1551          SUB.L   #1,A2     
00001EB8                          1552  FORMATGOOD4:
00001EB8                          1553  
00001EB8  224A                    1554          MOVE.L  A2,A1
00001EBA  103C 0001               1555          MOVE.B  #1,D0
00001EBE  4E4F                    1556          TRAP    #15
00001EC0                          1557          
00001EC0  161D                    1558          MOVE.B  (A5)+,D3
00001EC2  4EB9 0000279A           1559          JSR     HEXTOASCII
00001EC8  7202                    1560          MOVE.L  #2,D1
00001ECA  97CA                    1561          SUB.L   A2,A3
00001ECC  B6FC 0002               1562          CMP     #2,A3
00001ED0  6700 0004               1563          BEQ     FORMATGOOD5
00001ED4  538A                    1564          SUB.L   #1,A2     
00001ED6                          1565  FORMATGOOD5:
00001ED6                          1566  
00001ED6  224A                    1567          MOVE.L  A2,A1
00001ED8  103C 0001               1568          MOVE.B  #1,D0
00001EDC  4E4F                    1569          TRAP    #15
00001EDE  161D                    1570          MOVE.B  (A5)+,D3
00001EE0  4EB9 0000279A           1571          JSR     HEXTOASCII
00001EE6  7202                    1572          MOVE.L  #2,D1
00001EE8  97CA                    1573          SUB.L   A2,A3
00001EEA  B6FC 0002               1574          CMP     #2,A3
00001EEE  6700 0004               1575          BEQ     FORMATGOOD6
00001EF2  538A                    1576          SUB.L   #1,A2     
00001EF4                          1577  FORMATGOOD6:
00001EF4                          1578  
00001EF4  224A                    1579          MOVE.L  A2,A1
00001EF6  103C 0001               1580          MOVE.B  #1,D0
00001EFA  4E4F                    1581          TRAP    #15
00001EFC                          1582     
00001EFC  12BC 0020               1583          MOVE.B  #$20,(A1)
00001F00  7201                    1584          MOVE.L  #1,D1   ;space between held data and input
00001F02  7001                    1585          MOVE.L  #1,D0
00001F04  4E4F                    1586          TRAP    #15
00001F06                          1587  
00001F06                          1588          
00001F06                          1589          *-----Enter Input-------*
00001F06  4283                    1590          CLR.L   D3
00001F08  7C1C                    1591          MOVE.L  #28,D6
00001F0A  43F8 3000               1592          LEA     BUFFER,A1   ;set up storage for command
00001F0E  103C 0002               1593          MOVE.B  #2,D0       ;load input trap call
00001F12  4E4F                    1594          TRAP    #15
00001F14  0C11 002E               1595          CMP.B   #$2E,(A1)
00001F18  6700 003C               1596          BEQ     ENDLP
00001F1C  0C11 0000               1597          CMP.B   #$00,(A1)
00001F20  6700 002E               1598          BEQ     ENTERL
00001F24                          1599          
00001F24                          1600  PARSELOOPL:
00001F24  0C11 0000               1601          CMP.B   #$00,(A1)
00001F28  6700 0024               1602          BEQ     ENDPARSEL        
00001F2C  0C11 0040               1603          CMP.B   #$40,(A1)
00001F30  6E00 000A               1604          BGT     HIGHHEXMML
00001F34  0411 0030               1605          SUBI.B  #$30,(A1)   ;get hex value
00001F38  6000 0006               1606          BRA     NEXTMMSTEPL
00001F3C  0411 0037               1607  HIGHHEXMML: SUBI.B  #$37,(A1)  ;get hex value
00001F40                          1608  NEXTMMSTEPL:
00001F40  1411                    1609          MOVE.B  (A1),D2
00001F42  EDBA                    1610          ROL.L   D6,D2
00001F44  5986                    1611          SUBI.L  #4,D6
00001F46  5289                    1612          ADD.L   #1,A1
00001F48  D682                    1613          ADD.L   D2,D3   ;total byte stored in D3
00001F4A  4282                    1614          CLR.L   D2      ;clear for next rotate
00001F4C  60D6                    1615          BRA     PARSELOOPL
00001F4E                          1616  ENDPARSEL:
00001F4E  2883                    1617          MOVE.L  D3,(A4)   ;commit memory change 
00001F50  588C                    1618  ENTERL:  ADD.L   #4,A4   ;increment address
00001F52  6000 FF10               1619          BRA     MODIFYLOOPL
00001F56                          1620  
00001F56                          1621  
00001F56  6000 F19E               1622  ENDLP:  BRA RESTORE
00001F5A                          1623          
00001F5A                          1624          
00001F5A                          1625  *--------------------------------------------------------------------------------------*
00001F5A                          1626  
00001F5A                          1627  BF:    
00001F5A  5289                    1628         ADD.L    #1,A1   ;first byte of data
00001F5C  2649                    1629         MOVE.L   A1,A3   ;for end ptr
00001F5E                          1630  BFGETENDDATA:
00001F5E  0C1B 0020               1631          CMP.B   #$20,(A3)+
00001F62  6700 0004               1632          BEQ     BFNEXTADDR
00001F66  60F6                    1633          BRA     BFGETENDDATA
00001F68                          1634  BFNEXTADDR:
00001F68  2449                    1635          MOVE.L  A1,A2   ;for subroutine
00001F6A  538B                    1636          SUB.L   #1,A3   ;off by one error
00001F6C  4EB9 0000275A           1637          JSR     ASCII_ADDRESS
00001F72  2F05                    1638          MOVE.L  D5,-(SP)    ;save data on the stack
00001F74                          1639          
00001F74  528B                    1640          ADD.L   #1,A3   ;inc end ptr to first byte of address
00001F76  244B                    1641          MOVE.L  A3,A2   ;set start ptr
00001F78                          1642  BFGETENDADDRONE:
00001F78  0C1B 0020               1643          CMP.B   #$20,(A3)+
00001F7C  6700 0004               1644          BEQ     BFNEXTADDRTWO
00001F80  60F6                    1645          BRA     BFGETENDADDRONE
00001F82                          1646          
00001F82                          1647  BFNEXTADDRTWO:
00001F82  538B                    1648          SUB.L   #1,A3   ;off by one error
00001F84  4EB9 0000275A           1649          JSR     ASCII_ADDRESS   ;convert address to hex
00001F8A  2A45                    1650          MOVE.L  D5,A5       ;store address 1 in A5
00001F8C  8AFC 0002               1651          DIVU    #2,D5
00001F90  4845                    1652          SWAP    D5
00001F92  BA7C 0000               1653          CMP.W   #$00,D5
00001F96  6600 0776               1654          BNE     ERRORSR
00001F9A                          1655          
00001F9A  528B                    1656          ADD.L   #1,A3   ;inc end ptr to first byte of address
00001F9C  244B                    1657          MOVE.L  A3,A2   ;set start ptr
00001F9E                          1658  BFGETLASTEND:
00001F9E  0C1B 0000               1659          CMP.B   #$00,(A3)+
00001FA2  6700 0004               1660          BEQ     STOREDATA
00001FA6  60F6                    1661          BRA     BFGETLASTEND
00001FA8                          1662          
00001FA8                          1663  STOREDATA:
00001FA8  538B                    1664          SUB.L   #1,A3   ;off by one error
00001FAA  4EB9 0000275A           1665          JSR     ASCII_ADDRESS
00001FB0  2C45                    1666          MOVE.L  D5,A6   ;end address in A6
00001FB2  8AFC 0002               1667          DIVU    #2,D5
00001FB6  4845                    1668          SWAP    D5
00001FB8  BA7C 0000               1669          CMP.W   #$00,D5
00001FBC  6600 0750               1670          BNE     ERRORSR
00001FC0  2A1F                    1671          MOVE.L  (SP)+,D5
00001FC2                          1672          
00001FC2                          1673  DATALOOP:
00001FC2  BDCD                    1674          CMP.L   A5,A6
00001FC4  6D00 0006               1675          BLT     ENDBF
00001FC8  3AC5                    1676          MOVE.W  D5,(A5)+
00001FCA  60F6                    1677          BRA     DATALOOP
00001FCC                          1678  
00001FCC  6000 F128               1679  ENDBF:  BRA RESTORE
00001FD0                          1680  *--------------------------------------------------------------------------------------*
00001FD0                          1681  
00001FD0  5289                    1682  BMOV:   ADD.L   #1,A1   ;get to start of first address
00001FD2  2449                    1683          MOVE.L  A1,A2   ;set up start ptr
00001FD4  264A                    1684          MOVE.L  A2,A3   ;set up end ptr
00001FD6                          1685          
00001FD6                          1686  FIRSTADDRESS:
00001FD6  0C1B 0020               1687          CMP.B #$20,(A3)+
00001FDA  6700 0004               1688          BEQ     COMPUTEFIRSTADD
00001FDE  60F6                    1689          BRA     FIRSTADDRESS
00001FE0                          1690          
00001FE0                          1691  COMPUTEFIRSTADD:
00001FE0  538B                    1692          SUB.L   #1,A3   ;off by one error
00001FE2  4EB9 0000275A           1693          JSR     ASCII_ADDRESS
00001FE8  2045                    1694          MOVE.L  D5,A0   ; save 1st address
00001FEA                          1695          
00001FEA  528B                    1696          ADD.L   #1,A3
00001FEC  244B                    1697          MOVE.L  A3,A2
00001FEE                          1698  SECONDADDRESS:
00001FEE  0C1B 0020               1699          CMP.B   #$20,(A3)+
00001FF2  6700 0004               1700          BEQ     COMPUTESECONDADDRESS
00001FF6  60F6                    1701          BRA     SECONDADDRESS
00001FF8                          1702          
00001FF8                          1703  COMPUTESECONDADDRESS:
00001FF8  538B                    1704          SUB.L   #1,A3   ;off by one error
00001FFA  4EB9 0000275A           1705          JSR     ASCII_ADDRESS
00002000  2845                    1706          MOVE.L  D5,A4   ;save 2nd address
00002002                          1707  
00002002  528B                    1708          ADD.L   #1,A3
00002004  244B                    1709          MOVE.L  A3,A2
00002006                          1710  THIRDADDRESS:
00002006  0C1B 0020               1711          CMP.B   #$20,(A3)+
0000200A  6700 0004               1712          BEQ     COMPUTETHIRDADDRESS
0000200E  60F6                    1713          BRA     THIRDADDRESS
00002010                          1714          
00002010                          1715  COMPUTETHIRDADDRESS:
00002010  538B                    1716          SUB.L   #1,A3
00002012  4EB9 0000275A           1717          JSR     ASCII_ADDRESS
00002018  2A45                    1718          MOVE.L  D5,A5   ;save 3rd address
0000201A                          1719          
0000201A  528B                    1720          ADD.L   #1,A3
0000201C  244B                    1721          MOVE.L  A3,A2
0000201E                          1722  FOURTHADDRESS:
0000201E  0C1B 0000               1723          CMP.B   #$00,(A3)+
00002022  6700 0004               1724          BEQ     COMPUTEFOURTHADDRESS
00002026  60F6                    1725          BRA     FOURTHADDRESS
00002028                          1726          
00002028                          1727  COMPUTEFOURTHADDRESS:
00002028  538B                    1728          SUB.L   #1,A3
0000202A  4EB9 0000275A           1729          JSR     ASCII_ADDRESS
00002030  2C45                    1730          MOVE.L  D5,A6   ;save 3rd address
00002032                          1731          
00002032                          1732          
00002032                          1733  
00002032                          1734          *Check for matching dimensions*
00002032  2008                    1735          MOVE.L  A0,D0
00002034  220C                    1736          MOVE.L  A4,D1
00002036  2A0D                    1737          MOVE.L  A5,D5
00002038  2C0E                    1738          MOVE.L  A6,D6
0000203A  9280                    1739          SUB.L   D0,D1
0000203C  9C85                    1740          SUB.L   D5,D6
0000203E  BC81                    1741          CMP.L   D1,D6
00002040  6600 06CC               1742          BNE     ERRORSR
00002044  B9C8                    1743          CMP.L   A0,A4
00002046  6D00 06C6               1744          BLT     ERRORSR
0000204A  BDCD                    1745          CMP.L   A5,A6
0000204C  6D00 06C0               1746          BLT     ERRORSR
00002050  528C                    1747          ADD.L   #1,A4
00002052                          1748  
00002052                          1749  DATATRANSFER:
00002052  B9C8                    1750          CMP.L   A0,A4
00002054  6D00 0006               1751          BLT     BMOVDONE
00002058  1AD8                    1752          MOVE.B  (A0)+,(A5)+
0000205A  60F6                    1753          BRA     DATATRANSFER
0000205C                          1754          
0000205C                          1755  
0000205C                          1756  
0000205C                          1757  BMOVDONE:
0000205C  6000 F098               1758          BRA RESTORE
00002060                          1759  
00002060                          1760  *--------------------------------------------------------------------------------------*
00002060                          1761  
00002060                          1762  BTST:   
00002060  5289                    1763         ADD.L    #1,A1   ;first byte of data
00002062  2649                    1764         MOVE.L   A1,A3   ;for end ptr
00002064                          1765  BTSTGETENDDATA:
00002064  0C1B 0020               1766          CMP.B   #$20,(A3)+
00002068  6700 0004               1767          BEQ     BTSTNEXTADDR
0000206C  60F6                    1768          BRA     BTSTGETENDDATA
0000206E                          1769  BTSTNEXTADDR:
0000206E  2449                    1770          MOVE.L  A1,A2   ;for subroutine
00002070  538B                    1771          SUB.L   #1,A3   ;off by one error
00002072  4EB9 0000275A           1772          JSR     ASCII_ADDRESS
00002078  2F05                    1773          MOVE.L  D5,-(SP)    ;save data on the stack
0000207A                          1774          
0000207A  528B                    1775          ADD.L   #1,A3   ;inc end ptr to first byte of address
0000207C  244B                    1776          MOVE.L  A3,A2   ;set start ptr
0000207E                          1777  BTSTGETENDADDRONE:
0000207E  0C1B 0020               1778          CMP.B   #$20,(A3)+
00002082  6700 0004               1779          BEQ     BTSTNEXTADDRTWO
00002086  60F6                    1780          BRA     BTSTGETENDADDRONE
00002088                          1781          
00002088                          1782  BTSTNEXTADDRTWO:
00002088  538B                    1783          SUB.L   #1,A3   ;off by one error
0000208A  4EB9 0000275A           1784          JSR     ASCII_ADDRESS   ;convert address to hex
00002090  2A45                    1785          MOVE.L  D5,A5       ;store address 1 in A5
00002092  2845                    1786          MOVE.L  D5,A4       ;for second run through
00002094                          1787                
00002094  528B                    1788          ADD.L   #1,A3   ;inc end ptr to first byte of address
00002096  244B                    1789          MOVE.L  A3,A2   ;set start ptr
00002098                          1790  BTSTGETLASTEND:
00002098  0C1B 0000               1791          CMP.B   #$00,(A3)+
0000209C  6700 0004               1792          BEQ     STOREDATABTST
000020A0  60F6                    1793          BRA     BTSTGETLASTEND
000020A2                          1794  
000020A2                          1795  
000020A2                          1796  STOREDATABTST:
000020A2  538B                    1797          SUB.L   #1,A3   ;off by one error
000020A4  4EB9 0000275A           1798          JSR     ASCII_ADDRESS
000020AA  2C45                    1799          MOVE.L  D5,A6   ;end address in A6
000020AC  2A1F                    1800          MOVE.L  (SP)+,D5
000020AE                          1801          
000020AE                          1802  BTSTDATALOOP:
000020AE  BDCD                    1803          CMP.L   A5,A6
000020B0  6D00 0006               1804          BLT     READ
000020B4  1AC5                    1805          MOVE.B  D5,(A5)+
000020B6  60F6                    1806          BRA     BTSTDATALOOP
000020B8                          1807  
000020B8                          1808  
000020B8                          1809  READ:
000020B8  BDCC                    1810          CMP.L   A4,A6
000020BA  6D00 006C               1811          BLT     COMPLETE
000020BE  BA1C                    1812          CMP.B   (A4)+,D5
000020C0  6600 0004               1813          BNE     FAIL
000020C4  60F2                    1814          BRA     READ
000020C6                          1815          
000020C6                          1816  FAIL:
000020C6  43F8 37F8               1817          LEA     BTST4,A1
000020CA  720B                    1818          MOVE.L  #11,D1
000020CC  7000                    1819          MOVE.L  #0,D0
000020CE  4E4F                    1820          TRAP    #15
000020D0                          1821          
000020D0  43F8 37C1               1822          LEA     BTST1,A1
000020D4  7001                    1823          MOVE.L  #1,D0
000020D6  7214                    1824          MOVE.L  #20,D1
000020D8  4E4F                    1825          TRAP    #15
000020DA                          1826          
000020DA  1605                    1827          MOVE.B  D5,D3   ;for subroutine
000020DC  4EB9 0000279A           1828          JSR     HEXTOASCII
000020E2  224A                    1829          MOVE.L     A2,A1
000020E4  7000                    1830          MOVE.L  #0,D0
000020E6  97CA                    1831          SUBA.L  A2,A3   ;number of bytes
000020E8  220B                    1832          MOVE.L  A3,D1
000020EA  4E4F                    1833          TRAP    #15
000020EC                          1834          
000020EC                          1835          
000020EC  43F8 37D5               1836          LEA     BTST2,A1
000020F0  7001                    1837          MOVE.L  #1,D0
000020F2  7211                    1838          MOVE.L  #17,D1
000020F4  4E4F                    1839          TRAP    #15
000020F6                          1840          
000020F6                          1841          
000020F6  538C                    1842          SUB.L   #1,A4   ;go back to address that failed
000020F8  1614                    1843          MOVE.B  (A4),D3
000020FA  4EB9 0000279A           1844          JSR     HEXTOASCII  ;convert for output
00002100  224A                    1845          MOVE.L     A2,A1
00002102  7000                    1846          MOVE.L  #0,D0
00002104  97CA                    1847          SUBA.L  A2,A3   ;number of bytes
00002106  220B                    1848          MOVE.L  A3,D1
00002108  4E4F                    1849          TRAP    #15
0000210A                          1850          
0000210A  43F8 3803               1851          LEA     BTST5,A1
0000210E  721B                    1852          MOVE.L  #27,D1
00002110  103C 0001               1853          MOVE.B  #1,D0
00002114  4E4F                    1854          TRAP    #15
00002116  260C                    1855          MOVE.L  A4,D3
00002118  4EB9 0000279A           1856          JSR     HEXTOASCII
0000211E  224A                    1857          MOVE.L     A2,A1
00002120  7000                    1858          MOVE.L  #0,D0
00002122  97CA                    1859          SUBA.L  A2,A3   ;number of bytes
00002124  220B                    1860          MOVE.L  A3,D1
00002126  4E4F                    1861          TRAP    #15
00002128                          1862  
00002128                          1863  
00002128                          1864          
00002128                          1865  COMPLETE:
00002128                          1866  
00002128  43F8 37E6               1867          LEA     BTST3,A1
0000212C  7212                    1868          MOVE.L  #18,D1
0000212E  7000                    1869          MOVE.L  #0,D0
00002130  4E4F                    1870          TRAP    #15
00002132  6000 EFC2               1871          BRA RESTORE
00002136                          1872  
00002136                          1873  *--------------------------------------------------------------------------------------*
00002136                          1874  
00002136                          1875  BSCH:   
00002136  5289                    1876          ADD.L   #1,A1   ;start of data
00002138  2449                    1877          MOVE.L  A1,A2   ;set up bac ptr
0000213A                          1878          
0000213A                          1879  BSCHENDDATA:
0000213A  0C1A 0020               1880          CMP.B   #$20,(A2)+
0000213E  6700 0004               1881          BEQ     BSCHFIRSTADD
00002142  60F6                    1882          BRA     BSCHENDDATA
00002144                          1883  
00002144                          1884  
00002144                          1885  BSCHFIRSTADD:
00002144  538A                    1886          SUB.L   #1,A2
00002146  264A                    1887          MOVE.L  A2,A3
00002148  2449                    1888          MOVE.L  A1,A2
0000214A  4EB9 0000275A           1889          JSR     ASCII_ADDRESS
00002150  97C9                    1890          SUB.L   A1,A3   ;see how many bytes
00002152  2C0B                    1891          MOVE.L  A3,D6   ;store byte/word/long in D6   
00002154  528A                    1892          ADD.L   #1,A2   ;set up for start of next address     
00002156  264A                    1893          MOVE.L  A2,A3   ;set up for end ptr
00002158  2F05                    1894          MOVE.L  D5,-(SP)    ;save data to stack
0000215A                          1895          
0000215A                          1896          
0000215A                          1897  BSCHFADDEND:
0000215A  0C1B 0020               1898          CMP.B   #$20,(A3)+
0000215E  6700 0004               1899          BEQ     BSCHSECONDADD
00002162  60F6                    1900          BRA     BSCHFADDEND
00002164                          1901          
00002164                          1902          
00002164                          1903  BSCHSECONDADD:
00002164  538B                    1904          SUB.L   #1,A3   ;off by one
00002166  4EB9 0000275A           1905          JSR     ASCII_ADDRESS
0000216C  2A45                    1906          MOVE.L  D5,A5   ;first address destination
0000216E  528B                    1907          ADD.L   #1,A3   ;start it at next address
00002170  244B                    1908          MOVE.L  A3,A2   ; set up for next address
00002172                          1909          
00002172                          1910          
00002172                          1911  BSCHSECONDFIND:
00002172  0C1B 0000               1912          CMP.B   #$00,(A3)+
00002176  6700 0004               1913          BEQ     TESTOP
0000217A  60F6                    1914          BRA     BSCHSECONDFIND
0000217C                          1915          
0000217C                          1916          
0000217C                          1917  TESTOP: 
0000217C  538B                    1918          SUB.L   #1,A3   ;off by one
0000217E  4EB9 0000275A           1919          JSR     ASCII_ADDRESS
00002184  2C45                    1920          MOVE.L  D5,A6   ;end address at A6
00002186  2A1F                    1921          MOVE.L  (SP)+,D5    ;restore data
00002188  BC3C 0002               1922          CMP.B   #2,D6
0000218C  6700 0016               1923          BEQ     BYTEBSCH
00002190  BC3C 0004               1924          CMP.B   #4,D6
00002194  6700 001C               1925          BEQ     WORDBSCH
00002198  BC3C 0008               1926          CMP.B   #8,D6
0000219C  6700 0022               1927          BEQ     LONGBSCH
000021A0  6000 056C               1928          BRA     ERRORSR
000021A4                          1929          
000021A4                          1930  BYTEBSCH:
000021A4  BDCD                    1931          CMP.L   A5,A6
000021A6  6D00 0070               1932          BLT     ENDBSCH
000021AA  BA1D                    1933          CMP.B   (A5)+,D5
000021AC  6700 0020               1934          BEQ     FOUNDB
000021B0  60F2                    1935          BRA     BYTEBSCH
000021B2                          1936  
000021B2                          1937  WORDBSCH:
000021B2  BDCD                    1938          CMP.L   A5,A6
000021B4  6D00 0062               1939          BLT     ENDBSCH
000021B8  BA5D                    1940          CMP.W   (A5)+,D5
000021BA  6700 001A               1941          BEQ     FOUNDW
000021BE  60F2                    1942          BRA     WORDBSCH
000021C0                          1943  
000021C0                          1944  LONGBSCH:
000021C0  BDCD                    1945          CMP.L   A5,A6
000021C2  6D00 0054               1946          BLT     ENDBSCH
000021C6  BA9D                    1947          CMP.L   (A5)+,D5
000021C8  6700 0014               1948          BEQ     FOUNDL
000021CC  60F2                    1949          BRA     LONGBSCH
000021CE                          1950  
000021CE                          1951  
000021CE                          1952  
000021CE                          1953  FOUNDB:
000021CE  538D                    1954          SUB.L   #1,A5
000021D0  1615                    1955          MOVE.B  (A5),D3
000021D2  6000 000E               1956          BRA     SUCCESSTEXT
000021D6                          1957  FOUNDW:
000021D6  558D                    1958          SUB.L   #2,A5
000021D8  3615                    1959          MOVE.W  (A5),D3
000021DA  6000 0006               1960          BRA     SUCCESSTEXT
000021DE                          1961  FOUNDL:
000021DE  598D                    1962          SUB.L   #4,A5
000021E0  2615                    1963          MOVE.L  (A5),D3
000021E2                          1964          
000021E2                          1965  SUCCESSTEXT:
000021E2  43F8 381E               1966          LEA BSCH1,A1
000021E6  7206                    1967          MOVE.L  #6,D1
000021E8  7001                    1968          MOVE.L  #1,D0
000021EA  4E4F                    1969          TRAP    #15
000021EC                          1970  
000021EC  4EB9 0000279A           1971          JSR     HEXTOASCII
000021F2  224A                    1972          MOVE.L  A2,A1
000021F4  97CA                    1973          SUB.L   A2,A3
000021F6  220B                    1974          MOVE.L  A3,D1   ;how many bytes
000021F8  7000                    1975          MOVE.L  #0,D0
000021FA  4E4F                    1976          TRAP    #15
000021FC                          1977          
000021FC  43F8 3824               1978          LEA BSCH2,A1
00002200  7212                    1979          MOVE.L  #18,D1
00002202  7001                    1980          MOVE.L  #1,D0
00002204  4E4F                    1981          TRAP    #15
00002206                          1982          
00002206  260D                    1983          MOVE.L  A5,D3
00002208  4EB9 0000279A           1984          JSR     HEXTOASCII
0000220E  224A                    1985          MOVE.L  A2,A1
00002210  97CA                    1986          SUB.L   A2,A3
00002212  220B                    1987          MOVE.L  A3,D1   ;how many bytes
00002214  7000                    1988          MOVE.L  #0,D0
00002216  4E4F                    1989          TRAP    #15
00002218                          1990  
00002218                          1991          
00002218                          1992  ENDBSCH:        
00002218  6000 EEDC               1993          BRA RESTORE
0000221C                          1994  
0000221C                          1995  *--------------------------------------------------------------------------------------*
0000221C                          1996  
0000221C                          1997  GO:    
0000221C  2449                    1998          MOVE.L  A1,A2   ;setup for hex conversion
0000221E  264A                    1999          MOVE.L  A2,A3   
00002220                          2000  GGETEND:
00002220  0C1B 0000               2001          CMP.B   #$00,(A3)+
00002224  6700 0004               2002          BEQ     EXECUTE
00002228  60F6                    2003          BRA     GGETEND
0000222A                          2004          
0000222A                          2005  EXECUTE:
0000222A  538B                    2006          SUB.L   #1,A3   ;off by one error
0000222C  4EB9 0000275A           2007          JSR     ASCII_ADDRESS
00002232  2045                    2008          MOVE.L  D5,A0   
00002234  4E90                    2009          JSR     (A0)    ;go to program
00002236                          2010          **NOTE: THE PROGRAM MUST HAVE RTS OR CONTROL WILL NOT BE RETURNED BACK TO MONITOR441!!!**
00002236  6000 EEBE               2011          BRA RESTORE
0000223A                          2012  
0000223A                          2013  *--------------------------------------------------------------------------------------*
0000223A                          2014  
0000223A                          2015  DF:    *Registers have already been saved to STACK, just need to pop them off first*
0000223A                          2016          *Stack looks like this*
0000223A                          2017          
0000223A                          2018          *-------------*
0000223A                          2019          *|D0-D7/A0-A6|*
0000223A                          2020          *|     USP   |*
0000223A                          2021          *|     SR    |*
0000223A                          2022          *|     SSP   |*
0000223A                          2023          *|     PC    |*
0000223A                          2024          *-------------*
0000223A                          2025          *I should've used loops for efficiency but runtime is not a design constraint*
0000223A                          2026          *Maybe fix this in the future?*
0000223A                          2027          
0000223A                          2028            *----------D0-----------*
0000223A  43F8 3847               2029         LEA      RD0,A1
0000223E  7204                    2030         MOVE.L   #4,D1
00002240  7001                    2031         MOVE.L   #1,D0
00002242  4E4F                    2032         TRAP     #15
00002244  261F                    2033         MOVE.L   (SP)+,D3    
00002246  4EB9 0000279A           2034         JSR      HEXTOASCII
0000224C  224A                    2035         MOVE.L   A2,A1
0000224E  95CB                    2036         SUB.L    A3,A2
00002250  240A                    2037         MOVE.L   A2,D2
00002252  B4BC FFFFFFF8           2038         CMP.L    #-8,D2
00002258  6700 0006               2039         BEQ      D0DONTWORRY
0000225C                          2040  D0ACCOUNTFORZEROS:
0000225C  5082                    2041          ADDI.L  #8,D2
0000225E  93C2                    2042          SUB.L   D2,A1
00002260                          2043  D0DONTWORRY:
00002260  7000                    2044         MOVE.L   #0,D0
00002262  7208                    2045         MOVE.L   #8,D1
00002264  4E4F                    2046         TRAP     #15
00002266                          2047         
00002266                          2048             *----------D1-----------*
00002266  43F8 384B               2049         LEA      RD1,A1
0000226A  7204                    2050         MOVE.L   #4,D1
0000226C  7001                    2051         MOVE.L   #1,D0
0000226E  4E4F                    2052         TRAP     #15
00002270  261F                    2053         MOVE.L   (SP)+,D3    
00002272  4EB9 0000279A           2054         JSR      HEXTOASCII
00002278  224A                    2055         MOVE.L   A2,A1
0000227A  95CB                    2056         SUB.L    A3,A2
0000227C  240A                    2057         MOVE.L   A2,D2
0000227E  B4BC FFFFFFF8           2058         CMP.L    #-8,D2
00002284  6700 0006               2059         BEQ      D1DONTWORRY
00002288                          2060  D1ACCOUNTFORZEROS:
00002288  5082                    2061          ADDI.L  #8,D2
0000228A  93C2                    2062          SUB.L   D2,A1
0000228C                          2063  D1DONTWORRY:
0000228C  7000                    2064         MOVE.L   #0,D0
0000228E  7208                    2065         MOVE.L   #8,D1
00002290  4E4F                    2066         TRAP     #15
00002292                          2067         
00002292                          2068             *----------D2-----------*
00002292  43F8 384F               2069         LEA      RD2,A1
00002296  7204                    2070         MOVE.L   #4,D1
00002298  7001                    2071         MOVE.L   #1,D0
0000229A  4E4F                    2072         TRAP     #15
0000229C  261F                    2073         MOVE.L   (SP)+,D3   
0000229E  4EB9 0000279A           2074         JSR      HEXTOASCII
000022A4  224A                    2075         MOVE.L   A2,A1
000022A6  95CB                    2076         SUB.L    A3,A2
000022A8  240A                    2077         MOVE.L   A2,D2
000022AA  B4BC FFFFFFF8           2078         CMP.L    #-8,D2
000022B0  6700 0006               2079         BEQ      D2DONTWORRY
000022B4                          2080  D2ACCOUNTFORZEROS:
000022B4  5082                    2081          ADDI.L  #8,D2
000022B6  93C2                    2082          SUB.L   D2,A1
000022B8                          2083  D2DONTWORRY:
000022B8  7000                    2084         MOVE.L   #0,D0
000022BA  7208                    2085         MOVE.L   #8,D1
000022BC  4E4F                    2086         TRAP     #15
000022BE                          2087         
000022BE                          2088              *----------D3-----------*
000022BE  43F8 3853               2089         LEA      RD3,A1
000022C2  7204                    2090         MOVE.L   #4,D1
000022C4  7001                    2091         MOVE.L   #1,D0
000022C6  4E4F                    2092         TRAP     #15   
000022C8  261F                    2093         MOVE.L   (SP)+,D3  
000022CA  4EB9 0000279A           2094         JSR      HEXTOASCII
000022D0  224A                    2095         MOVE.L   A2,A1
000022D2  95CB                    2096         SUB.L    A3,A2
000022D4  240A                    2097         MOVE.L   A2,D2
000022D6  B4BC FFFFFFF8           2098         CMP.L    #-8,D2
000022DC  6700 0006               2099         BEQ      D3DONTWORRY
000022E0                          2100  D3ACCOUNTFORZEROS:
000022E0  5082                    2101          ADDI.L  #8,D2
000022E2  93C2                    2102          SUB.L   D2,A1
000022E4                          2103  D3DONTWORRY:
000022E4  7000                    2104         MOVE.L   #0,D0
000022E6  7208                    2105         MOVE.L   #8,D1
000022E8  4E4F                    2106         TRAP     #15
000022EA                          2107         
000022EA                          2108              *----------D4-----------*
000022EA  43F8 3857               2109         LEA      RD4,A1
000022EE  7204                    2110         MOVE.L   #4,D1
000022F0  7001                    2111         MOVE.L   #1,D0
000022F2  4E4F                    2112         TRAP     #15
000022F4  261F                    2113         MOVE.L   (SP)+,D3    
000022F6  4EB9 0000279A           2114         JSR      HEXTOASCII
000022FC  224A                    2115         MOVE.L   A2,A1
000022FE  95CB                    2116         SUB.L    A3,A2
00002300  240A                    2117         MOVE.L   A2,D2
00002302  B4BC FFFFFFF8           2118         CMP.L    #-8,D2
00002308  6700 0006               2119         BEQ      D4DONTWORRY
0000230C                          2120  D4ACCOUNTFORZEROS:
0000230C  5082                    2121          ADDI.L  #8,D2
0000230E  93C2                    2122          SUB.L   D2,A1
00002310                          2123  D4DONTWORRY:
00002310  7000                    2124         MOVE.L   #0,D0
00002312  7208                    2125         MOVE.L   #8,D1
00002314  4E4F                    2126         TRAP     #15
00002316                          2127         
00002316                          2128         *----------D5-----------*
00002316  43F8 385B               2129         LEA      RD5,A1
0000231A  7204                    2130         MOVE.L   #4,D1
0000231C  7001                    2131         MOVE.L   #1,D0
0000231E  4E4F                    2132         TRAP     #15
00002320  261F                    2133         MOVE.L   (SP)+,D3    
00002322  4EB9 0000279A           2134         JSR      HEXTOASCII
00002328  224A                    2135         MOVE.L   A2,A1
0000232A  95CB                    2136         SUB.L    A3,A2
0000232C  240A                    2137         MOVE.L   A2,D2
0000232E  B4BC FFFFFFF8           2138         CMP.L    #-8,D2
00002334  6700 0006               2139         BEQ      D5DONTWORRY
00002338                          2140  D5ACCOUNTFORZEROS:
00002338  5082                    2141          ADDI.L  #8,D2
0000233A  93C2                    2142          SUB.L   D2,A1
0000233C                          2143  D5DONTWORRY:
0000233C  7000                    2144         MOVE.L   #0,D0
0000233E  7208                    2145         MOVE.L   #8,D1
00002340  4E4F                    2146         TRAP     #15
00002342                          2147  
00002342                          2148          *----------D6-----------*
00002342  43F8 385F               2149         LEA      RD6,A1
00002346  7204                    2150         MOVE.L   #4,D1
00002348  7001                    2151         MOVE.L   #1,D0
0000234A  4E4F                    2152         TRAP     #15
0000234C  261F                    2153         MOVE.L   (SP)+,D3    
0000234E  4EB9 0000279A           2154         JSR      HEXTOASCII
00002354  224A                    2155         MOVE.L   A2,A1
00002356  95CB                    2156         SUB.L    A3,A2
00002358  240A                    2157         MOVE.L   A2,D2
0000235A  B4BC FFFFFFF8           2158         CMP.L    #-8,D2
00002360  6700 0006               2159         BEQ      D6DONTWORRY
00002364                          2160  D6ACCOUNTFORZEROS:
00002364  5082                    2161          ADDI.L  #8,D2
00002366  93C2                    2162          SUB.L   D2,A1
00002368                          2163  D6DONTWORRY:
00002368  7000                    2164         MOVE.L   #0,D0
0000236A  7208                    2165         MOVE.L   #8,D1
0000236C  4E4F                    2166         TRAP     #15
0000236E                          2167         
0000236E                          2168           *----------D7-----------*
0000236E  43F8 3863               2169         LEA      RD7,A1
00002372  7204                    2170         MOVE.L   #4,D1
00002374  7001                    2171         MOVE.L   #1,D0
00002376  4E4F                    2172         TRAP     #15
00002378  261F                    2173         MOVE.L   (SP)+,D3    
0000237A  4EB9 0000279A           2174         JSR      HEXTOASCII
00002380  224A                    2175         MOVE.L   A2,A1
00002382  95CB                    2176         SUB.L    A3,A2
00002384  240A                    2177         MOVE.L   A2,D2
00002386  B4BC FFFFFFF8           2178         CMP.L    #-8,D2
0000238C  6700 0006               2179         BEQ      D7DONTWORRY
00002390                          2180  D7ACCOUNTFORZEROS:
00002390  5082                    2181          ADDI.L  #8,D2
00002392  93C2                    2182          SUB.L   D2,A1
00002394                          2183  D7DONTWORRY:
00002394  7000                    2184         MOVE.L   #0,D0
00002396  7208                    2185         MOVE.L   #8,D1
00002398  4E4F                    2186         TRAP     #15
0000239A                          2187  
0000239A                          2188     *----------A0-----------*
0000239A  43F8 3867               2189         LEA      RA0,A1
0000239E  7204                    2190         MOVE.L   #4,D1
000023A0  7001                    2191         MOVE.L   #1,D0
000023A2  4E4F                    2192         TRAP     #15
000023A4  261F                    2193         MOVE.L   (SP)+,D3    
000023A6  4EB9 0000279A           2194         JSR      HEXTOASCII
000023AC  224A                    2195         MOVE.L   A2,A1
000023AE  95CB                    2196         SUB.L    A3,A2
000023B0  240A                    2197         MOVE.L   A2,D2
000023B2  B4BC FFFFFFF8           2198         CMP.L    #-8,D2
000023B8  6700 0006               2199         BEQ      A0DONTWORRY
000023BC                          2200  A0ACCOUNTFORZEROS:
000023BC  5082                    2201          ADDI.L  #8,D2
000023BE  93C2                    2202          SUB.L   D2,A1
000023C0                          2203  A0DONTWORRY:
000023C0  7000                    2204         MOVE.L   #0,D0
000023C2  7208                    2205         MOVE.L   #8,D1
000023C4  4E4F                    2206         TRAP     #15
000023C6                          2207         
000023C6                          2208            *----------A1-----------*
000023C6  43F8 386B               2209         LEA      RA1,A1
000023CA  7204                    2210         MOVE.L   #4,D1
000023CC  7001                    2211         MOVE.L   #1,D0
000023CE  4E4F                    2212         TRAP     #15
000023D0  261F                    2213         MOVE.L   (SP)+,D3    
000023D2  4EB9 0000279A           2214         JSR      HEXTOASCII
000023D8  224A                    2215         MOVE.L   A2,A1
000023DA  95CB                    2216         SUB.L    A3,A2
000023DC  240A                    2217         MOVE.L   A2,D2
000023DE  B4BC FFFFFFF8           2218         CMP.L    #-8,D2
000023E4  6700 0006               2219         BEQ      A1DONTWORRY
000023E8                          2220  A1ACCOUNTFORZEROS:
000023E8  5082                    2221          ADDI.L  #8,D2
000023EA  93C2                    2222          SUB.L   D2,A1
000023EC                          2223  A1DONTWORRY:
000023EC  7000                    2224         MOVE.L   #0,D0
000023EE  7208                    2225         MOVE.L   #8,D1
000023F0  4E4F                    2226         TRAP     #15
000023F2                          2227         
000023F2                          2228          *----------A2-----------*
000023F2  43F8 386F               2229         LEA      RA2,A1
000023F6  7204                    2230         MOVE.L   #4,D1
000023F8  7001                    2231         MOVE.L   #1,D0
000023FA  4E4F                    2232         TRAP     #15
000023FC  261F                    2233         MOVE.L   (SP)+,D3    
000023FE  4EB9 0000279A           2234         JSR      HEXTOASCII
00002404  224A                    2235         MOVE.L   A2,A1
00002406  95CB                    2236         SUB.L    A3,A2
00002408  240A                    2237         MOVE.L   A2,D2
0000240A  B4BC FFFFFFF8           2238         CMP.L    #-8,D2
00002410  6700 0006               2239         BEQ      A2DONTWORRY
00002414                          2240  A2ACCOUNTFORZEROS:
00002414  5082                    2241          ADDI.L  #8,D2
00002416  93C2                    2242          SUB.L   D2,A1
00002418                          2243  A2DONTWORRY:
00002418  7000                    2244         MOVE.L   #0,D0
0000241A  7208                    2245         MOVE.L   #8,D1
0000241C  4E4F                    2246         TRAP     #15
0000241E                          2247         
0000241E                          2248           *----------A3-----------*
0000241E  43F8 3873               2249         LEA      RA3,A1
00002422  7204                    2250         MOVE.L   #4,D1
00002424  7001                    2251         MOVE.L   #1,D0
00002426  4E4F                    2252         TRAP     #15
00002428  261F                    2253         MOVE.L   (SP)+,D3    
0000242A  4EB9 0000279A           2254         JSR      HEXTOASCII
00002430  224A                    2255         MOVE.L   A2,A1
00002432  95CB                    2256         SUB.L    A3,A2
00002434  240A                    2257         MOVE.L   A2,D2
00002436  B4BC FFFFFFF8           2258         CMP.L    #-8,D2
0000243C  6700 0006               2259         BEQ      A3DONTWORRY
00002440                          2260  A3ACCOUNTFORZEROS:
00002440  5082                    2261          ADDI.L  #8,D2
00002442  93C2                    2262          SUB.L   D2,A1
00002444                          2263  A3DONTWORRY:
00002444  7000                    2264         MOVE.L   #0,D0
00002446  7208                    2265         MOVE.L   #8,D1
00002448  4E4F                    2266         TRAP     #15
0000244A                          2267         
0000244A                          2268          *----------A4-----------*
0000244A  43F8 3873               2269         LEA      RA3,A1
0000244E  7204                    2270         MOVE.L   #4,D1
00002450  7001                    2271         MOVE.L   #1,D0
00002452  4E4F                    2272         TRAP     #15
00002454  261F                    2273         MOVE.L   (SP)+,D3    
00002456  4EB9 0000279A           2274         JSR      HEXTOASCII
0000245C  224A                    2275         MOVE.L   A2,A1
0000245E  95CB                    2276         SUB.L    A3,A2
00002460  240A                    2277         MOVE.L   A2,D2
00002462  B4BC FFFFFFF8           2278         CMP.L    #-8,D2
00002468  6700 0006               2279         BEQ      A4DONTWORRY
0000246C                          2280  A4ACCOUNTFORZEROS:
0000246C  5082                    2281          ADDI.L  #8,D2
0000246E  93C2                    2282          SUB.L   D2,A1
00002470                          2283  A4DONTWORRY:
00002470  7000                    2284         MOVE.L   #0,D0
00002472  7208                    2285         MOVE.L   #8,D1
00002474  4E4F                    2286         TRAP     #15
00002476                          2287         
00002476                          2288         *----------A5-----------*
00002476  43F8 3873               2289         LEA      RA3,A1
0000247A  7204                    2290         MOVE.L   #4,D1
0000247C  7001                    2291         MOVE.L   #1,D0
0000247E  4E4F                    2292         TRAP     #15
00002480  261F                    2293         MOVE.L   (SP)+,D3    
00002482  4EB9 0000279A           2294         JSR      HEXTOASCII
00002488  224A                    2295         MOVE.L   A2,A1
0000248A  95CB                    2296         SUB.L    A3,A2
0000248C  240A                    2297         MOVE.L   A2,D2
0000248E  B4BC FFFFFFF8           2298         CMP.L    #-8,D2
00002494  6700 0006               2299         BEQ      A5DONTWORRY
00002498                          2300  A5ACCOUNTFORZEROS:
00002498  5082                    2301          ADDI.L  #8,D2
0000249A  93C2                    2302          SUB.L   D2,A1
0000249C                          2303  A5DONTWORRY:
0000249C  7000                    2304         MOVE.L   #0,D0
0000249E  7208                    2305         MOVE.L   #8,D1
000024A0  4E4F                    2306         TRAP     #15
000024A2                          2307         
000024A2                          2308         *----------A6-----------*
000024A2  43F8 3873               2309         LEA      RA3,A1
000024A6  7204                    2310         MOVE.L   #4,D1
000024A8  7001                    2311         MOVE.L   #1,D0
000024AA  4E4F                    2312         TRAP     #15
000024AC  261F                    2313         MOVE.L   (SP)+,D3    
000024AE  4EB9 0000279A           2314         JSR      HEXTOASCII
000024B4  224A                    2315         MOVE.L   A2,A1
000024B6  95CB                    2316         SUB.L    A3,A2
000024B8  240A                    2317         MOVE.L   A2,D2
000024BA  B4BC FFFFFFF8           2318         CMP.L    #-8,D2
000024C0  6700 0006               2319         BEQ      A6DONTWORRY
000024C4                          2320  A6ACCOUNTFORZEROS:
000024C4  5082                    2321          ADDI.L  #8,D2
000024C6  93C2                    2322          SUB.L   D2,A1
000024C8                          2323  A6DONTWORRY:
000024C8  7000                    2324         MOVE.L   #0,D0
000024CA  7208                    2325         MOVE.L   #8,D1
000024CC  4E4F                    2326         TRAP     #15
000024CE                          2327       *-----HACK---*
000024CE  DFFC 0000003C           2328       ADD.L  #60,SP  ;should put stack in correct place
000024D4                          2329       
000024D4                          2330                *----------USP-----------*
000024D4  43F8 388A               2331         LEA      RUS,A1
000024D8  7204                    2332         MOVE.L   #4,D1
000024DA  7001                    2333         MOVE.L   #1,D0
000024DC  4E4F                    2334         TRAP     #15
000024DE  261F                    2335         MOVE.L   (SP)+,D3    
000024E0  4EB9 0000279A           2336         JSR      HEXTOASCII
000024E6  224A                    2337         MOVE.L   A2,A1
000024E8  95CB                    2338         SUB.L    A3,A2
000024EA  240A                    2339         MOVE.L   A2,D2
000024EC  B4BC FFFFFFF8           2340         CMP.L    #-8,D2
000024F2  6700 0006               2341         BEQ      USPDONTWORRY
000024F6                          2342  USPACCOUNTFORZEROS:
000024F6  5082                    2343          ADDI.L  #8,D2
000024F8  93C2                    2344          SUB.L   D2,A1
000024FA                          2345  USPDONTWORRY:
000024FA  7000                    2346         MOVE.L   #0,D0
000024FC  7208                    2347         MOVE.L   #8,D1
000024FE  4E4F                    2348         TRAP     #15
00002500                          2349  
00002500                          2350                *----------SR-----------*
00002500  43F8 3892               2351         LEA      RSR,A1
00002504  7204                    2352         MOVE.L   #4,D1
00002506  7001                    2353         MOVE.L   #1,D0
00002508  4E4F                    2354         TRAP     #15
0000250A  361F                    2355         MOVE.W   (SP)+,D3
0000250C  3E03                    2356         MOVE.W   D3,D7   ;temp storage to restore before return    
0000250E  4EB9 0000279A           2357         JSR      HEXTOASCII
00002514  224A                    2358         MOVE.L   A2,A1
00002516  95CB                    2359         SUB.L    A3,A2
00002518  240A                    2360         MOVE.L   A2,D2
0000251A  B4BC FFFFFFFC           2361         CMP.L    #-4,D2
00002520  6700 0006               2362         BEQ      SRDONTWORRY
00002524                          2363  SRACCOUNTFORZEROS:
00002524  5882                    2364          ADDI.L  #4,D2
00002526  93C2                    2365          SUB.L   D2,A1
00002528                          2366  SRDONTWORRY:
00002528  7000                    2367         MOVE.L   #0,D0
0000252A  7204                    2368         MOVE.L   #4,D1
0000252C  4E4F                    2369         TRAP     #15
0000252E                          2370         
0000252E                          2371      *----------SS/A7-----------*
0000252E  43F8 3883               2372         LEA      RSS,A1
00002532  7207                    2373         MOVE.L   #7,D1
00002534  7001                    2374         MOVE.L   #1,D0
00002536  4E4F                    2375         TRAP     #15
00002538  261F                    2376         MOVE.L   (SP)+,D3    
0000253A  4EB9 0000279A           2377         JSR      HEXTOASCII
00002540  224A                    2378         MOVE.L   A2,A1
00002542  95CB                    2379         SUB.L    A3,A2
00002544  240A                    2380         MOVE.L   A2,D2
00002546  B4BC FFFFFFF8           2381         CMP.L    #-8,D2
0000254C  6700 0006               2382         BEQ      SSDONTWORRY
00002550                          2383  SSACCOUNTFORZEROS:
00002550  5082                    2384          ADDI.L  #8,D2
00002552  93C2                    2385          SUB.L   D2,A1
00002554                          2386  SSDONTWORRY:
00002554  7000                    2387         MOVE.L   #0,D0
00002556  7208                    2388         MOVE.L   #8,D1
00002558  4E4F                    2389         TRAP     #15
0000255A                          2390         
0000255A                          2391      *----------PC-----------*
0000255A  43F8 388E               2392         LEA      RPC,A1
0000255E  7204                    2393         MOVE.L   #4,D1
00002560  7001                    2394         MOVE.L   #1,D0
00002562  4E4F                    2395         TRAP     #15
00002564  261F                    2396         MOVE.L   (SP)+,D3    
00002566  4EB9 0000279A           2397         JSR      HEXTOASCII
0000256C  224A                    2398         MOVE.L   A2,A1
0000256E  95CB                    2399         SUB.L    A3,A2
00002570  240A                    2400         MOVE.L   A2,D2
00002572  B4BC FFFFFFF8           2401         CMP.L    #-8,D2
00002578  6700 0006               2402         BEQ      PCDONTWORRY
0000257C                          2403  PCACCOUNTFORZEROS:
0000257C  5082                    2404          ADDI.L  #8,D2
0000257E  93C2                    2405          SUB.L   D2,A1
00002580                          2406  PCDONTWORRY:
00002580  7000                    2407         MOVE.L   #0,D0
00002582  7208                    2408         MOVE.L   #8,D1
00002584  4E4F                    2409         TRAP     #15       
00002586                          2410         
00002586                          2411     *---DF HACK RESTORE---*
00002586  3F07                    2412     MOVE.W   D7,-(SP)
00002588  DFFC FFFFFFB8           2413     ADD.L    #-72,SP
0000258E  4CDF 7FFF               2414     MOVEM.L  (SP)+,D0-D7/A0-A6
00002592  DFFC 0000000C           2415     ADD.L    #12,SP  ;go back to original value
00002598                          2416     ;MOVE.W   (SP)+,SR
00002598  007C 2000               2417     ORI.W   #$2000,SR    ;easy68k simulator is always in supervisor mode
0000259C  2E7C 01000000           2418     MOVE.L  #$01000000,SP   ;reset stack
000025A2  6000 EACC               2419         BRA SHELL
000025A6                          2420  
000025A6                          2421  *--------------------------------------------------------------------------------------*
000025A6                          2422  
000025A6                          2423  
000025A6                          2424  ************************************EXCEPTIONS!*****************************************
000025A6                          2425  *--------------------------------------------------------------------------------------*
000025A6                          2426  
000025A6                          2427  BERR:
000025A6  48E7 C070               2428          MOVEM.L A1-A3/D0-D1,-(SP)
000025AA  43F8 3896               2429          LEA     BERR_TEXT,A1
000025AE  700D                    2430          MOVE.L  #13,D0
000025B0  4E4F                    2431          TRAP    #15
000025B2  43F8 3987               2432          LEA     SSW,A1
000025B6  700E                    2433          MOVE.L  #14,D0
000025B8  4E4F                    2434          TRAP    #15
000025BA  362F 001C               2435          MOVE.W  (28,SP),D3
000025BE  4EB9 0000279A           2436          JSR     HEXTOASCII
000025C4  598B                    2437          SUB.L   #4,A3
000025C6  224B                    2438          MOVEA.L A3,A1
000025C8  7204                    2439          MOVE.L  #4,D1
000025CA  7000                    2440          MOVE.L  #0,D0
000025CC  4E4F                    2441          TRAP    #15
000025CE  43F8 398D               2442          LEA     BA,A1
000025D2  700E                    2443          MOVE.L  #14,D0
000025D4  4E4F                    2444          TRAP    #15
000025D6  262F 001E               2445          MOVE.L  (30,SP),D3
000025DA  4EB9 0000279A           2446          JSR     HEXTOASCII
000025E0  518B                    2447          SUB.L   #8,A3
000025E2  224B                    2448          MOVEA.L A3,A1
000025E4  7208                    2449          MOVE.L  #8,D1
000025E6  7000                    2450          MOVE.L  #0,D0
000025E8  4E4F                    2451          TRAP    #15
000025EA  43F8 3992               2452          LEA     IR,A1
000025EE  700E                    2453          MOVE.L  #14,D0
000025F0  4E4F                    2454          TRAP    #15
000025F2  362F 0022               2455          MOVE.W  (34,SP),D3
000025F6  4EB9 0000279A           2456          JSR     HEXTOASCII
000025FC  598B                    2457          SUB.L   #4,A3
000025FE  224B                    2458          MOVEA.L A3,A1
00002600  7204                    2459          MOVE.L  #4,D1
00002602  7000                    2460          MOVE.L  #0,D0
00002604  4E4F                    2461          TRAP    #15
00002606  4CDF 0E03               2462          MOVEM.L (SP)+,A1-A3/D0-D1
0000260A                          2463         ; MOVE.L  #$01000000,SP   ;reset stack
0000260A  4EB8 223A               2464          JSR     DF
0000260E  6000 EA60               2465          BRA     SHELL
00002612                          2466  
00002612                          2467  AERR:
00002612  48E7 CC70               2468          MOVEM.L A1-A3/D0-D1/D4-D5,-(SP)
00002616  43F8 38AE               2469          LEA     AERR_TEXT,A1
0000261A  700D                    2470          MOVE.L  #13,D0
0000261C  4E4F                    2471          TRAP    #15
0000261E  43F8 3987               2472          LEA     SSW,A1
00002622  700E                    2473          MOVE.L  #14,D0
00002624  4E4F                    2474          TRAP    #15
00002626  362F 001C               2475          MOVE.W  (28,SP),D3
0000262A  4EB9 0000279A           2476          JSR     HEXTOASCII
00002630  598B                    2477          SUB.L   #4,A3
00002632  224B                    2478          MOVEA.L A3,A1
00002634  7204                    2479          MOVE.L  #4,D1
00002636  7000                    2480          MOVE.L  #0,D0
00002638  4E4F                    2481          TRAP    #15
0000263A  43F8 398D               2482          LEA     BA,A1
0000263E  700E                    2483          MOVE.L  #14,D0
00002640  4E4F                    2484          TRAP    #15
00002642  262F 001E               2485          MOVE.L  (30,SP),D3
00002646  4EB9 0000279A           2486          JSR     HEXTOASCII
0000264C  518B                    2487          SUB.L   #8,A3
0000264E  224B                    2488          MOVEA.L A3,A1
00002650  7208                    2489          MOVE.L  #8,D1
00002652  7000                    2490          MOVE.L  #0,D0
00002654  4E4F                    2491          TRAP    #15
00002656  43F8 3992               2492          LEA     IR,A1
0000265A  700E                    2493          MOVE.L  #14,D0
0000265C  4E4F                    2494          TRAP    #15
0000265E  362F 0022               2495          MOVE.W  (34,SP),D3
00002662  4EB9 0000279A           2496          JSR     HEXTOASCII
00002668  598B                    2497          SUB.L   #4,A3
0000266A  224B                    2498          MOVEA.L A3,A1
0000266C  7204                    2499          MOVE.L  #4,D1
0000266E  7000                    2500          MOVE.L  #0,D0
00002670  4E4F                    2501          TRAP    #15
00002672  4CDF 0E33               2502          MOVEM.L (SP)+,A1-A3/D0-D1/D4-D5
00002676                          2503        ;  MOVE.L  #$01000000,SP   ;reset stack
00002676  4EB8 223A               2504          JSR     DF
0000267A  6000 E9F4               2505          BRA     SHELL
0000267E                          2506  
0000267E                          2507  IERR:
0000267E  48E7 8040               2508      MOVEM.L A1/D0,-(SP)
00002682  43F8 38CB               2509      LEA IERR_TEXT,A1
00002686  700D                    2510      MOVE.L #13,D0
00002688  4E4F                    2511      TRAP #15
0000268A  4CDF 0201               2512      MOVEM.L (SP)+,A1/D0
0000268E  4EB8 223A               2513      JSR DF
00002692  6000 E9DC               2514      BRA SHELL
00002696                          2515  
00002696                          2516  PERR:
00002696  48E7 8040               2517      MOVEM.L A1/D0,-(SP)
0000269A  43F8 38F4               2518      LEA PERR_TEXT,A1
0000269E  700D                    2519      MOVE.L #13,D0
000026A0  4E4F                    2520      TRAP #15
000026A2  4CDF 0201               2521      MOVEM.L (SP)+,A1/D0
000026A6  4EB8 223A               2522      JSR DF
000026AA  6000 E9C4               2523      BRA SHELL
000026AE                          2524      
000026AE                          2525  ZERR:
000026AE  48E7 8040               2526      MOVEM.L A1/D0,-(SP)
000026B2  43F8 3912               2527      LEA ZERR_TEXT,A1
000026B6  700D                    2528      MOVE.L #13,D0
000026B8  4E4F                    2529      TRAP #15
000026BA  4CDF 0201               2530      MOVEM.L (SP)+,A1/D0
000026BE  4EB8 223A               2531      JSR DF
000026C2  6000 E9AC               2532      BRA SHELL
000026C6                          2533  
000026C6                          2534  ALERR:
000026C6  48E7 8040               2535      MOVEM.L A1/D0,-(SP)
000026CA  43F8 3935               2536      LEA ALERR_TEXT,A1
000026CE  700D                    2537      MOVE.L #13,D0
000026D0  4E4F                    2538      TRAP #15
000026D2  4CDF 0201               2539      MOVEM.L (SP)+,A1/D0
000026D6  4EB8 223A               2540      JSR DF
000026DA  6000 E994               2541      BRA SHELL
000026DE                          2542      
000026DE                          2543  FLERR:
000026DE  48E7 8040               2544      MOVEM.L A1/D0,-(SP)
000026E2  43F8 3951               2545      LEA FLERR_TEXT,A1
000026E6  700D                    2546      MOVE.L #13,D0
000026E8  4E4F                    2547      TRAP #15
000026EA  4CDF 0201               2548      MOVEM.L (SP)+,A1/D0
000026EE                          2549    ;  MOVE.L #$01000000,SP
000026EE  4EB8 223A               2550      JSR DF
000026F2  6000 E97C               2551      BRA SHELL
000026F6                          2552      
000026F6                          2553  CHKERR:
000026F6  48E7 8040               2554      MOVEM.L A1/D0,-(SP)
000026FA  43F8 396D               2555      LEA CHKERR_TEXT,A1
000026FE  700D                    2556      MOVE.L #13,D0
00002700  4E4F                    2557      TRAP #15
00002702  4CDF 0201               2558      MOVEM.L (SP)+,A1/D0
00002706                          2559      ;MOVE.L #$01000000,SP
00002706  4EB8 223A               2560      JSR DF
0000270A  6000 E964               2561      BRA SHELL
0000270E                          2562  
0000270E                          2563  
0000270E                          2564  
0000270E                          2565  ****************************COMMON SUBROUTINES NEEDED**********************************
0000270E                          2566  
0000270E                          2567  
0000270E                          2568  *--------------------------------------------------------------------------------------*
0000270E  43F8 377B               2569  ERRORSR:        LEA   ERROR,A1    ;load message
00002712  323C 002C               2570                  MOVE.W  #44,D1
00002716  7000                    2571                  MOVE.L  #0,D0
00002718  4E4F                    2572                  TRAP    #15
0000271A  6000 E9DA               2573                  BRA     RESTORE
0000271E                          2574  *--------------------------------------------------------------------------------------*
0000271E                          2575  ASCII_TO_BCD:   *Number passed via D3 byte size only(to be expected)*
0000271E  B67C 0046               2576                  CMP #$46,D3
00002722  6EEA                    2577                  BGT ERRORSR
00002724  B67C 0040               2578                  CMP #$40,D3
00002728  6E00 000A               2579                  BGT UPPER
0000272C  0483 00000030           2580                  SUBI.L  #$30,D3
00002732  4E75                    2581                  RTS
00002734  0483 00000031           2582  UPPER:          SUBI.L  #$31,D3 ;If ASCII number is A-F
0000273A  4E75                    2583                  RTS
0000273C                          2584  *--------------------------------------------------------------------------------------*
0000273C                          2585  
0000273C                          2586  BCD_TO_HEX:     *Number passed via D3 accepts BYTE ONLY*
0000273C  2803                    2587                  MOVE.L  D3,D4   
0000273E  2A03                    2588                  MOVE.L  D3,D5
00002740  0284 000000F0           2589                  ANDI.L  #240,D4 ;upper byte
00002746  0285 0000000F           2590                  ANDI.L  #15,D5  ;lower byte
0000274C  E89C                    2591                  ROR.L   #4,D4   ;get bits into correct place
0000274E  C8FC 000A               2592                  MULU    #10,D4  ;multiply by its tens place
00002752  4283                    2593                  CLR.L   D3
00002754  D684                    2594                  ADD.L   D4,D3
00002756  D685                    2595                  ADD.L   D5,D3
00002758  4E75                    2596                  RTS
0000275A                          2597  *--------------------------------------------------------------------------------------*                
0000275A                          2598  ASCII_ADDRESS:   *Address to be converted from ascii to hex passed through A2 and A3*
0000275A                          2599                   *Returned in D5                                                    *
0000275A  4283                    2600                  CLR.L   D3
0000275C  4285                    2601                  CLR.L   D5
0000275E  220A                    2602                  MOVE.L   A2,D1
00002760  200B                    2603                  MOVE.L   A3,D0
00002762  9081                    2604                  SUB.L   D1,D0   ;store the difference in D0
00002764  7800                    2605                  MOVE.L  #0,D4   ;set up 10's place counter
00002766  5380                    2606                  SUBI.L  #1,D0
00002768  B07C 0000               2607  PLACECOUNTER:   CMP     #0,D0
0000276C  6700 0008               2608                  BEQ     CONVERTADDRESS
00002770  5884                    2609                  ADDI.L  #4,D4
00002772  5380                    2610                  SUBI.L  #1,D0
00002774  60F2                    2611                  BRA     PLACECOUNTER
00002776  B6CA                    2612  CONVERTADDRESS  CMP     A2,A3
00002778  6700 001E               2613                  BEQ     ADDRESSDONE
0000277C  4283                    2614                  CLR.L   D3
0000277E  161A                    2615                  MOVE.B  (A2)+,D3
00002780  48E7 EC30               2616                  MOVEM.L A2-A3/D0-D2/D4-D5,-(SP)   ;so regs dont get destroyed
00002784  4EB8 271E               2617                  JSR     ASCII_TO_BCD
00002788  4EB8 273C               2618                  JSR     BCD_TO_HEX
0000278C  4CDF 0C37               2619                  MOVEM.L (SP)+,A2-A3/D0-D2/D4-D5
00002790  E9BB                    2620                  ROL.L     D4,D3
00002792  5984                    2621                  SUBI.L  #4,D4
00002794  DA83                    2622                  ADD.L     D3,D5   ;get total
00002796  60DE                    2623                  BRA     CONVERTADDRESS
00002798  4E75                    2624  ADDRESSDONE     RTS
0000279A                          2625  
0000279A                          2626  *--------------------------------------------------------------------------------------*
0000279A                          2627  HEXTOASCII: *Result returned in address buffer from A2 to A3, HEX number passed*
0000279A                          2628              *through D3*
0000279A  4284                    2629              CLR.L   D4
0000279C  4285                    2630              CLR.L   D5
0000279E  247C 00003A00           2631              MOVE.L  #$3A00,A2
000027A4  267C 00003A32           2632              MOVE.L  #$3A32,A3
000027AA                          2633  KEEP_CONVERTING:
000027AA  1803                    2634              MOVE.B  D3,D4  
000027AC  1A03                    2635              MOVE.B  D3,D5 
000027AE  E08B                    2636              LSR.L   #8,D3   ;prepare for next byte
000027B0  0284 0000000F           2637              ANDI.L  #15,D4   ;get lower byte
000027B6  0285 000000F0           2638              ANDI.L  #240,D5 ;get upper byte'
000027BC  E85D                    2639              ROR     #4,D5   ;move D5 into position
000027BE  B83C 0009               2640              CMP.B     #$9,D4
000027C2  6E00 000C               2641              BGT     A_TO_F
000027C6  0684 00000030           2642              ADDI.L  #$30,D4
000027CC  6000 0008               2643              BRA     NEXTHEX
000027D0  0684 00000037           2644  A_TO_F:     ADDI.L  #$37,D4
000027D6  BA3C 0009               2645  NEXTHEX:    CMP.B     #$9,D5
000027DA  6E00 000C               2646              BGT     A_TO_F2
000027DE  0685 00000030           2647              ADDI.L  #$30,D5
000027E4  6000 0008               2648              BRA     PUTBUFFER
000027E8  0685 00000037           2649  A_TO_F2:    ADDI.L  #$37,D5
000027EE  1704                    2650  PUTBUFFER:  MOVE.B  D4,-(A3)
000027F0  1705                    2651              MOVE.B  D5,-(A3)
000027F2  B6CA                    2652              CMP      A2,A3
000027F4  66B4                    2653              BNE      KEEP_CONVERTING
000027F6  0C12 0030               2654  RID_ZEROS:  CMP.B   #$30,(A2)
000027FA  6700 0006               2655              BEQ     ADD
000027FE  6000 0006               2656              BRA     HEXASCIIDONE
00002802  528A                    2657  ADD:        ADD.L   #1,A2   ;increment to find start of string
00002804  60F0                    2658              BRA     RID_ZEROS
00002806                          2659  HEXASCIIDONE:   
00002806  267C 00003A32           2660              MOVE.L  #$3A32,A3    ;end of original number
0000280C  B7CA                    2661              CMP.L   A2,A3
0000280E  6700 0006               2662              BEQ     ZEROS
00002812  6000 0004               2663              BRA     NOTZEROS
00002816  518A                    2664  ZEROS       SUB.L   #8,A2               
00002818  4E75                    2665  NOTZEROS    RTS
0000281A                          2666  *--------------------------------------------------------------------------------------*
0000281A  43F8 37A7               2667  UNKNOWNCMD:     LEA   ERROR1,A1    ;load message
0000281E  323C 0016               2668                  MOVE.W  #22,D1
00002822  7000                    2669                  MOVE.L  #0,D0
00002824  4E4F                    2670                  TRAP    #15
00002826  6000 E8CE               2671                  BRA     RESTORE
0000282A                          2672  
0000282A                          2673  
0000282A                          2674  NEXT:   ;for debugging single commands
0000282A                          2675              
0000282A                          2676              
0000282A                          2677              
0000282A                          2678              
0000282A                          2679  
0000282A                          2680  
0000282A                          2681         END    START        

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
A0ACCOUNTFORZEROS   23BC
A0DONTWORRY         23C0
A1ACCOUNTFORZEROS   23E8
A1DONTWORRY         23EC
A2ACCOUNTFORZEROS   2414
A2DONTWORRY         2418
A3ACCOUNTFORZEROS   2440
A3DONTWORRY         2444
A4ACCOUNTFORZEROS   246C
A4DONTWORRY         2470
A5ACCOUNTFORZEROS   2498
A5DONTWORRY         249C
A6ACCOUNTFORZEROS   24C4
A6DONTWORRY         24C8
ACMP                1BE8
ADD                 2802
ADDRESSDONE         2798
AERR                2612
AERR_TEXT           38AE
AFADDCONV           1BC2
AGETFIRSTADDRESS    1BB0
AGETSECADDRESS      1BD0
ALERR               26C6
ALERR_TEXT          3935
ARESETLOOP          1BE6
ASADDCONV           1BDA
ASCEND              1BA0
ASCII_ADDRESS       275A
ASCII_TO_BCD        271E
ASWAP               1BF6
A_TO_F              27D0
A_TO_F2             27E8
BA                  398D
BCD_TO_HEX          273C
BERR                25A6
BERR_TEXT           3896
BF                  1F5A
BFGETENDADDRONE     1F78
BFGETENDDATA        1F5E
BFGETLASTEND        1F9E
BFNEXTADDR          1F68
BFNEXTADDRTWO       1F82
BFTEST              11C0
BLCKTEST            1134
BMOV                1FD0
BMOVDONE            205C
BMOVTEST            119E
BSCH                2136
BSCH1               381E
BSCH2               3824
BSCH3               3836
BSCHENDDATA         213A
BSCHFADDEND         215A
BSCHFIRSTADD        2144
BSCHSECONDADD       2164
BSCHSECONDFIND      2172
BSCHTEST            115A
BTST                2060
BTST1               37C1
BTST2               37D5
BTST3               37E6
BTST4               37F8
BTST5               3803
BTSTDATALOOP        20AE
BTSTGETENDADDRONE   207E
BTSTGETENDDATA      2064
BTSTGETLASTEND      2098
BTSTNEXTADDR        206E
BTSTNEXTADDRTWO     2088
BTSTTEST            117C
BUFFER              3000
BYTEBSCH            21A4
CHKERR              26F6
CHKERR_TEXT         396D
COMPLETE            2128
COMPUTATION         1AE6
COMPUTEFIRSTADD     1FE0
COMPUTEFOURTHADDRESS  2028
COMPUTESECONDADDRESS  1FF8
COMPUTETHIRDADDRESS  2010
CONVERT             1ACA
CONVERTADDRESS      2776
CONVERTMINUS1       1AC8
D0ACCOUNTFORZEROS   225C
D0DONTWORRY         2260
D1ACCOUNTFORZEROS   2288
D1DONTWORRY         228C
D2ACCOUNTFORZEROS   22B4
D2DONTWORRY         22B8
D3ACCOUNTFORZEROS   22E0
D3DONTWORRY         22E4
D4ACCOUNTFORZEROS   230C
D4DONTWORRY         2310
D5ACCOUNTFORZEROS   2338
D5DONTWORRY         233C
D6ACCOUNTFORZEROS   2364
D6DONTWORRY         2368
D7ACCOUNTFORZEROS   2390
D7DONTWORRY         2394
DATALOOP            1FC2
DATATRANSFER        2052
DCMP                1C46
DEBUG               37BE
DEFAULT             1C96
DEFAULTTEST         1B52
DESCEND             1BFE
DF                  223A
DFADDCONV           1C20
DFTST               11CE
DGETFIRSTADDRESS    1C0E
DGETSECADDRESS      1C2E
DISPLOOP            1A44
DONEASCEND          1C5C
DONEDESCEND         1C5C
DRESETLOOP          1C44
DSADDCONV           1C38
DSWAP               1C54
ECHO                130A
ECHOTEST            110E
EEND                130C
EFOUND              1316
ENDBF               1FCC
ENDBSCH             2218
ENDCONVERT          1AF8
ENDLP               1F56
ENDPARSE            1D7E
ENDPARSEL           1F4E
ENDPARSEW           1E48
ENDPTRMM            1C66
ENTER               1D80
ENTERL              1F50
ENTERW              1E4A
ERROR               377B
ERROR1              37A7
ERRORSR             270E
EXECUTE             222A
FAIL                20C6
FINDEND             19C8
FINDEND1            1A06
FINDEND2            1A16
FINDLASTNUM         1ABE
FINDNEXT            1A10
FIRSTADDRESS        1FD6
FLERR               26DE
FLERR_TEXT          3951
FONT                1090000
FORMATGOOD          1D26
FORMATGOOD1         1DD0
FORMATGOOD2         1DEE
FORMATGOOD3         1E9A
FORMATGOOD4         1EB8
FORMATGOOD5         1ED6
FORMATGOOD6         1EF4
FOUNDB              21CE
FOUNDL              21DE
FOUNDW              21D6
FOURTHADDRESS       201E
GGETEND             2220
GO                  221C
GOBACK              1772
GOTST               121C
GREEN               FF00
HELP                1778
HELPORHXDC          1234
HELPTST             124A
HEXASCIIDONE        2806
HEXTOASCII          279A
HIGHHEX             1AE2
HIGHHEXMM           1D6E
HIGHHEXMML          1F3C
HIGHHEXMMW          1E36
HTXT                3063
HTXT1               3074
HTXT10              360B
HTXT11              3648
HTXT12              3680
HTXT13              36C2
HTXT14              36F5
HTXT15              373C
HTXT1A              30BF
HTXT1B              30FC
HTXT2               3110
HTXT3               315B
HTXT3A              31A0
HTXT3B              31D9
HTXT3C              31ED
HTXT3D              3202
HTXT3E              321F
HTXT4               3252
HTXT4A              3299
HTXT4B              32DE
HTXT4C              32F9
HTXT4D              3317
HTXT4E              3336
HTXT5               335A
HTXT5A              33A0
HTXT6               33BC
HTXT6A              3402
HTXT6B              344A
HTXT7               3470
HTXT7A              34B4
HTXT7B              34FC
HTXT8               3514
HTXT8A              355B
HTXT9               3596
HTXT9A              35DE
HXDC                1A9E
HXDCTEST            12C8
IERR                267E
IERR_TEXT           38CB
IR                  3992
KEEP_CONVERTING     27AA
LONG                1E50
LONGBSCH            21C0
MDSPCTEST           1298
MEMCONT             19D2
MEMDISP             19FC
MEMNEXT             1A20
MEMSET              19C0
MEMTEST             126C
MM                  1C60
MMSPCTEST           12BA
MODIFYLOOP          1CF4
MODIFYLOOPL         1E64
MODIFYLOOPW         1D9A
MODIFYREGS          1324
MODIFYREGTEST       12F4
MOVEDATA            19EC
MRA                 136A
MRA0                15A8
MRA1                15E8
MRA2                1628
MRA3                1668
MRA4                16A8
MRA5                16E8
MRA6                1728
MRD                 1324
MRD0                13A8
MRD1                13E8
MRD2                1428
MRD3                1468
MRD4                14A8
MRD5                14E8
MRD6                1528
MRD7                1568
MRDFINDDATA         1768
MSFINDADDRESS       19E2
MSSPCTEST           128A
NEXT                282A
NEXTHEX             27D6
NEXTMMSTEP          1D72
NEXTMMSTEPL         1F40
NEXTMMSTEPW         1E3A
NOTZEROS            2818
OUTPUTBUFF          3050
OUTPUTNUM           1B16
PARSELOOP           1D56
PARSELOOPL          1F24
PARSELOOPW          1E1E
PCACCOUNTFORZEROS   257C
PCDONTWORRY         2580
PERR                2696
PERR_TEXT           38F4
PLACECOUNTER        2768
PROMPT              3058
PUTBUFFER           27EE
RA0                 3867
RA1                 386B
RA2                 386F
RA3                 3873
RA4                 3877
RA5                 387B
RA6                 387F
RD0                 3847
RD1                 384B
RD2                 384F
RD3                 3853
RD4                 3857
RD5                 385B
RD6                 385F
RD7                 3863
READ                20B8
RESTORE             10F6
RID_ZEROS           27F6
RPC                 388E
RSR                 3892
RSS                 3883
RUS                 388A
SECONDADDRESS       1FEE
SECONDLOOP          1A7C
SHELL               1070
SIZECHECK           1C64
SORTTEST            11E6
SORTW               1B2C
SPACE               37BD
SRACCOUNTFORZEROS   2524
SRDONTWORRY         2528
SSACCOUNTFORZEROS   2550
SSDONTWORRY         2554
SSW                 3987
START               1000
STOREDATA           1FA8
STOREDATABTST       20A2
SUCCESSTEXT         21E2
TESTOP              217C
THIRDADDRESS        2006
UNKNOWNCMD          281A
UPPER               2734
USPACCOUNTFORZEROS  24F6
USPDONTWORRY        24FA
WORD                1D86
WORDBSCH            21B2
ZEROS               2816
ZERR                26AE
ZERR_TEXT           3912

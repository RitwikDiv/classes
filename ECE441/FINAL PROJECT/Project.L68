00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.02
Created On: 4/28/2015 1:20:05 AM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :  Monitor Project
00000000                             3  * Written by :  Adam Sumner 
00000000                             4  * Date       :  4/28/2015
00000000                             5  * Description:  Monitor Final Project
00000000                             6  *-----------------------------------------------------------
00000000                             7  
00000000                             8  
00000000                             9  *---------------DISCLAIMER!-------------------------*
00000000                            10  *Subroutines are not as optimized as they should be!*
00000000                            11  *Things such as checking for spaces, getting addresses, etc. *
00000000                            12  *can easily be their own subroutines to save code space!*
00000000                            13  *Luckily code size is not a huge concern*
00000000                            14  *This is why there are no plans to optimize in the future*
00000000                            15  
00000000                            16  
00000000                            17  
00003000                            18      ORG    $3000
00003000                            19      
00003000                            20  BUFFER        DS.B      80              ;space for command storage 
00003050                            21  OUTPUTBUFF    DS.B      8               ;to output numbers easily
00003058= 4D 4F 4E 49 54 4F ...     22  PROMPT        DC.B      'MONITOR441>'   ;prompt definition
00003063                            23  
00003063                            24  *Help text*
00003063= 4C 69 73 74 20 6F ...     25  HTXT          DC.B      'List of Commands:'
00003074= 4D 44 53 50 20 3C ...     26  HTXT1         DC.B      'MDSP <address1> <address2> - Memory Display: Outputs the address and memory' 
000030BF= 63 6F 6E 74 65 6E ...     27  HTXT1A        DC.B      'contents from <address1> to <address2> amd from <address1> to' 
000030FC= 3C 61 64 64 72 65 ...     28  HTXT1B        DC.B      '<address2 + 16bytes>'
00003110= 48 58 44 45 43 20 ...     29  HTXT2         DC.B      'HXDEC <num> - Conversion: Converts a hexadecimal number to a decimal number'
0000315B= 53 4F 52 54 57 20 ...     30  HTXT3         DC.B      'SORTW <option> <address1> <address2> - Sort: Sorts a block of memory.'
000031A0= 3C 6F 70 74 69 6F ...     31  HTXT3A        DC.B      '<option> specifies the order in which the list is sorted:'
000031D9= 3B 41 20 2D 20 41 ...     32  HTXT3B        DC.B      ';A - Ascending Order'
000031ED= 3B 44 20 2D 20 44 ...     33  HTXT3C        DC.B      ';D - Descending Order'
00003202= 2D 28 64 65 66 61 ...     34  HTXT3D        DC.B      '-(default) - Descending Order'
0000321F= 53 6F 72 74 73 20 ...     35  HTXT3E        DC.B      'Sorts block of memory from <address1> to <address2>'
00003252= 4D 4D 20 3C 6F 70 ...     36  HTXT4         DC.B      'MM <option> <address> - Memory Modify: Display memory and, as required,'
00003299= 6D 6F 64 69 66 79 ...     37  HTXT4A        DC.B      'modify data or enter new data. <option> specifies the number of bytes'
000032DE= 64 69 73 70 6C 61 ...     38  HTXT4B        DC.B      'displayed for each address:'
000032F9= 2D 28 64 65 66 61 ...     39  HTXT4C        DC.B      '-(default) - Displays one byte'
00003317= 3B 57 20 2D 20 44 ...     40  HTXT4D        DC.B      ';W - Displays one word(2 bytes)'
00003336= 3B 4C 20 2D 20 44 ...     41  HTXT4E        DC.B      ';L - Displays one long word(4 bytes)'
0000335A= 4D 53 20 3C 64 61 ...     42  HTXT5         DC.B      'MS <data> <address> - Memory Set: Alters memory by setting <data> into' 
000033A0= 3C 61 64 64 72 65 ...     43  HTXT5A        DC.B      '<address>. Only accepts byte'
000033BC= 42 46 20 3C 64 61 ...     44  HTXT6         DC.B      'BF <data> <address1> <address2> - Block Fill: Fills memory starting at' 
00003402= 3C 61 64 64 72 65 ...     45  HTXT6A        DC.B      '<address1> to <address2>. Both must be even addresses. This command only'
0000344A= 77 6F 72 6B 73 20 ...     46  HTXT6B        DC.B      'works with a word-sized <data> pattern'
00003470= 42 4D 4F 56 20 3C ...     47  HTXT7         DC.B      'BMOV <address1> <address2> <address3> <address4> - Block Move: Moves' 
000034B4= 61 20 64 75 70 6C ...     48  HTXT7A        DC.B      'a duplicate block of memory from <address1> to <address2> into the block'
000034FC= 3C 61 64 64 72 65 ...     49  HTXT7B        DC.B      '<address3> to <address4>'
00003514= 42 54 53 54 20 3C ...     50  HTXT8         DC.B      'BTST <data> <address1> <address2> - Block Test: Tests a block of memory'
0000355B= 66 72 6F 6D 20 3C ...     51  HTXT8A        DC.B      'from <address1> to <address2> for <data>'
00003583= 42 53 43 48 20 3C ...     52  HTXT9         DC.B      'BSCH <data> <address1> <address2> - Block Search: Searches for <data> in'
000035CB= 69 6E 20 6D 65 6D ...     53  HTXT9A        DC.B      'in memory block from <address1> to <address2>'
000035F8= 47 4F 20 3C 61 64 ...     54  HTXT10        DC.B      'GO <address> - Execute Program: Executes program at <address>'
00003635= 44 46 20 2D 20 44 ...     55  HTXT11        DC.B      'DF - Display Formatted Registers: Displays all registers'
0000366D= 48 45 4C 50 20 2D ...     56  HTXT12        DC.B      'HELP - Help: Displays all available commands and their description'
000036AF= 45 43 48 4F 20 3C ...     57  HTXT13        DC.B      'ECHO <data> - Echo: Displays <data> to the terminal'
000036E2= 2E 3C 52 65 67 69 ...     58  HTXT14        DC.B      '.<Register Type><Register Number> <data>- Modify Register: Modifies the'
00003729= 63 6F 6E 74 65 6E ...     59  HTXT15        DC.B      'contents of register <Register Type><Register Number> to <data>'
00003768                            60  
00003768                            61  *Error Message*
00003768= 45 52 52 4F 52 3A ...     62  ERROR         DC.B      'ERROR: TRY COMMAND AGAIN WITH CORRECT SYNTAX'
00003794= 45 52 52 4F 52 3A ...     63  ERROR1        DC.B      'ERROR: UNKOWN COMMAND'
000037A9                            64  *Space*
000037A9= 20                        65  SPACE         DC.B      ' '
000037AA                            66  
000037AA                            67  *Debugger Print Statement*
000037AA= 57 49 4E                  68  DEBUG         DC.B      'WIN'      
000037AD                            69  
000037AD                            70  *BTST Text*
000037AD= 4E 75 6D 62 65 72 ...     71  BTST1         DC.B      'Number written was: '
000037C1= 4E 75 6D 62 65 72 ...     72  BTST2         DC.B      'Number read was: '
000037D2= 42 6C 6F 63 6B 20 ...     73  BTST3         DC.B      'Block Test PASSES!'
000037E4= 46 41 49 4C 55 52 ...     74  BTST4         DC.B      'FAILURE!!!!'  
000037EF= 45 72 72 6F 72 20 ...     75  BTST5         DC.B      'Error Occurred at address: '      
0000380A                            76  
0000380A                            77  *BSCH Text*
0000380A= 44 61 74 61 3A 20         78  BSCH1         DC.B      'Data: '
00003810= 46 6F 75 6E 64 20 ...     79  BSCH2         DC.B      'Found at address: '
00003822= 50 61 74 74 65 72 ...     80  BSCH3         DC.B      'Pattern not found'
00003833                            81  
00003833                            82  *DF Text*
00003833= 44 30 3A 20               83  RD0            DC.B      'D0: '
00003837= 44 31 3A 20               84  RD1            DC.B      'D1: '
0000383B= 44 32 3A 20               85  RD2            DC.B      'D2: '
0000383F= 44 33 3A 20               86  RD3            DC.B      'D3: '
00003843= 44 34 3A 20               87  RD4            DC.B      'D4: '
00003847= 44 35 3A 20               88  RD5            DC.B      'D5: '
0000384B= 44 36 3A 20               89  RD6            DC.B      'D6: '
0000384F= 44 37 3A 20               90  RD7            DC.B      'D7: '
00003853                            91  
00003853= 41 30 3A 20               92  RA0            DC.B      'A0: '
00003857= 41 31 3A 20               93  RA1            DC.B      'A1: '
0000385B= 41 32 3A 20               94  RA2            DC.B      'A2: '
0000385F= 41 33 3A 20               95  RA3            DC.B      'A3: '
00003863= 41 34 3A 20               96  RA4            DC.B      'A4: '
00003867= 41 35 3A 20               97  RA5            DC.B      'A5: '
0000386B= 41 36 3A 20               98  RA6            DC.B      'A6: '
0000386F                            99  
0000386F= 53 53 2F 41 37 3A 20     100  RSS            DC.B      'SS/A7: '
00003876= 55 53 3A 20              101  RUS            DC.B      'US: '
0000387A= 50 43 3A 20              102  RPC            DC.B      'PC: '
0000387E= 53 52 3A 20              103  RSR            DC.B      'SR: '
00003882                           104  
00003882                           105  *Exception Messages*
00003882= 41 20 42 75 73 20 ...    106  BERR_TEXT      DC.B 'A Bus Error Occured! :(',0
0000389A= 41 6E 20 41 64 64 ...    107  AERR_TEXT      DC.B 'An Address Error Occured! :(',0
000038B7= 41 6E 20 49 6C 6C ...    108  IERR_TEXT      DC.B 'An Illegal Instruction Error Occured! :(',0
000038E0= 41 20 50 72 69 76 ...    109  PERR_TEXT      DC.B 'A Privilege Error Occured! :(',0
000038FE= 41 20 44 69 76 69 ...    110  ZERR_TEXT      DC.B 'A Divide by Zero Error Occured! :(',0
00003921= 41 6E 20 41 20 4C ...    111  ALERR_TEXT      DC.B 'An A Line Error Occured! :(',0
0000393D= 41 6E 20 46 20 4C ...    112  FLERR_TEXT      DC.B 'An F Line Error Occured! :(',0
00003959= 41 20 43 68 65 63 ...    113  CHKERR_TEXT      DC.B 'A Check Error Occured! :(',0
00003973                           114  
00003973= 53 53 57 3A 20 00        115  SSW            DC.B 'SSW: ',0
00003979= 42 41 3A 20 00           116  BA             DC.B 'BA: ',0
0000397E= 49 52 3A 20 00           117  IR             DC.B 'IR: ',0
00003983                           118  
00003983                           119  *Color definition for Font*
00003983  =01090000                120  FONT        EQU     $01090000  
00003983  =0000FF00                121  GREEN       EQU     $0000FF00
00003983                           122  
00001000                           123      ORG     $1000
00001000                           124  START:  
00001000  48E7 E040                125          MOVEM.L D0-D2/A1,-(SP)
00001004                           126          *Makes it look like a REAL terminal*
00001004  223C 0000FF00            127          MOVE.L  #GREEN,D1
0000100A  243C 01090000            128          MOVE.L  #FONT,D2
00001010  103C 0015                129          MOVE.B  #21,D0
00001014  4E4F                     130          TRAP    #15
00001016  4281                     131          CLR.L   D1
00001018  4282                     132          CLR.L   D2
0000101A  4200                     133          CLR.B   D0
0000101C                           134          *Load custom exceptions*
0000101C  43F9 000025BC            135          LEA BERR,A1 ;init exception handlers
00001022  21C9 0008                136          MOVE.L A1,$8
00001026  43F9 0000262A            137          LEA AERR,A1
0000102C  21C9 000C                138          MOVE.L A1,$C
00001030  43F9 00002698            139          LEA IERR,A1
00001036  21C9 0010                140          MOVE.L A1,$10
0000103A  43F9 000026CC            141          LEA ZERR,A1
00001040  21C9 0014                142          MOVE.L A1,$14
00001044  43F9 0000271A            143          LEA CHKERR,A1
0000104A  21C9 0018                144          MOVE.L  A1,$18
0000104E  43F9 000026B2            145          LEA PERR,A1
00001054  21C9 0020                146          MOVE.L A1,$20
00001058  43F9 000026E6            147          LEA ALERR,A1
0000105E  21C9 0028                148          MOVE.L A1,$28
00001062  43F9 00002700            149          LEA FLERR,A1
00001068  21C9 002C                150          MOVE.L A1,$2C
0000106C  4CDF 0207                151          MOVEM.L (SP)+,D0-D2/A1  ;restore any preset values
00001070                           152  
00001070                           153  *--------------------------------------------------------------------------------------*
00001070                           154  SHELL:       
00001070  4878 1070                155              PEA     *           ;save PC on Stack for DF
00001074  588F                     156              ADD.L   #4,SP       ;get original value of stack pointer
00001076  2F4F FFF8                157              MOVE.L  SP,-8(SP)   ;save it
0000107A  DFFC FFFFFFF8            158              ADD.L   #-8,SP      ;update Stack position
00001080  40E7                     159              MOVE    SR,-(SP)    ;save Status register for use with DF
00001082  2F0E                     160              MOVE.L  A6,-(SP)    ;temp save
00001084  4E6E                     161              MOVE    USP,A6      ;for use with DF command
00001086  2F0E                     162              MOVE.L  A6,-(SP)    ;store USP to STACK
00001088  588F                     163              ADD.L   #4,SP       
0000108A  2C57                     164              MOVE.L  (SP),A6    ;restore original value
0000108C  2F67 0004                165              MOVE.L  -(SP),4(SP)  ;move correct value to correct stack position
00001090  588F                     166              ADD.L   #4,SP       ;point stack to CORRECT PLACE
00001092                           167              
00001092                           168  
00001092  48E7 FFFE                169              MOVEM.L D0-D7/A0-A6,-(SP)  ;save initial values of registers
00001096  48E7 FFFE                170              MOVEM.L D0-D7/A0-A6,-(SP)  ;unorthodox implementation to save registers when using DF command
0000109A                           171               
0000109A                           172                
0000109A  43F8 3058                173              LEA  PROMPT,A1      ;Load message            
0000109E  323C 000B                174              MOVE.W  #11,D1      ;load n bytes
000010A2  103C 0001                175              MOVE.B  #1,D0       ;set up trap call
000010A6  4E4F                     176              TRAP    #15
000010A8  43F8 3000                177              LEA     BUFFER,A1   ;set up storage for command
000010AC  103C 0002                178              MOVE.B  #2,D0       ;load input trap call
000010B0  4E4F                     179              TRAP    #15
000010B2  0C11 0048                180              CMP.B   #$48,(A1)   ;check for help/hxdc
000010B6  6700 017C                181              BEQ     HELPORHXDC
000010BA  0C11 004D                182              CMP.B   #$4D,(A1)   ;check for memory command
000010BE  6700 01AC                183              BEQ     MEMTEST
000010C2  0C11 0047                184              CMP.B   #$47,(A1)   ;check for go
000010C6  6700 0154                185              BEQ     GOTST
000010CA  0C11 0044                186              CMP.B   #$44,(A1)   ;check for df
000010CE  6700 00FE                187              BEQ     DFTST
000010D2  0C11 0042                188              CMP.B   #$42,(A1)   ;check for blck command
000010D6  6700 005C                189              BEQ     BLCKTEST
000010DA  0C11 0053                190              CMP.B   #$53,(A1)   ;check for sort command
000010DE  6700 0106                191              BEQ     SORTTEST
000010E2  0C11 0045                192              CMP.B   #$45,(A1)   ;check for echo command
000010E6  6700 0026                193              BEQ     ECHOTEST
000010EA  0C11 002E                194              CMP.B   #$2E,(A1)   ;check for modify register command
000010EE  6700 0204                195              BEQ     MODIFYREGTEST
000010F2  6000 174C                196              BRA     UNKNOWNCMD
000010F6  4CDF 7FFF                197  RESTORE:    MOVEM.L (SP)+,D0-D7/A0-A6
000010FA  4CDF 7FFF                198              MOVEM.L (SP)+,D0-D7/A0-A6 ;double restore because of DF hack workaround
000010FE  588F                     199              ADD.L   #4,SP       ;account for USP, it'll fix itself (it shouldn't be used)
00001100                           200                                  ;EASY68k simulator starts in supervisor mode
00001100  46DF                     201              MOVE    (SP)+,SR
00001102  201F                     202              MOVE.L  (SP)+,D0    ;save stack cuz it'll get destroyed
00001104  588F                     203              ADD.L   #4,SP       ;get rid of PC, itll fix itself
00001106  2E40                     204              MOVE.L  D0,SP
00001108  4280                     205              CLR.L   D0          ;no longer needed
0000110A                           206  
0000110A  6000 FF64                207              BRA     SHELL
0000110E                           208  *--------------------------------------------------------------------------------------*
0000110E                           209  
0000110E  5289                     210  ECHOTEST:   ADD.L   #1,A1
00001110  0C19 0043                211              CMP.B   #$43,(A1)+   ;C?
00001114  6600 172A                212              BNE     UNKNOWNCMD
00001118  0C19 0048                213              CMP.B   #$48,(A1)+   ;H?
0000111C  6600 1722                214              BNE     UNKNOWNCMD
00001120  0C19 004F                215              CMP.B   #$4F,(A1)+   ;O?
00001124  6600 171A                216              BNE     UNKNOWNCMD
00001128  0C19 0020                217              CMP.B   #$20,(A1)+   ;SPACE?
0000112C  6700 01DC                218              BEQ     ECHO
00001130  6000 1602                219              BRA     ERRORSR
00001134                           220  *--------------------------------------------------------------------------------------*
00001134                           221  
00001134                           222  
00001134                           223  *--------------------------------------------------------------------------------------*
00001134                           224  
00001134  5289                     225  BLCKTEST:   ADD.L   #1,A1
00001136  0C11 0046                226              CMP.B   #$46,(A1)   ;BF?
0000113A  6700 0084                227              BEQ     BFTEST
0000113E  0C11 004D                228              CMP.B   #$4D,(A1)   ;BMOV?
00001142  6700 005A                229              BEQ     BMOVTEST
00001146  0C11 0054                230              CMP.B   #$54,(A1)   ;BTST?
0000114A  6700 0030                231              BEQ     BTSTTEST
0000114E  0C11 0053                232              CMP.B   #$53,(A1)   ;BSCH?
00001152  6700 0006                233              BEQ     BSCHTEST
00001156  6000 16E8                234              BRA     UNKNOWNCMD
0000115A                           235  *--------------------------------------------------------------------------------------*
0000115A                           236  
0000115A  5289                     237  BSCHTEST:   ADD.L   #1,A1
0000115C  0C11 0043                238              CMP.B   #$43,(A1)
00001160  6600 16DE                239              BNE     UNKNOWNCMD
00001164  5289                     240              ADD.L   #1,A1
00001166  0C11 0048                241              CMP.B   #$48,(A1)
0000116A  6600 16D4                242              BNE     UNKNOWNCMD
0000116E  5289                     243              ADD.L   #1,A1
00001170  0C11 0020                244              CMP.B   #$20,(A1)
00001174  6600 15BE                245              BNE     ERRORSR
00001178  6000 0FDA                246              BRA     BSCH
0000117C                           247                        
0000117C                           248  *--------------------------------------------------------------------------------------*
0000117C                           249  
0000117C                           250  BTSTTEST:   
0000117C  5289                     251              ADD.L   #1,A1
0000117E  0C11 0053                252              CMP.B   #$53,(A1)
00001182  6600 16BC                253              BNE     UNKNOWNCMD
00001186  5289                     254              ADD.L   #1,A1
00001188  0C11 0054                255              CMP.B   #$54,(A1)
0000118C  6600 16B2                256              BNE     UNKNOWNCMD
00001190  5289                     257              ADD.L   #1,A1
00001192  0C11 0020                258              CMP.B   #$20,(A1)
00001196  6600 159C                259              BNE     ERRORSR
0000119A  6000 0EE2                260              BRA     BTST
0000119E                           261  
0000119E                           262  *--------------------------------------------------------------------------------------*
0000119E                           263  
0000119E  5289                     264  BMOVTEST:   ADD.L   #1,A1
000011A0  0C11 004F                265              CMP.B   #$4F,(A1)
000011A4  6600 169A                266              BNE     UNKNOWNCMD
000011A8  5289                     267              ADD.L   #1,A1
000011AA  0C11 0056                268              CMP.B   #$56,(A1)
000011AE  6600 1690                269              BNE     UNKNOWNCMD
000011B2  5289                     270              ADD.L   #1,A1
000011B4  0C11 0020                271              CMP.B   #$20,(A1)
000011B8  6600 157A                272              BNE     ERRORSR
000011BC  6000 0E32                273              BRA     BMOV
000011C0                           274  *--------------------------------------------------------------------------------------*
000011C0  5289                     275  BFTEST:     ADD.L   #1,A1
000011C2  0C11 0020                276              CMP.B   #$20,(A1)
000011C6  6600 156C                277              BNE     ERRORSR
000011CA  6000 0DAE                278              BRA     BF
000011CE                           279  *--------------------------------------------------------------------------------------*
000011CE                           280  
000011CE  5289                     281  DFTST:      ADD.L   #1,A1
000011D0  0C11 0046                282              CMP.B   #$46,(A1)
000011D4  6600 166A                283              BNE     UNKNOWNCMD
000011D8  5289                     284              ADD.L   #1,A1
000011DA  0C11 0000                285              CMP.B   #$00,(A1)
000011DE  6600 1554                286              BNE     ERRORSR
000011E2  6000 1074                287              BRA     DF
000011E6                           288  *--------------------------------------------------------------------------------------*
000011E6                           289  
000011E6  5289                     290  SORTTEST:    ADD.L   #1,A1
000011E8  0C11 004F                291              CMP.B   #$4F,(A1)   ;O?
000011EC  6600 1652                292              BNE     UNKNOWNCMD
000011F0  5289                     293               ADD.L   #1,A1
000011F2  0C11 0052                294              CMP.B   #$52,(A1)   ;R?
000011F6  6600 1648                295              BNE     UNKNOWNCMD
000011FA  5289                     296              ADD.L   #1,A1
000011FC  0C11 0054                297              CMP.B   #$54,(A1)   ;T?
00001200  6600 163E                298              BNE     UNKNOWNCMD
00001204  5289                     299              ADD.L   #1,A1
00001206  0C11 0057                300              CMP.B   #$57,(A1)   ;W?
0000120A  6600 1634                301              BNE     UNKNOWNCMD
0000120E  5289                     302              ADD.L   #1,A1
00001210  0C11 0020                303              CMP.B   #$20,(A1)
00001214  6600 151E                304              BNE     ERRORSR
00001218                           305  
00001218  6000 0912                306              BRA     SORTW
0000121C                           307  *--------------------------------------------------------------------------------------*
0000121C                           308  
0000121C  5289                     309  GOTST:      ADD.L   #1,A1
0000121E  0C11 004F                310              CMP.B   #$4F,(A1)
00001222  6600 161C                311              BNE     UNKNOWNCMD
00001226  5289                     312              ADD.L   #1,A1
00001228  0C19 0020                313              CMP.B   #$20,(A1)+
0000122C  6600 1506                314              BNE     ERRORSR
00001230  6000 1008                315              BRA     GO
00001234                           316  *--------------------------------------------------------------------------------------*
00001234                           317  
00001234  5289                     318  HELPORHXDC: ADD.L   #1,A1
00001236  0C11 0045                319              CMP.B   #$45,(A1)   ;is it help?
0000123A  6700 000E                320              BEQ     HELPTST
0000123E  0C11 0058                321              CMP.B   #$58,(A1)   ;or is it hxdc
00001242  6700 0084                322              BEQ     HXDCTEST
00001246  6000 15F8                323              BRA     UNKNOWNCMD     
0000124A                           324  *--------------------------------------------------------------------------------------*
0000124A                           325  
0000124A                           326  HELPTST:   
0000124A  5289                     327             ADD.L   #1,A1   ; check next char
0000124C  0C11 004C                328             CMP.B    #$4C,(A1) ;check for L
00001250  6600 15EE                329             BNE      UNKNOWNCMD
00001254  5289                     330             ADD.L   #1,A1
00001256  0C11 0050                331             CMP.B    #$50,(A1)   ;check for P
0000125A  6600 15E4                332             BNE      UNKNOWNCMD
0000125E  5289                     333             ADD.L   #1,A1   ;check for anything else
00001260  0C11 0000                334             CMP.B    #$00,(A1)
00001264  6600 14CE                335             BNE      ERRORSR
00001268  6000 050E                336             BRA      HELP
0000126C                           337              
0000126C                           338  
0000126C                           339   
0000126C                           340  *--------------------------------------------------------------------------------------*
0000126C                           341              
0000126C  5289                     342  MEMTEST:    ADD.L   #1,A1
0000126E  0C11 0053                343              CMP.B   #$53,(A1)
00001272  6700 0016                344              BEQ     MSSPCTEST
00001276  0C11 0044                345              CMP.B   #$44,(A1)
0000127A  6700 001C                346              BEQ     MDSPCTEST
0000127E  0C11 004D                347              CMP.B   #$4D,(A1)
00001282  6700 0036                348              BEQ     MMSPCTEST
00001286  6000 15B8                349              BRA     UNKNOWNCMD
0000128A                           350              
0000128A  5289                     351  MSSPCTEST   ADD.L   #1,A1
0000128C  0C11 0020                352              CMP.B   #$20,(A1)
00001290  6700 072E                353              BEQ     MEMSET
00001294  6000 149E                354              BRA     ERRORSR
00001298                           355              
00001298                           356  MDSPCTEST:  
00001298  5289                     357              ADD.L   #1,A1
0000129A  0C11 0053                358              CMP.B   #$53,(A1)
0000129E  6600 1494                359              BNE     ERRORSR
000012A2  5289                     360              ADD.L   #1,A1
000012A4  0C11 0050                361              CMP.B   #$50,(A1)
000012A8  6600 1596                362              BNE     UNKNOWNCMD
000012AC  5289                     363              ADD.L   #1,A1
000012AE  0C11 0020                364              CMP.B   #$20,(A1)
000012B2  6700 0748                365              BEQ     MEMDISP          
000012B6  6000 147C                366              BRA     ERRORSR
000012BA                           367             
000012BA  5289                     368  MMSPCTEST:  ADD.L   #1,A1
000012BC  0C11 0020                369              CMP.B   #$20,(A1)
000012C0  6700 099E                370              BEQ     MM          
000012C4  6000 146E                371              BRA     ERRORSR
000012C8                           372  *--------------------------------------------------------------------------------------*
000012C8                           373  HXDCTEST:   
000012C8  5289                     374              ADD.L   #1,A1
000012CA  0C11 0044                375              CMP.B   #$44,(A1)
000012CE  6600 1570                376              BNE    UNKNOWNCMD
000012D2  5289                     377              ADD.L   #1,A1
000012D4  0C11 0045                378              CMP.B   #$45,(A1)
000012D8  6600 1566                379              BNE     UNKNOWNCMD
000012DC  5289                     380              ADD.L   #1,A1
000012DE  0C11 0043                381              CMP.B   #$43,(A1)
000012E2  6600 155C                382              BNE     UNKNOWNCMD
000012E6  5289                     383              ADD.L   #1,A1
000012E8  0C11 0020                384              CMP.B   #$20,(A1)
000012EC  6600 1446                385              BNE     ERRORSR
000012F0  6000 07AC                386              BRA     HXDC
000012F4                           387  *--------------------------------------------------------------------------------------*
000012F4                           388  MODIFYREGTEST:
000012F4  5289                     389              ADD.L   #1,A1
000012F6  0C11 0044                390              CMP.B   #$44,(A1)
000012FA  6700 0028                391              BEQ     MRD
000012FE  0C11 0041                392              CMP.B   #$41,(A1)
00001302  6700 0066                393              BEQ     MRA
00001306  6000 1538                394              BRA     UNKNOWNCMD
0000130A                           395              
0000130A                           396  *----------------------------USER DEFINED COMMANDS---------------------------------*
0000130A                           397  *--------------------------------------------------------------------------------------*
0000130A                           398  ECHO: *What terminal DOESN'T have echo?*
0000130A                           399  
0000130A  2449                     400          MOVE.L  A1,A2   ;setup to find end of string
0000130C  0C1A 0000                401  EEND:   CMP.B   #$00,(A2)+
00001310  6700 0004                402          BEQ     EFOUND
00001314  60F6                     403          BRA     EEND
00001316                           404  EFOUND:
00001316  538A                     405          SUB.L   #1,A2   ;off by one
00001318  95C9                     406          SUB.L   A1,A2   ;find out how many bytes
0000131A  220A                     407          MOVE.L  A2,D1   ;place it for trap function
0000131C  7000                     408          MOVE.L  #0,D0
0000131E  4E4F                     409          TRAP    #15
00001320                           410          
00001320  6000 FDD4                411          BRA RESTORE
00001324                           412  *--------------------------------------------------------------------------------------*
00001324                           413  MODIFYREGS:
00001324                           414  
00001324                           415  MRD:
00001324  5289                     416          ADD.L   #1,A1   ;inc
00001326  0C11 0030                417          CMP.B   #$30,(A1)
0000132A  6700 007C                418          BEQ     MRD0
0000132E  0C11 0031                419          CMP.B   #$31,(A1)
00001332  6700 00B4                420          BEQ     MRD1
00001336  0C11 0032                421          CMP.B   #$32,(A1)
0000133A  6700 00EC                422          BEQ     MRD2
0000133E  0C11 0033                423          CMP.B   #$33,(A1)
00001342  6700 0124                424          BEQ     MRD3
00001346  0C11 0034                425          CMP.B   #$34,(A1)
0000134A  6700 015C                426          BEQ     MRD4
0000134E  0C11 0035                427          CMP.B   #$35,(A1)
00001352  6700 0194                428          BEQ     MRD5
00001356  0C11 0036                429          CMP.B   #$36,(A1)
0000135A  6700 01CC                430          BEQ     MRD6
0000135E  0C11 0037                431          CMP.B   #$37,(A1)
00001362  6700 0204                432          BEQ     MRD7
00001366  6000 13CC                433          BRA     ERRORSR
0000136A                           434  
0000136A                           435  MRA:
0000136A  5289                     436          ADD.L   #1,A1   ;inc
0000136C  0C11 0030                437          CMP.B   #$30,(A1)
00001370  6700 0236                438          BEQ     MRA0
00001374  0C11 0031                439          CMP.B   #$31,(A1)
00001378  6700 026E                440          BEQ     MRA1
0000137C  0C11 0032                441          CMP.B   #$32,(A1)
00001380  6700 02A6                442          BEQ     MRA2
00001384  0C11 0033                443          CMP.B   #$33,(A1)
00001388  6700 02DE                444          BEQ     MRA3
0000138C  0C11 0034                445          CMP.B   #$34,(A1)
00001390  6700 0316                446          BEQ     MRA4
00001394  0C11 0035                447          CMP.B   #$35,(A1)
00001398  6700 034E                448          BEQ     MRA5
0000139C  0C11 0036                449          CMP.B   #$36,(A1)
000013A0  6700 0386                450          BEQ     MRA6
000013A4  6000 138E                451          BRA     ERRORSR
000013A8                           452               
000013A8                           453  
000013A8                           454  
000013A8                           455          
000013A8                           456          
000013A8                           457  MRD0: 
000013A8  5289                     458          ADD.L   #1,A1
000013AA  0C19 0020                459          CMP.B   #$20,(A1)+
000013AE  6600 1384                460          BNE     ERRORSR
000013B2  2449                     461          MOVE.L  A1,A2
000013B4  264A                     462          MOVE.L  A2,A3
000013B6  4EB9 00001768            463          JSR     MRDFINDDATA
000013BC  538B                     464          SUB.L   #1,A3
000013BE  4EB9 00002780            465          JSR     ASCII_ADDRESS   ;convert data to hex
000013C4  2F05                     466          MOVE.L  D5,-(SP)        ;store it temporarily
000013C6  588F                     467          ADD.L   #4,SP       ;dont lose data
000013C8  4CDF 7FFF                468          MOVEM.L (SP)+,D0-D7/A0-A6
000013CC  4CDF 7FFF                469          MOVEM.L (SP)+,D0-D7/A0-A6 ;double restore because of DF hack workaround
000013D0  588F                     470          ADD.L   #4,SP       ;account for USP, it'll fix itself (it shouldn't be used)
000013D2                           471                                  ;EASY68k simulator starts in supervisor mode
000013D2  46DF                     472          MOVE    (SP)+,SR
000013D4  588F                     473          ADD.L   #4,SP       ;skip saved stack
000013D6  9FFC 00000086            474          SUB.L   #134,SP     ;find data again
000013DC  2017                     475          MOVE.L  (SP),D0
000013DE  DFFC 0000008A            476          ADD.L   #138,SP     ;go back to original spot
000013E4  6000 FC8A                477          BRA     SHELL
000013E8                           478               
000013E8                           479  MRD1:
000013E8  5289                     480          ADD.L   #1,A1
000013EA  0C19 0020                481          CMP.B   #$20,(A1)+
000013EE  6600 1344                482          BNE     ERRORSR
000013F2  2449                     483          MOVE.L  A1,A2
000013F4  264A                     484          MOVE.L  A2,A3
000013F6  4EB9 00001768            485          JSR     MRDFINDDATA
000013FC  538B                     486          SUB.L   #1,A3
000013FE  4EB9 00002780            487          JSR     ASCII_ADDRESS   ;convert data to hex
00001404  2F05                     488          MOVE.L  D5,-(SP)        ;store it temporarily
00001406  588F                     489          ADD.L   #4,SP       ;dont lose data
00001408  4CDF 7FFF                490          MOVEM.L (SP)+,D0-D7/A0-A6
0000140C  4CDF 7FFF                491          MOVEM.L (SP)+,D0-D7/A0-A6 ;double restore because of DF hack workaround
00001410  588F                     492          ADD.L   #4,SP       ;account for USP, it'll fix itself (it shouldn't be used)
00001412                           493                                  ;EASY68k simulator starts in supervisor mode
00001412  46DF                     494          MOVE    (SP)+,SR
00001414  588F                     495          ADD.L   #4,SP       ;skip saved stack
00001416  9FFC 00000086            496          SUB.L   #134,SP     ;find data again
0000141C  2217                     497          MOVE.L  (SP),D1
0000141E  DFFC 0000008A            498          ADD.L   #138,SP     ;go back to original spot
00001424  6000 FC4A                499          BRA     SHELL
00001428                           500  
00001428                           501  MRD2:
00001428  5289                     502          ADD.L   #1,A1
0000142A  0C19 0020                503          CMP.B   #$20,(A1)+
0000142E  6600 1304                504          BNE     ERRORSR
00001432  2449                     505          MOVE.L  A1,A2
00001434  264A                     506          MOVE.L  A2,A3
00001436  4EB9 00001768            507          JSR     MRDFINDDATA
0000143C  538B                     508          SUB.L   #1,A3
0000143E  4EB9 00002780            509          JSR     ASCII_ADDRESS   ;convert data to hex
00001444  2F05                     510          MOVE.L  D5,-(SP)        ;store it temporarily
00001446  588F                     511          ADD.L   #4,SP       ;dont lose data
00001448  4CDF 7FFF                512          MOVEM.L (SP)+,D0-D7/A0-A6
0000144C  4CDF 7FFF                513          MOVEM.L (SP)+,D0-D7/A0-A6 ;double restore because of DF hack workaround
00001450  588F                     514          ADD.L   #4,SP       ;account for USP, it'll fix itself (it shouldn't be used)
00001452                           515                                  ;EASY68k simulator starts in supervisor mode
00001452  46DF                     516          MOVE    (SP)+,SR
00001454  588F                     517          ADD.L   #4,SP       ;skip saved stack
00001456  9FFC 00000086            518          SUB.L   #134,SP     ;find data again
0000145C  2417                     519          MOVE.L  (SP),D2
0000145E  DFFC 0000008A            520          ADD.L   #138,SP     ;go back to original spot
00001464  6000 FC0A                521          BRA     SHELL
00001468                           522  
00001468                           523  MRD3:
00001468  5289                     524          ADD.L   #1,A1
0000146A  0C19 0020                525          CMP.B   #$20,(A1)+
0000146E  6600 12C4                526          BNE     ERRORSR
00001472  2449                     527          MOVE.L  A1,A2
00001474  264A                     528          MOVE.L  A2,A3
00001476  4EB9 00001768            529          JSR     MRDFINDDATA
0000147C  538B                     530          SUB.L   #1,A3
0000147E  4EB9 00002780            531          JSR     ASCII_ADDRESS   ;convert data to hex
00001484  2F05                     532          MOVE.L  D5,-(SP)        ;store it temporarily
00001486  588F                     533          ADD.L   #4,SP       ;dont lose data
00001488  4CDF 7FFF                534          MOVEM.L (SP)+,D0-D7/A0-A6
0000148C  4CDF 7FFF                535          MOVEM.L (SP)+,D0-D7/A0-A6 ;double restore because of DF hack workaround
00001490  588F                     536          ADD.L   #4,SP       ;account for USP, it'll fix itself (it shouldn't be used)
00001492                           537                                  ;EASY68k simulator starts in supervisor mode
00001492  46DF                     538          MOVE    (SP)+,SR
00001494  588F                     539          ADD.L   #4,SP       ;skip saved stack
00001496  9FFC 00000086            540          SUB.L   #134,SP     ;find data again
0000149C  2617                     541          MOVE.L  (SP),D3
0000149E  DFFC 0000008A            542          ADD.L   #138,SP     ;go back to original spot
000014A4  6000 FBCA                543          BRA     SHELL
000014A8                           544  
000014A8                           545  MRD4:
000014A8  5289                     546          ADD.L   #1,A1
000014AA  0C19 0020                547          CMP.B   #$20,(A1)+
000014AE  6600 1284                548          BNE     ERRORSR
000014B2  2449                     549          MOVE.L  A1,A2
000014B4  264A                     550          MOVE.L  A2,A3
000014B6  4EB9 00001768            551          JSR     MRDFINDDATA
000014BC  538B                     552          SUB.L   #1,A3
000014BE  4EB9 00002780            553          JSR     ASCII_ADDRESS   ;convert data to hex
000014C4  2F05                     554          MOVE.L  D5,-(SP)        ;store it temporarily
000014C6  588F                     555          ADD.L   #4,SP       ;dont lose data
000014C8  4CDF 7FFF                556          MOVEM.L (SP)+,D0-D7/A0-A6
000014CC  4CDF 7FFF                557          MOVEM.L (SP)+,D0-D7/A0-A6 ;double restore because of DF hack workaround
000014D0  588F                     558          ADD.L   #4,SP       ;account for USP, it'll fix itself (it shouldn't be used)
000014D2                           559                                  ;EASY68k simulator starts in supervisor mode
000014D2  46DF                     560          MOVE    (SP)+,SR
000014D4  588F                     561          ADD.L   #4,SP       ;skip saved stack
000014D6  9FFC 00000086            562          SUB.L   #134,SP     ;find data again
000014DC  2817                     563          MOVE.L  (SP),D4
000014DE  DFFC 0000008A            564          ADD.L   #138,SP     ;go back to original spot
000014E4  6000 FB8A                565          BRA     SHELL
000014E8                           566  
000014E8                           567  MRD5:
000014E8  5289                     568          ADD.L   #1,A1
000014EA  0C19 0020                569          CMP.B   #$20,(A1)+
000014EE  6600 1244                570          BNE     ERRORSR
000014F2  2449                     571          MOVE.L  A1,A2
000014F4  264A                     572          MOVE.L  A2,A3
000014F6  4EB9 00001768            573          JSR     MRDFINDDATA
000014FC  538B                     574          SUB.L   #1,A3
000014FE  4EB9 00002780            575          JSR     ASCII_ADDRESS   ;convert data to hex
00001504  2F05                     576          MOVE.L  D5,-(SP)        ;store it temporarily
00001506  588F                     577          ADD.L   #4,SP       ;dont lose data
00001508  4CDF 7FFF                578          MOVEM.L (SP)+,D0-D7/A0-A6
0000150C  4CDF 7FFF                579          MOVEM.L (SP)+,D0-D7/A0-A6 ;double restore because of DF hack workaround
00001510  588F                     580          ADD.L   #4,SP       ;account for USP, it'll fix itself (it shouldn't be used)
00001512                           581                                  ;EASY68k simulator starts in supervisor mode
00001512  46DF                     582          MOVE    (SP)+,SR
00001514  588F                     583          ADD.L   #4,SP       ;skip saved stack
00001516  9FFC 00000086            584          SUB.L   #134,SP     ;find data again
0000151C  2A17                     585          MOVE.L  (SP),D5
0000151E  DFFC 0000008A            586          ADD.L   #138,SP     ;go back to original spot
00001524  6000 FB4A                587          BRA     SHELL
00001528                           588  
00001528                           589  MRD6:
00001528  5289                     590          ADD.L   #1,A1
0000152A  0C19 0020                591          CMP.B   #$20,(A1)+
0000152E  6600 1204                592          BNE     ERRORSR
00001532  2449                     593          MOVE.L  A1,A2
00001534  264A                     594          MOVE.L  A2,A3
00001536  4EB9 00001768            595          JSR     MRDFINDDATA
0000153C  538B                     596          SUB.L   #1,A3
0000153E  4EB9 00002780            597          JSR     ASCII_ADDRESS   ;convert data to hex
00001544  2F05                     598          MOVE.L  D5,-(SP)        ;store it temporarily
00001546  588F                     599          ADD.L   #4,SP       ;dont lose data
00001548  4CDF 7FFF                600          MOVEM.L (SP)+,D0-D7/A0-A6
0000154C  4CDF 7FFF                601          MOVEM.L (SP)+,D0-D7/A0-A6 ;double restore because of DF hack workaround
00001550  588F                     602          ADD.L   #4,SP       ;account for USP, it'll fix itself (it shouldn't be used)
00001552                           603                                  ;EASY68k simulator starts in supervisor mode
00001552  46DF                     604          MOVE    (SP)+,SR
00001554  588F                     605          ADD.L   #4,SP       ;skip saved stack
00001556  9FFC 00000086            606          SUB.L   #134,SP     ;find data again
0000155C  2C17                     607          MOVE.L  (SP),D6
0000155E  DFFC 0000008A            608          ADD.L   #138,SP     ;go back to original spot
00001564  6000 FB0A                609          BRA     SHELL
00001568                           610  
00001568                           611  MRD7:
00001568  5289                     612          ADD.L   #1,A1
0000156A  0C19 0020                613          CMP.B   #$20,(A1)+
0000156E  6600 11C4                614          BNE     ERRORSR
00001572  2449                     615          MOVE.L  A1,A2
00001574  264A                     616          MOVE.L  A2,A3
00001576  4EB9 00001768            617          JSR     MRDFINDDATA
0000157C  538B                     618          SUB.L   #1,A3
0000157E  4EB9 00002780            619          JSR     ASCII_ADDRESS   ;convert data to hex
00001584  2F05                     620          MOVE.L  D5,-(SP)        ;store it temporarily
00001586  588F                     621          ADD.L   #4,SP       ;dont lose data
00001588  4CDF 7FFF                622          MOVEM.L (SP)+,D0-D7/A0-A6
0000158C  4CDF 7FFF                623          MOVEM.L (SP)+,D0-D7/A0-A6 ;double restore because of DF hack workaround
00001590  588F                     624          ADD.L   #4,SP       ;account for USP, it'll fix itself (it shouldn't be used)
00001592                           625                                  ;EASY68k simulator starts in supervisor mode
00001592  46DF                     626          MOVE    (SP)+,SR
00001594  588F                     627         ADD.L   #4,SP       ;skip saved stack
00001596  9FFC 00000086            628          SUB.L   #134,SP     ;find data again
0000159C  2E17                     629          MOVE.L  (SP),D7
0000159E  DFFC 0000008A            630          ADD.L   #138,SP     ;go back to original spot
000015A4  6000 FACA                631          BRA     SHELL
000015A8                           632  
000015A8                           633  MRA0:
000015A8  5289                     634          ADD.L   #1,A1
000015AA  0C19 0020                635          CMP.B   #$20,(A1)+
000015AE  6600 1184                636          BNE     ERRORSR
000015B2  2449                     637          MOVE.L  A1,A2
000015B4  264A                     638          MOVE.L  A2,A3
000015B6  4EB9 00001768            639          JSR     MRDFINDDATA
000015BC  538B                     640          SUB.L   #1,A3
000015BE  4EB9 00002780            641          JSR     ASCII_ADDRESS   ;convert data to hex
000015C4  2F05                     642          MOVE.L  D5,-(SP)        ;store it temporarily
000015C6  588F                     643          ADD.L   #4,SP       ;dont lose data
000015C8  4CDF 7FFF                644          MOVEM.L (SP)+,D0-D7/A0-A6
000015CC  4CDF 7FFF                645          MOVEM.L (SP)+,D0-D7/A0-A6 ;double restore because of DF hack workaround
000015D0  588F                     646          ADD.L   #4,SP       ;account for USP, it'll fix itself (it shouldn't be used)
000015D2                           647                                  ;EASY68k simulator starts in supervisor mode
000015D2  46DF                     648          MOVE    (SP)+,SR
000015D4  588F                     649          ADD.L   #4,SP       ;skip saved stack
000015D6  9FFC 00000086            650          SUB.L   #134,SP     ;find data again
000015DC  2057                     651          MOVE.L  (SP),A0
000015DE  DFFC 0000008A            652          ADD.L   #138,SP     ;go back to original spot
000015E4  6000 FA8A                653          BRA     SHELL
000015E8                           654  MRA1:
000015E8  5289                     655          ADD.L   #1,A1
000015EA  0C19 0020                656          CMP.B   #$20,(A1)+
000015EE  6600 1144                657          BNE     ERRORSR
000015F2  2449                     658          MOVE.L  A1,A2
000015F4  264A                     659          MOVE.L  A2,A3
000015F6  4EB9 00001768            660          JSR     MRDFINDDATA
000015FC  538B                     661          SUB.L   #1,A3
000015FE  4EB9 00002780            662          JSR     ASCII_ADDRESS   ;convert data to hex
00001604  2F05                     663          MOVE.L  D5,-(SP)        ;store it temporarily
00001606  588F                     664          ADD.L   #4,SP       ;dont lose data
00001608  4CDF 7FFF                665          MOVEM.L (SP)+,D0-D7/A0-A6
0000160C  4CDF 7FFF                666          MOVEM.L (SP)+,D0-D7/A0-A6 ;double restore because of DF hack workaround
00001610  588F                     667          ADD.L   #4,SP       ;account for USP, it'll fix itself (it shouldn't be used)
00001612                           668                                  ;EASY68k simulator starts in supervisor mode
00001612  46DF                     669          MOVE    (SP)+,SR
00001614  588F                     670         ADD.L   #4,SP       ;skip saved stack
00001616  9FFC 00000086            671          SUB.L   #134,SP     ;find data again
0000161C  2257                     672          MOVE.L  (SP),A1
0000161E  DFFC 0000008A            673          ADD.L   #138,SP     ;go back to original spot
00001624  6000 FA4A                674          BRA     SHELL
00001628                           675  
00001628                           676  MRA2:
00001628  5289                     677          ADD.L   #1,A1
0000162A  0C19 0020                678          CMP.B   #$20,(A1)+
0000162E  6600 1104                679          BNE     ERRORSR
00001632  2449                     680          MOVE.L  A1,A2
00001634  264A                     681          MOVE.L  A2,A3
00001636  4EB9 00001768            682          JSR     MRDFINDDATA
0000163C  538B                     683          SUB.L   #1,A3
0000163E  4EB9 00002780            684          JSR     ASCII_ADDRESS   ;convert data to hex
00001644  2F05                     685          MOVE.L  D5,-(SP)        ;store it temporarily
00001646  588F                     686          ADD.L   #4,SP       ;dont lose data
00001648  4CDF 7FFF                687          MOVEM.L (SP)+,D0-D7/A0-A6
0000164C  4CDF 7FFF                688          MOVEM.L (SP)+,D0-D7/A0-A6 ;double restore because of DF hack workaround
00001650  588F                     689          ADD.L   #4,SP       ;account for USP, it'll fix itself (it shouldn't be used)
00001652                           690                                  ;EASY68k simulator starts in supervisor mode
00001652  46DF                     691          MOVE    (SP)+,SR
00001654  588F                     692          ADD.L   #4,SP       ;skip saved stack
00001656  9FFC 00000086            693          SUB.L   #134,SP     ;find data again
0000165C  2457                     694          MOVE.L  (SP),A2
0000165E  DFFC 0000008A            695          ADD.L   #138,SP     ;go back to original spot
00001664  6000 FA0A                696          BRA     SHELL
00001668                           697          
00001668                           698  MRA3:
00001668  5289                     699          ADD.L   #1,A1
0000166A  0C19 0020                700          CMP.B   #$20,(A1)+
0000166E  6600 10C4                701          BNE     ERRORSR
00001672  2449                     702          MOVE.L  A1,A2
00001674  264A                     703          MOVE.L  A2,A3
00001676  4EB9 00001768            704          JSR     MRDFINDDATA
0000167C  538B                     705          SUB.L   #1,A3
0000167E  4EB9 00002780            706          JSR     ASCII_ADDRESS   ;convert data to hex
00001684  2F05                     707          MOVE.L  D5,-(SP)        ;store it temporarily
00001686  588F                     708          ADD.L   #4,SP       ;dont lose data
00001688  4CDF 7FFF                709          MOVEM.L (SP)+,D0-D7/A0-A6
0000168C  4CDF 7FFF                710          MOVEM.L (SP)+,D0-D7/A0-A6 ;double restore because of DF hack workaround
00001690  588F                     711          ADD.L   #4,SP       ;account for USP, it'll fix itself (it shouldn't be used)
00001692                           712                                  ;EASY68k simulator starts in supervisor mode
00001692  46DF                     713          MOVE    (SP)+,SR
00001694  588F                     714          ADD.L   #4,SP       ;skip saved stack
00001696  9FFC 00000086            715          SUB.L   #134,SP     ;find data again
0000169C  2657                     716          MOVE.L  (SP),A3
0000169E  DFFC 0000008A            717          ADD.L   #138,SP     ;go back to original spot
000016A4  6000 F9CA                718          BRA     SHELL
000016A8                           719  
000016A8                           720  MRA4:
000016A8  5289                     721          ADD.L   #1,A1
000016AA  0C19 0020                722          CMP.B   #$20,(A1)+
000016AE  6600 1084                723          BNE     ERRORSR
000016B2  2449                     724          MOVE.L  A1,A2
000016B4  264A                     725          MOVE.L  A2,A3
000016B6  4EB9 00001768            726          JSR     MRDFINDDATA
000016BC  538B                     727          SUB.L   #1,A3
000016BE  4EB9 00002780            728          JSR     ASCII_ADDRESS   ;convert data to hex
000016C4  2F05                     729          MOVE.L  D5,-(SP)        ;store it temporarily
000016C6  588F                     730          ADD.L   #4,SP       ;dont lose data
000016C8  4CDF 7FFF                731          MOVEM.L (SP)+,D0-D7/A0-A6
000016CC  4CDF 7FFF                732          MOVEM.L (SP)+,D0-D7/A0-A6 ;double restore because of DF hack workaround
000016D0  588F                     733          ADD.L   #4,SP       ;account for USP, it'll fix itself (it shouldn't be used)
000016D2                           734                                  ;EASY68k simulator starts in supervisor mode
000016D2  46DF                     735          MOVE    (SP)+,SR
000016D4  588F                     736          ADD.L   #4,SP       ;skip saved stack
000016D6  9FFC 00000086            737          SUB.L   #134,SP     ;find data again
000016DC  2857                     738          MOVE.L  (SP),A4
000016DE  DFFC 0000008A            739          ADD.L   #138,SP     ;go back to original spot
000016E4  6000 F98A                740          BRA     SHELL
000016E8                           741  
000016E8                           742  MRA5:
000016E8  5289                     743          ADD.L   #1,A1
000016EA  0C19 0020                744          CMP.B   #$20,(A1)+
000016EE  6600 1044                745          BNE     ERRORSR
000016F2  2449                     746          MOVE.L  A1,A2
000016F4  264A                     747          MOVE.L  A2,A3
000016F6  4EB9 00001768            748          JSR     MRDFINDDATA
000016FC  538B                     749          SUB.L   #1,A3
000016FE  4EB9 00002780            750          JSR     ASCII_ADDRESS   ;convert data to hex
00001704  2F05                     751          MOVE.L  D5,-(SP)        ;store it temporarily
00001706  588F                     752          ADD.L   #4,SP       ;dont lose data
00001708  4CDF 7FFF                753          MOVEM.L (SP)+,D0-D7/A0-A6
0000170C  4CDF 7FFF                754          MOVEM.L (SP)+,D0-D7/A0-A6 ;double restore because of DF hack workaround
00001710  588F                     755          ADD.L   #4,SP       ;account for USP, it'll fix itself (it shouldn't be used)
00001712                           756                                  ;EASY68k simulator starts in supervisor mode
00001712  46DF                     757          MOVE    (SP)+,SR
00001714  588F                     758         ADD.L   #4,SP       ;skip saved stack
00001716  9FFC 00000086            759          SUB.L   #134,SP     ;find data again
0000171C  2A57                     760          MOVE.L  (SP),A5
0000171E  DFFC 0000008A            761          ADD.L   #138,SP     ;go back to original spot
00001724  6000 F94A                762          BRA     SHELL
00001728                           763  
00001728                           764  MRA6:
00001728  5289                     765          ADD.L   #1,A1
0000172A  0C19 0020                766          CMP.B   #$20,(A1)+
0000172E  6600 1004                767          BNE     ERRORSR
00001732  2449                     768          MOVE.L  A1,A2
00001734  264A                     769          MOVE.L  A2,A3
00001736  4EB9 00001768            770          JSR     MRDFINDDATA
0000173C  538B                     771          SUB.L   #1,A3
0000173E  4EB9 00002780            772          JSR     ASCII_ADDRESS   ;convert data to hex
00001744  2F05                     773          MOVE.L  D5,-(SP)        ;store it temporarily
00001746  588F                     774          ADD.L   #4,SP       ;dont lose data
00001748  4CDF 7FFF                775          MOVEM.L (SP)+,D0-D7/A0-A6
0000174C  4CDF 7FFF                776          MOVEM.L (SP)+,D0-D7/A0-A6 ;double restore because of DF hack workaround
00001750  588F                     777          ADD.L   #4,SP       ;account for USP, it'll fix itself (it shouldn't be used)
00001752                           778                                  ;EASY68k simulator starts in supervisor mode
00001752  46DF                     779          MOVE    (SP)+,SR
00001754  588F                     780          ADD.L   #4,SP       ;skip saved stack
00001756  9FFC 00000086            781          SUB.L   #134,SP     ;find data again
0000175C  2C57                     782          MOVE.L  (SP),A6
0000175E  DFFC 0000008A            783          ADD.L   #138,SP     ;go back to original spot
00001764  6000 F90A                784          BRA     SHELL
00001768                           785  
00001768                           786  MRDFINDDATA:
00001768  0C1B 0000                787          CMP.B   #$00,(A3)+
0000176C  6700 0004                788          BEQ     GOBACK
00001770  60F6                     789          BRA     MRDFINDDATA
00001772  4E75                     790  GOBACK: RTS
00001774                           791          
00001774                           792  
00001774  6000 F980                793          BRA RESTORE
00001778                           794  *--------------------REQUIRED COMMAND DEFINITION START---------------------------------*
00001778                           795  *--------------------------------------------------------------------------------------*
00001778  43F8 3063                796  HELP:       LEA     HTXT,A1     ;list of commands test
0000177C  323C 0011                797              MOVE.W  #17,D1
00001780  103C 0000                798              MOVE.B  #0,D0
00001784  4E4F                     799              TRAP    #15
00001786  323C 0000                800              MOVE.W  #0,D1       ;newline
0000178A  4E4F                     801              TRAP    #15
0000178C                           802              
0000178C  43F8 3074                803              LEA     HTXT1,A1    ;mem display command
00001790  323C 004B                804              MOVE.W  #75,D1
00001794  103C 0000                805              MOVE.B  #0,D0
00001798  4E4F                     806              TRAP    #15
0000179A  43F8 30BF                807              LEA     HTXT1A,A1   ;mem display
0000179E  323C 003D                808              MOVE.W  #61,D1
000017A2  103C 0000                809              MOVE.B  #0,D0
000017A6  4E4F                     810              TRAP    #15
000017A8  43F8 30FC                811              LEA     HTXT1B,A1   ;mem display
000017AC  323C 0014                812              MOVE.W  #20,D1
000017B0  103C 0000                813              MOVE.B  #0,D0
000017B4  4E4F                     814              TRAP    #15
000017B6  323C 0000                815              MOVE.W  #0,D1       ;newline
000017BA  4E4F                     816              TRAP    #15
000017BC                           817              
000017BC  43F8 3110                818              LEA     HTXT2,A1    ;hxdec command text
000017C0  323C 004B                819              MOVE.W  #75,D1
000017C4  103C 0000                820              MOVE.B  #0,D0
000017C8  4E4F                     821              TRAP    #15
000017CA  123C 0000                822              MOVE.B  #0,D1       ;newline
000017CE  4E4F                     823              TRAP    #15
000017D0                           824              
000017D0  43F8 315B                825              LEA     HTXT3,A1    ;sort command text
000017D4  323C 0045                826              MOVE.W  #69,D1
000017D8  103C 0000                827              MOVE.B  #0,D0
000017DC  4E4F                     828              TRAP    #15
000017DE  43F8 31A0                829              LEA     HTXT3A,A1    ;sort command text continued
000017E2  323C 0039                830              MOVE.W  #57,D1
000017E6  103C 0000                831              MOVE.B  #0,D0
000017EA  4E4F                     832              TRAP    #15
000017EC  43F8 31D9                833              LEA     HTXT3B,A1    ;sort command text continued
000017F0  323C 0014                834              MOVE.W  #20,D1
000017F4  103C 0000                835              MOVE.B  #0,D0
000017F8  4E4F                     836              TRAP    #15
000017FA  43F8 31ED                837              LEA     HTXT3C,A1    ;sort command text continued
000017FE  323C 0015                838              MOVE.W  #21,D1
00001802  103C 0000                839              MOVE.B  #0,D0
00001806  4E4F                     840              TRAP    #15
00001808  43F8 3202                841              LEA     HTXT3D,A1    ;sort command text continued
0000180C  323C 001D                842              MOVE.W  #29,D1
00001810  103C 0000                843              MOVE.B  #0,D0
00001814  4E4F                     844              TRAP    #15
00001816  43F8 321F                845              LEA     HTXT3E,A1    ;sort command text continued
0000181A  323C 0033                846              MOVE.W  #51,D1
0000181E  103C 0000                847              MOVE.B  #0,D0
00001822  4E4F                     848              TRAP    #15
00001824  123C 0000                849              MOVE.B  #0,D1       ;newline
00001828  4E4F                     850              TRAP    #15
0000182A                           851              
0000182A  43F8 3252                852              LEA     HTXT4,A1    ;memory modify command text 
0000182E  323C 0047                853              MOVE.W  #71,D1
00001832  103C 0000                854              MOVE.B  #0,D0
00001836  4E4F                     855              TRAP    #15
00001838  43F8 3299                856              LEA     HTXT4A,A1    ;mem modify command text continued
0000183C  323C 0045                857              MOVE.W  #69,D1
00001840  103C 0000                858              MOVE.B  #0,D0
00001844  4E4F                     859              TRAP    #15
00001846  43F8 32DE                860              LEA     HTXT4B,A1    ;mem modify command text continued
0000184A  323C 001B                861              MOVE.W  #27,D1
0000184E  103C 0000                862              MOVE.B  #0,D0
00001852  4E4F                     863              TRAP    #15
00001854  43F8 32F9                864              LEA     HTXT4C,A1    ;mem modify command text continued
00001858  323C 001E                865              MOVE.W  #30,D1
0000185C  103C 0000                866              MOVE.B  #0,D0
00001860  4E4F                     867              TRAP    #15
00001862  43F8 3317                868              LEA     HTXT4D,A1    ;mem modify command text continued
00001866  323C 001F                869              MOVE.W  #31,D1
0000186A  103C 0000                870              MOVE.B  #0,D0
0000186E  4E4F                     871              TRAP    #15
00001870  43F8 3336                872              LEA     HTXT4E,A1    ;mem modify command text continued
00001874  323C 0024                873              MOVE.W  #36,D1
00001878  103C 0000                874              MOVE.B  #0,D0
0000187C  4E4F                     875              TRAP    #15
0000187E  123C 0000                876              MOVE.B  #0,D1
00001882  4E4F                     877              TRAP    #15         ;newline
00001884                           878              
00001884  43F8 335A                879              LEA     HTXT5,A1    ;memory set command text 
00001888  323C 0046                880              MOVE.W  #70,D1
0000188C  103C 0000                881              MOVE.B  #0,D0
00001890  4E4F                     882              TRAP    #15
00001892  43F8 33A0                883              LEA     HTXT5A,A1    ;memory set command text continued
00001896  323C 001C                884              MOVE.W  #28,D1
0000189A  103C 0000                885              MOVE.B  #0,D0
0000189E  4E4F                     886              TRAP    #15
000018A0  123C 0000                887              MOVE.B  #0,D1       ;newline
000018A4  4E4F                     888              TRAP    #15
000018A6                           889              
000018A6  43F8 33BC                890              LEA     HTXT6,A1    ;block fill command text
000018AA  323C 0045                891              MOVE.W  #69,D1
000018AE  103C 0000                892              MOVE.B  #0,D0
000018B2  4E4F                     893              TRAP    #15
000018B4  43F8 3402                894              LEA     HTXT6A,A1    ;block fill command text
000018B8  323C 0048                895              MOVE.W  #72,D1
000018BC  103C 0000                896              MOVE.B  #0,D0
000018C0  4E4F                     897              TRAP    #15
000018C2  43F8 344A                898              LEA     HTXT6B,A1    ;block fill command text
000018C6  323C 0026                899              MOVE.W  #38,D1
000018CA  103C 0000                900              MOVE.B  #0,D0
000018CE  4E4F                     901              TRAP    #15
000018D0  123C 0000                902              MOVE.B  #0,D1
000018D4  4E4F                     903              TRAP    #15         ;newline
000018D6                           904              
000018D6                           905              
000018D6  43F8 3470                906              LEA     HTXT7,A1    ;block move command text
000018DA  323C 0044                907              MOVE.W  #68,D1
000018DE  103C 0000                908              MOVE.B  #0,D0
000018E2  4E4F                     909              TRAP    #15
000018E4  43F8 34B4                910              LEA     HTXT7A,A1    ;block move command text
000018E8  323C 0048                911              MOVE.W  #72,D1
000018EC  103C 0000                912              MOVE.B  #0,D0
000018F0  4E4F                     913              TRAP    #15
000018F2  43F8 34FC                914              LEA     HTXT7B,A1    ;block move command text
000018F6  323C 0018                915              MOVE.W  #24,D1
000018FA  103C 0000                916              MOVE.B  #0,D0
000018FE  4E4F                     917              TRAP    #15
00001900  123C 0000                918              MOVE.B  #0,D1       ;newline
00001904  4E4F                     919              TRAP    #15
00001906                           920              
00001906  43F8 3514                921              LEA     HTXT8,A1    ;block test command text
0000190A  323C 0047                922              MOVE.W  #71,D1
0000190E  103C 0000                923              MOVE.B  #0,D0
00001912  4E4F                     924              TRAP    #15
00001914  43F8 355B                925              LEA     HTXT8A,A1    ;block test command text
00001918  323C 0028                926              MOVE.W  #40,D1
0000191C  103C 0000                927              MOVE.B  #0,D0
00001920  4E4F                     928              TRAP    #15
00001922  123C 0000                929              MOVE.B  #0,D1       ;newline
00001926  4E4F                     930              TRAP    #15
00001928                           931              
00001928  43F8 3583                932              LEA     HTXT9,A1    ;block search command text
0000192C  323C 0046                933              MOVE.W  #70,D1
00001930  103C 0000                934              MOVE.B  #0,D0
00001934  4E4F                     935              TRAP    #15
00001936  43F8 35CB                936              LEA     HTXT9A,A1    ;block search command text
0000193A  323C 002D                937              MOVE.W  #45,D1
0000193E  103C 0000                938              MOVE.B  #0,D0
00001942  4E4F                     939              TRAP    #15
00001944  123C 0000                940              MOVE.B  #0,D1       ;newline
00001948  4E4F                     941              TRAP    #15
0000194A                           942              
0000194A  43F8 35F8                943              LEA     HTXT10,A1    ;go command text
0000194E  323C 003D                944              MOVE.W  #61,D1
00001952  103C 0000                945              MOVE.B  #0,D0
00001956  4E4F                     946              TRAP    #15
00001958  123C 0000                947              MOVE.B  #0,D1      ;newline
0000195C  4E4F                     948              TRAP    #15
0000195E                           949  
0000195E  43F8 3635                950              LEA     HTXT11,A1   ;df command text   
00001962  323C 0038                951              MOVE.W  #56,D1
00001966  103C 0000                952              MOVE.B  #0,D0
0000196A  4E4F                     953              TRAP    #15
0000196C  123C 0000                954              MOVE.B  #0,D1
00001970  4E4F                     955              TRAP    #15
00001972                           956              
00001972  43F8 366D                957              LEA     HTXT12,A1   ;help command text
00001976  323C 0042                958              MOVE.W  #66,D1
0000197A  103C 0000                959              MOVE.B  #0,D0
0000197E  4E4F                     960              TRAP    #15
00001980  123C 0000                961              MOVE.B  #0,D1       ;newline
00001984  4E4F                     962              TRAP    #15   
00001986                           963              
00001986  43F8 36AF                964              LEA     HTXT13,A1   ;echo command text   
0000198A  323C 0034                965              MOVE.W  #52,D1
0000198E  103C 0000                966              MOVE.B  #0,D0
00001992  4E4F                     967              TRAP    #15
00001994  123C 0000                968              MOVE.B  #0,D1       ;newline
00001998  4E4F                     969              TRAP    #15
0000199A                           970              
0000199A  43F8 36E2                971              LEA     HTXT14,A1   ;modify register command text   
0000199E  323C 0047                972              MOVE.W  #71,D1
000019A2  103C 0000                973              MOVE.B  #0,D0
000019A6  4E4F                     974              TRAP    #15
000019A8  43F8 3729                975              LEA     HTXT15,A1   ;modify register command text   
000019AC  323C 003F                976              MOVE.W  #63,D1
000019B0  103C 0000                977              MOVE.B  #0,D0
000019B4  4E4F                     978              TRAP    #15
000019B6  123C 0000                979              MOVE.B  #0,D1       ;newline
000019BA  4E4F                     980              TRAP    #15
000019BC                           981   
000019BC  6000 F738                982              BRA     RESTORE  
000019C0                           983  *--------------------------------------------------------------------------------------*
000019C0                           984  *Fix ASCII String input? ask in lab*
000019C0  45F8 3000                985  MEMSET:     LEA     BUFFER,A2
000019C4  568A                     986              ADD.L   #3,A2
000019C6  264A                     987              MOVE.L  A2,A3   ;set up to find end
000019C8  0C1B 0020                988  FINDEND:    CMP.B   #$20,(A3)+
000019CC  6700 0004                989              BEQ     MEMCONT
000019D0  60F6                     990              BRA     FINDEND
000019D2  538B                     991  MEMCONT:    SUB.L  #1,A3   ;get rid of off by one erro
000019D4  284B                     992              MOVE.L  A3,A4   ;used for data length calculator
000019D6                           993            
000019D6  4EB9 00002780            994              JSR ASCII_ADDRESS
000019DC  2E05                     995              MOVE.L  D5,D7   ;store value to be put in mem into D7
000019DE  528B                     996              ADD.L   #1,A3   ;increment to address to store it
000019E0  244B                     997              MOVE.L  A3,A2
000019E2                           998  MSFINDADDRESS:
000019E2  0C1B 0000                999              CMP.B   #$00,(A3)+
000019E6  6700 0004               1000              BEQ     MOVEDATA
000019EA  60F6                    1001              BRA     MSFINDADDRESS
000019EC                          1002  
000019EC                          1003  MOVEDATA:
000019EC  538B                    1004              SUB.L   #1,A3   ;off by one error
000019EE  4EB9 00002780           1005              JSR     ASCII_ADDRESS
000019F4  2645                    1006              MOVE.L  D5,A3   ;setup for storage
000019F6  1687                    1007              MOVE.B  D7,(A3)   ;store data 
000019F8                          1008              
000019F8                          1009  
000019F8                          1010  
000019F8                          1011            ;  MOVE.B  (A2)+,D1
000019F8                          1012            ;  MOVE.B  (A2),D2
000019F8                          1013            ;  MOVE.B  D1,D3       ;pass value to subroutine
000019F8                          1014            ;  JSR     ASCII_TO_BCD           
000019F8                          1015            ;  MOVE.B  D3,D1       ;get converted value
000019F8                          1016            ;  MOVE.B  D2,D3       ;pass value
000019F8                          1017            ;  JSR     ASCII_TO_BCD
000019F8                          1018            ;  MOVE.B  D3,D2       ;get returned value
000019F8                          1019            ;  MOVE.B  D1,D3
000019F8                          1020            ;  JSR     BCD_TO_HEX
000019F8                          1021            ;  MOVE.B  D3,D1
000019F8                          1022            ;  MOVE.B  D2,D3
000019F8                          1023            ;  JSR     BCD_TO_HEX
000019F8                          1024            ;  MOVE.B  D3,D2
000019F8                          1025            ;  ROL.L   #4,D1       ;put data in correct place
000019F8                          1026            ;  ADD     D1,D2       ;get combined data input
000019F8                          1027            ;  ADD.L   #2,A2       ;go to start of address
000019F8                          1028            ;  JSR     ASCII_ADDRESS  ;get address in workable form
000019F8                          1029            ;  MOVE.L  D5,A4       ;load target address
000019F8                          1030            ;  MOVE.B  D2,(A4)       ;put data in target address
000019F8  6000 F6FC               1031              BRA     RESTORE                 ;return to shell
000019FC                          1032  *--------------------------------------------------------------------------------------*
000019FC  45F8 3000               1033  MEMDISP:    LEA     BUFFER,A2
00001A00  7C01                    1034              MOVE.L  #1,D6       ;counter for how many times to loop
00001A02  5A8A                    1035              ADD.L   #5,A2       ;get first address
00001A04  264A                    1036              MOVE.L  A2,A3       
00001A06  0C1B 0020               1037  FINDEND1:   CMP.B   #$20,(A3)+
00001A0A  6700 0004               1038              BEQ     FINDNEXT
00001A0E  60F6                    1039              BRA     FINDEND1  
00001A10  284B                    1040  FINDNEXT:   MOVE.L  A3,A4
00001A12  2A4B                    1041              MOVE.L  A3,A5
00001A14  538B                    1042              SUB.L   #1,A3   ;get rid of off by one error
00001A16  0C1D 0000               1043  FINDEND2:   CMP.B   #$00,(A5)+
00001A1A  6700 0004               1044              BEQ     MEMNEXT
00001A1E  60F6                    1045              BRA     FINDEND2
00001A20  538D                    1046  MEMNEXT:    SUB.L   #1,A5   ;off by one error
00001A22  4EB9 00002780           1047              JSR     ASCII_ADDRESS
00001A28  2C45                    1048              MOVE.L  D5,A6   ;put 1st address in A6
00001A2A  244C                    1049              MOVE.L  A4,A2
00001A2C  264D                    1050              MOVE.L  A5,A3
00001A2E  4EB9 00002780           1051              JSR ASCII_ADDRESS
00001A34  2A45                    1052              MOVE.L  D5,A5   ;second address in A5
00001A36  204E                    1053              MOVE.L  A6,A0   ;for second run through
00001A38  224D                    1054              MOVE.L  A5,A1   ;see above comment
00001A3A  D3FC 00000010           1055              ADD.L   #16,A1 ;16 byte offset
00001A40  48E7 0040               1056              MOVEM.L A1,-(SP)
00001A44  BBCE                    1057  DISPLOOP:   CMP.L   A6,A5
00001A46  6D00 0034               1058              BLT     SECONDLOOP
00001A4A  260E                    1059              MOVE.L  A6,D3
00001A4C  4EB9 000027C0           1060              JSR     HEXTOASCII
00001A52  97CA                    1061              SUB.L   A2,A3
00001A54  220B                    1062              MOVE.L  A3,D1   ;number of ascii values to display
00001A56  224A                    1063              MOVE.L  A2,A1
00001A58  7001                    1064              MOVE.L  #1,D0
00001A5A  4E4F                    1065              TRAP    #15
00001A5C  43F8 37A9               1066              LEA     SPACE,A1
00001A60  7201                    1067              MOVE.L #1,D1
00001A62  4E4F                    1068              TRAP    #15
00001A64  4283                    1069              CLR.L   D3
00001A66  1616                    1070              MOVE.B  (A6),D3
00001A68  4EB9 000027C0           1071              JSR     HEXTOASCII
00001A6E  97CA                    1072              SUB.L   A2,A3
00001A70  220B                    1073              MOVE.L  A3,D1
00001A72  224A                    1074              MOVE.L  A2,A1
00001A74  7000                    1075              MOVE.L  #0,D0
00001A76  4E4F                    1076              TRAP    #15
00001A78  528E                    1077              ADD.L   #1,A6
00001A7A  60C8                    1078              BRA     DISPLOOP
00001A7C                          1079              
00001A7C                          1080  SECONDLOOP: 
00001A7C  103C 0000               1081              MOVE.B  #0,D0
00001A80  123C 0000               1082              MOVE.B  #0,D1
00001A84  4E4F                    1083              TRAP    #15
00001A86  4CDF 0200               1084              MOVEM.L (SP)+,A1
00001A8A  2C48                    1085              MOVE.L  A0,A6   ;reinit
00001A8C  2A49                    1086              MOVE.L  A1,A5
00001A8E  5386                    1087              SUBI.L  #1,D6
00001A90  BCBC 00000000           1088              CMP.L   #$0,D6
00001A96  67AC                    1089              BEQ     DISPLOOP
00001A98  598F                    1090              SUB.L   #4,SP   ;off by long error on stack
00001A9A  6000 F65A               1091              BRA     RESTORE
00001A9E                          1092              
00001A9E                          1093  *--------------------------------------------------------------------------------------*
00001A9E                          1094  
00001A9E  45F8 3000               1095  HXDC:   LEA BUFFER,A2   ;load buffer
00001AA2  5C8A                    1096          ADD.L   #6,A2   ; start of number
00001AA4  264A                    1097          MOVE.L  A2,A3   ;set up end pointer
00001AA6  7201                    1098          MOVE.L  #1,D1   ;set up 16's place
00001AA8  4282                    1099          CLR.L   D2      ;clear total
00001AAA  4283                    1100          CLR.L   D3      ;temp holder for number
00001AAC  4286                    1101          CLR.L   D6      ;Final Value in BCD
00001AAE  283C 00002710           1102          MOVE.L  #10000,D4    ;maximum 10's place of converted number
00001AB4  7A10                    1103          MOVE.L  #16,D5      ;Max number of rotates needed
00001AB6  4BF8 3A00               1104          LEA $3A00,A5
00001ABA  49F8 3A00               1105          LEA $3A00,A4   ;set up start pointer
00001ABE                          1106  FINDLASTNUM:    
00001ABE  0C1B 0000               1107          CMP.B #$00,(A3)+
00001AC2  6700 0004               1108          BEQ     CONVERTMINUS1
00001AC6  60F6                    1109          BRA     FINDLASTNUM
00001AC8                          1110  CONVERTMINUS1:   
00001AC8  538B                    1111               SUB.L   #1,A3 ; cure off by 1 error
00001ACA                          1112  CONVERT:
00001ACA  538B                    1113              SUB.L   #1,A3
00001ACC  B4CB                    1114              CMP   A3,A2
00001ACE  6E00 0028               1115              BGT   ENDCONVERT
00001AD2  0C13 0040               1116              CMP.B   #$40,(A3)
00001AD6  6E00 000A               1117              BGT     HIGHHEX
00001ADA  0413 0030               1118              SUBI.B  #$30,(A3)   ;get hex value
00001ADE  6000 0006               1119              BRA     COMPUTATION
00001AE2  0413 0037               1120  HIGHHEX:     SUBI.B  #$37,(A3)  ;get hex value
00001AE6                          1121  COMPUTATION:
00001AE6  1613                    1122              MOVE.B  (A3),D3 
00001AE8  C6C1                    1123              MULU    D1,D3   ;get 16's place
00001AEA                          1124             ; DIVU    #16,D3  ;get rid of off by 1 exponent error
00001AEA  C2FC 0010               1125              MULU    #16,D1  ;inc 16's place counter
00001AEE  1883                    1126              MOVE.B  D3,(A4)
00001AF0  538C                    1127              SUB.L   #1,A4
00001AF2  D483                    1128              ADD.L   D3,D2   ;store it in total for debugging 
00001AF4  4283                    1129              CLR.L   D3      ;get rid of any numbers in there   
00001AF6  60D2                    1130              BRA     CONVERT     
00001AF8                          1131  ENDCONVERT:                  ;must convert back to ascii for display
00001AF8  4283                    1132              CLR.L   D3      ;Cleared for workability
00001AFA  84C4                    1133              DIVU    D4,D2   ;get 10's place digit
00001AFC  3602                    1134              MOVE.W  D2,D3   ;extract 10's place digit to D3
00001AFE  EBBB                    1135              ROL.L   D5,D3   ;put it in its place
00001B00  4242                    1136              CLR.W   D2      ;get rid of whole number
00001B02  4842                    1137              SWAP    D2      ;keep remainder
00001B04  5985                    1138              SUBI.L  #4,D5   ;dec rotate counter
00001B06  DC83                    1139              ADD.L   D3,D6   ;put it into it's place
00001B08  88FC 000A               1140              DIVU    #10,D4  ;go down a 10's place
00001B0C  B87C 0000               1141              CMP.W   #0,D4   ;are we done
00001B10  6700 0004               1142              BEQ     OUTPUTNUM
00001B14  60E2                    1143              BRA     ENDCONVERT
00001B16                          1144              
00001B16                          1145  OUTPUTNUM:
00001B16  2606                    1146             MOVE.L   D6,D3   ;put into register for conversion to ASCII
00001B18  4EB9 000027C0           1147             JSR      HEXTOASCII
00001B1E  224A                    1148             MOVEA.L  A2,A1   ;get start of number
00001B20  96CA                    1149             SUBA     A2,A3   ;get how many bytes to output
00001B22  220B                    1150             MOVE.L   A3,D1   ;for Trap call
00001B24  7000                    1151             MOVE.L   #0,D0   
00001B26  4E4F                    1152             TRAP     #15
00001B28                          1153             
00001B28  6000 F5CC               1154             BRA RESTORE
00001B2C                          1155  
00001B2C                          1156  *--------------------------------------------------------------------------------------*
00001B2C                          1157  
00001B2C  5289                    1158  SORTW:  ADD.L   #1,A1       ;increment to check for semicolon/dash
00001B2E  0C11 002D               1159          CMP.B   #$2D,(A1)   ;check for default
00001B32  6700 001E               1160          BEQ     DEFAULTTEST
00001B36  0C19 003B               1161          CMP.B   #$3B,(A1)+
00001B3A  6600 0BF8               1162          BNE     ERRORSR
00001B3E  0C11 0041               1163          CMP.B   #$41,(A1)   ;is it ascending?
00001B42  6700 005C               1164          BEQ     ASCEND
00001B46  0C11 0044               1165          CMP.B   #$44,(A1)   ;or descending?
00001B4A  6600 0BE8               1166          BNE     ERRORSR
00001B4E  6000 00AE               1167          BRA     DESCEND
00001B52                          1168          
00001B52                          1169  DEFAULTTEST:
00001B52  5289                    1170                  ADD.L  #1,A1   ;check for paren
00001B54  0C19 0028               1171          CMP.B   #$28,(A1)+  ;(
00001B58  6600 0BDA               1172          BNE     ERRORSR
00001B5C  0C19 0064               1173          CMP.B   #$64,(A1)+  ;d
00001B60  6600 0BD2               1174          BNE     ERRORSR
00001B64  0C19 0065               1175          CMP.B   #$65,(A1)+  ;e
00001B68  6600 0BCA               1176          BNE     ERRORSR
00001B6C  0C19 0066               1177          CMP.B   #$66,(A1)+  ;f
00001B70  6600 0BC2               1178          BNE     ERRORSR
00001B74  0C19 0061               1179          CMP.B   #$61,(A1)+  ;a
00001B78  6600 0BBA               1180          BNE     ERRORSR
00001B7C  0C19 0075               1181          CMP.B   #$75,(A1)+  ;u
00001B80  6600 0BB2               1182          BNE     ERRORSR
00001B84  0C19 006C               1183          CMP.B   #$6C,(A1)+  ;l
00001B88  6600 0BAA               1184          BNE     ERRORSR     
00001B8C  0C19 0074               1185          CMP.B   #$74,(A1)+  ;t
00001B90  6600 0BA2               1186          BNE     ERRORSR
00001B94  0C11 0029               1187          CMP.B   #$29,(A1)  ;)
00001B98  6600 0B9A               1188          BNE     ERRORSR
00001B9C  6000 0060               1189          BRA     DESCEND
00001BA0                          1190  
00001BA0                          1191          
00001BA0                          1192  ASCEND:
00001BA0  5289                    1193         ADD.L    #1,A1   ;inc
00001BA2  0C11 0020               1194         CMP.B    #$20,(A1)   ;check space
00001BA6  6600 0B8C               1195         BNE      ERRORSR
00001BAA  5289                    1196         ADD.L    #1,A1   ;start of 1st address
00001BAC  2449                    1197         MOVE.L   A1,A2
00001BAE  264A                    1198         MOVE.L   A2,A3
00001BB0                          1199  AGETFIRSTADDRESS:
00001BB0  0C13 0000               1200         CMP.B    #$00,(A3)
00001BB4  6700 0B7E               1201         BEQ      ERRORSR     ;incorrect syntax
00001BB8  0C1B 0020               1202         CMP.B    #$20,(A3)+  ;trying to find the end
00001BBC  6700 0004               1203         BEQ      AFADDCONV
00001BC0  60EE                    1204         BRA      AGETFIRSTADDRESS
00001BC2                          1205  AFADDCONV:
00001BC2  538B                    1206         SUB.L    #1,A3   ;off by one error
00001BC4  4EB9 00002780           1207         JSR ASCII_ADDRESS    ;D5 now has that address 
00001BCA  2845                    1208         MOVE.L D5,A4
00001BCC  528B                    1209         ADD.L    #1,A3   ;start of second address
00001BCE  244B                    1210         MOVE.L   A3,A2   ;setup for second address
00001BD0                          1211  AGETSECADDRESS:
00001BD0  0C1B 0000               1212         CMP.B    #$00,(A3)+  ;trying to find the end
00001BD4  6700 0004               1213         BEQ      ASADDCONV
00001BD8  60F6                    1214         BRA      AGETSECADDRESS
00001BDA                          1215  ASADDCONV:
00001BDA  538B                    1216          SUB.L   #1,A3   ;off by one
00001BDC  4EB9 00002780           1217          JSR     ASCII_ADDRESS
00001BE2  2A45                    1218          MOVE.L  D5,A5
00001BE4  2C4C                    1219          MOVEA.L  A4,A6  ;CLR A6
00001BE6                          1220          
00001BE6  284E                    1221  ARESETLOOP: MOVE.L  A6,A4    ;reset to top of loop
00001BE8  B94C                    1222  ACMP:       CMP.W   (A4)+,(A4)+  ;check adjacent mem
00001BEA  630A                    1223              BLS.S   ASWAP    
00001BEC  558C                    1224              SUBQ.L  #2,A4
00001BEE  BBCC                    1225              CMP.L   A4,A5   ;done?
00001BF0  66F6                    1226              BNE     ACMP     ;nope
00001BF2  6000 0068               1227              BRA     DONEASCEND  ;yep
00001BF6  2024                    1228  ASWAP:       MOVE.L  -(A4),D0    ;start bubbling 
00001BF8  4840                    1229              SWAP.W  D0
00001BFA  2880                    1230              MOVE.L  D0,(A4)
00001BFC  60E8                    1231              BRA     ARESETLOOP
00001BFE                          1232  
00001BFE                          1233  
00001BFE                          1234  DESCEND:
00001BFE  5289                    1235         ADD.L    #1,A1   ;inc
00001C00  0C11 0020               1236         CMP.B    #$20,(A1)   ;check space
00001C04  6600 0B2E               1237         BNE      ERRORSR
00001C08  5289                    1238         ADD.L    #1,A1   ;start of 1st address
00001C0A  2449                    1239         MOVE.L   A1,A2
00001C0C  264A                    1240         MOVE.L   A2,A3
00001C0E                          1241  DGETFIRSTADDRESS:
00001C0E  0C13 0000               1242         CMP.B    #$00,(A3)
00001C12  6700 0B20               1243         BEQ      ERRORSR     ;incorrect syntax
00001C16  0C1B 0020               1244         CMP.B    #$20,(A3)+  ;trying to find the end
00001C1A  6700 0004               1245         BEQ      DFADDCONV
00001C1E  60EE                    1246         BRA      DGETFIRSTADDRESS
00001C20                          1247  DFADDCONV:
00001C20  538B                    1248         SUB.L    #1,A3   ;off by one error
00001C22  4EB9 00002780           1249         JSR ASCII_ADDRESS    ;D5 now has that address 
00001C28  2845                    1250         MOVE.L D5,A4
00001C2A  528B                    1251         ADD.L    #1,A3   ;start of second address
00001C2C  244B                    1252         MOVE.L   A3,A2   ;setup for second address
00001C2E                          1253  DGETSECADDRESS:
00001C2E  0C1B 0000               1254         CMP.B    #$00,(A3)+  ;trying to find the end
00001C32  6700 0004               1255         BEQ      DSADDCONV
00001C36  60F6                    1256         BRA      DGETSECADDRESS
00001C38                          1257  DSADDCONV:
00001C38  538B                    1258          SUB.L   #1,A3   ;off by one
00001C3A  4EB9 00002780           1259          JSR     ASCII_ADDRESS
00001C40  2A45                    1260          MOVE.L  D5,A5
00001C42  2C4C                    1261          MOVEA.L  A4,A6  ;CLR A6
00001C44                          1262          
00001C44  284E                    1263  DRESETLOOP: MOVE.L  A6,A4    ;reset to top of loop
00001C46  B94C                    1264  DCMP:       CMP.W   (A4)+,(A4)+  ;check adjacent mem
00001C48  620A                    1265              BHI.S   DSWAP    
00001C4A  558C                    1266              SUBQ.L  #2,A4
00001C4C  BBCC                    1267              CMP.L   A4,A5   ;done?
00001C4E  66F6                    1268              BNE     DCMP     ;nope
00001C50  6000 000A               1269              BRA     DONEDESCEND  ;yep
00001C54  2024                    1270  DSWAP:       MOVE.L  -(A4),D0    ;start bubbling 
00001C56  4840                    1271              SWAP.W  D0
00001C58  2880                    1272              MOVE.L  D0,(A4)
00001C5A  60E8                    1273              BRA     DRESETLOOP
00001C5C                          1274  
00001C5C                          1275  DONEASCEND:
00001C5C                          1276  DONEDESCEND:
00001C5C  6000 F498               1277              BRA RESTORE
00001C60                          1278  
00001C60                          1279  *--------------------------------------------------------------------------------------*
00001C60                          1280  
00001C60  4282                    1281  MM:    CLR.L    D2      ;used for storing values
00001C62  4286                    1282         CLR.L    D6      
00001C64                          1283  SIZECHECK:  
00001C64  2649                    1284          MOVE.L  A1,A3   ;set up to find end ptr
00001C66                          1285  ENDPTRMM:
00001C66  0C1B 0000               1286          CMP.B   #$00,(A3)+
00001C6A  66FA                    1287          BNE     ENDPTRMM
00001C6C  538B                    1288          SUB.L   #1,A3   ;off by one error
00001C6E  5289                    1289          ADD.L   #1,A1   ;inc pointer to start of specifier
00001C70  0C11 002D               1290          CMP.B   #$2D,(A1)   ;check for default
00001C74  6700 0020               1291          BEQ     DEFAULT        
00001C78  0C11 003B               1292          CMP.B   #$3B,(A1)
00001C7C  6600 0AB6               1293          BNE     ERRORSR
00001C80  5289                    1294          ADD.L   #1,A1   ;find out which size
00001C82  0C11 0057               1295          CMP.B   #$57,(A1) ; word
00001C86  6700 00FE               1296          BEQ     WORD
00001C8A  0C11 004C               1297          CMP.B   #$4C,(A1)   ;long
00001C8E  6700 01D0               1298          BEQ     LONG
00001C92  6000 0AA0               1299          BRA     ERRORSR
00001C96                          1300  
00001C96                          1301  ***************************************************
00001C96                          1302  
00001C96                          1303  DEFAULT: 
00001C96  5289                    1304          ADD.L  #1,A1   ;check for paren
00001C98  0C19 0028               1305          CMP.B   #$28,(A1)+  ;(
00001C9C  6600 0A96               1306          BNE     ERRORSR
00001CA0  0C19 0064               1307          CMP.B   #$64,(A1)+  ;d
00001CA4  6600 0A8E               1308          BNE     ERRORSR
00001CA8  0C19 0065               1309          CMP.B   #$65,(A1)+  ;e
00001CAC  6600 0A86               1310          BNE     ERRORSR
00001CB0  0C19 0066               1311          CMP.B   #$66,(A1)+  ;f
00001CB4  6600 0A7E               1312          BNE     ERRORSR
00001CB8  0C19 0061               1313          CMP.B   #$61,(A1)+  ;a
00001CBC  6600 0A76               1314          BNE     ERRORSR
00001CC0  0C19 0075               1315          CMP.B   #$75,(A1)+  ;u
00001CC4  6600 0A6E               1316          BNE     ERRORSR
00001CC8  0C19 006C               1317          CMP.B   #$6C,(A1)+  ;l
00001CCC  6600 0A66               1318          BNE     ERRORSR     
00001CD0  0C19 0074               1319          CMP.B   #$74,(A1)+  ;t
00001CD4  6600 0A5E               1320          BNE     ERRORSR
00001CD8  0C19 0029               1321          CMP.B   #$29,(A1)+  ;)
00001CDC  6600 0A56               1322          BNE     ERRORSR
00001CE0                          1323          
00001CE0                          1324          
00001CE0  5289                    1325          ADD.L   #1,A1       ;set up for subroutine
00001CE2  3449                    1326          MOVE    A1,A2       ;set up for subroutine
00001CE4  48E7 4270               1327          MOVEM.L D1/D6/A1-A3,-(SP)
00001CE8  4EB9 00002780           1328          JSR     ASCII_ADDRESS
00001CEE  4CDF 0E42               1329          MOVEM.L (SP)+,D1/D6/A1-A3
00001CF2  2845                    1330          MOVE.L  D5,A4       ;set up address to modify
00001CF4                          1331         
00001CF4                          1332  MODIFYLOOP:
00001CF4                          1333          *-------Display Memory First-----*
00001CF4  260C                    1334          MOVE.L  A4,D3       ;set up for subroutine
00001CF6  4EB9 000027C0           1335          JSR     HEXTOASCII  ;convert new address to ascii for output
00001CFC  96CA                    1336          SUBA    A2,A3       ;get num of bytes to produce
00001CFE  7001                    1337          MOVE.L  #1,D0
00001D00  220B                    1338          MOVE.L  A3,D1
00001D02  224A                    1339          MOVE.L  A2,A1
00001D04  4E4F                    1340          TRAP    #15
00001D06                          1341          
00001D06                          1342          *add colon to denote containing data*
00001D06  12BC 003A               1343          MOVE.B  #$3A,(A1)
00001D0A  7201                    1344          MOVE.L  #1,D1   ;display only the colon
00001D0C  7001                    1345          MOVE.L  #1,D0
00001D0E  4E4F                    1346          TRAP    #15
00001D10                          1347          
00001D10  1614                    1348          MOVE.B  (A4),D3
00001D12  4EB9 000027C0           1349          JSR     HEXTOASCII
00001D18  7202                    1350          MOVE.L  #2,D1
00001D1A  97CA                    1351          SUB.L   A2,A3
00001D1C  B6FC 0002               1352          CMP     #2,A3
00001D20  6700 0004               1353          BEQ     FORMATGOOD
00001D24  538A                    1354          SUB.L   #1,A2
00001D26                          1355  FORMATGOOD:
00001D26  224A                    1356          MOVE.L  A2,A1
00001D28  103C 0001               1357          MOVE.B  #1,D0
00001D2C  4E4F                    1358          TRAP    #15
00001D2E                          1359          
00001D2E  12BC 0020               1360          MOVE.B  #$20,(A1)
00001D32  7201                    1361          MOVE.L  #1,D1   ;space between held data and input
00001D34  7001                    1362          MOVE.L  #1,D0
00001D36  4E4F                    1363          TRAP    #15
00001D38                          1364  
00001D38                          1365          
00001D38                          1366          *-----Enter Input-------*
00001D38  4283                    1367          CLR.L   D3
00001D3A  7C04                    1368          MOVE.L  #4,D6
00001D3C  43F8 3000               1369          LEA     BUFFER,A1   ;set up storage for command
00001D40  103C 0002               1370          MOVE.B  #2,D0       ;load input trap call
00001D44  4E4F                    1371          TRAP    #15
00001D46  0C11 002E               1372          CMP.B   #$2E,(A1)
00001D4A  6700 022A               1373          BEQ     ENDLP
00001D4E  0C11 0000               1374          CMP.B   #$00,(A1)
00001D52  6700 002C               1375          BEQ     ENTER
00001D56                          1376          
00001D56                          1377  PARSELOOP:
00001D56  0C11 0000               1378          CMP.B   #$00,(A1)
00001D5A  6700 0022               1379          BEQ     ENDPARSE        
00001D5E  0C11 0040               1380          CMP.B   #$40,(A1)
00001D62  6E00 000A               1381          BGT     HIGHHEXMM
00001D66  0411 0030               1382          SUBI.B  #$30,(A1)   ;get hex value
00001D6A  6000 0006               1383          BRA     NEXTMMSTEP
00001D6E  0411 0037               1384  HIGHHEXMM: SUBI.B  #$37,(A1)  ;get hex value
00001D72                          1385  NEXTMMSTEP:
00001D72  1411                    1386          MOVE.B  (A1),D2
00001D74  EDBA                    1387          ROL.L   D6,D2
00001D76  5986                    1388          SUBI.L  #4,D6
00001D78  5289                    1389          ADD.L   #1,A1
00001D7A  D602                    1390          ADD.B   D2,D3   ;total byte stored in D3
00001D7C  60D8                    1391          BRA     PARSELOOP
00001D7E                          1392  ENDPARSE:
00001D7E  1883                    1393          MOVE.B  D3,(A4)   ;commit memory change 
00001D80  528C                    1394  ENTER:  ADD.L   #1,A4   ;increment address
00001D82  6000 FF70               1395          BRA     MODIFYLOOP
00001D86                          1396          
00001D86                          1397  ***************************************************
00001D86                          1398  
00001D86                          1399  WORD:
00001D86                          1400              
00001D86  5489                    1401          ADD.L   #2,A1       ;set up for subroutine
00001D88  3449                    1402          MOVE    A1,A2       ;set up for subroutine
00001D8A  48E7 4270               1403          MOVEM.L D1/D6/A1-A3,-(SP)
00001D8E  4EB9 00002780           1404          JSR     ASCII_ADDRESS
00001D94  4CDF 0E42               1405          MOVEM.L (SP)+,D1/D6/A1-A3
00001D98  2845                    1406          MOVE.L  D5,A4       ;set up address to modify
00001D9A                          1407         
00001D9A                          1408  MODIFYLOOPW:
00001D9A                          1409          *-------Display Memory First-----*
00001D9A  200C                    1410          MOVE.L  A4,D0
00001D9C  80FC 0002               1411          DIVU    #2,D0
00001DA0  4840                    1412          SWAP    D0      ;check if it's an odd address
00001DA2  B07C 0000               1413          CMP.W   #$00,D0
00001DA6  6600 098C               1414          BNE     ERRORSR
00001DAA  260C                    1415          MOVE.L  A4,D3       ;set up for subroutine
00001DAC  2A4C                    1416          MOVE.L  A4,A5       ;next byte of memory may not be needed
00001DAE  528D                    1417          ADD.L   #1,A5
00001DB0  4EB9 000027C0           1418          JSR     HEXTOASCII  ;convert new address to ascii for output
00001DB6  96CA                    1419          SUBA    A2,A3       ;get num of bytes to produce
00001DB8  7001                    1420          MOVE.L  #1,D0
00001DBA  220B                    1421          MOVE.L  A3,D1
00001DBC  224A                    1422          MOVE.L  A2,A1
00001DBE  4E4F                    1423          TRAP    #15
00001DC0                          1424          
00001DC0                          1425          *add colon to denote containing data*
00001DC0  12BC 003A               1426          MOVE.B  #$3A,(A1)
00001DC4  7201                    1427          MOVE.L  #1,D1   ;display only the colon
00001DC6  7001                    1428          MOVE.L  #1,D0
00001DC8  4E4F                    1429          TRAP    #15
00001DCA                          1430          
00001DCA  1614                    1431          MOVE.B  (A4),D3
00001DCC  4EB9 000027C0           1432          JSR     HEXTOASCII
00001DD2  7202                    1433          MOVE.L  #2,D1
00001DD4  97CA                    1434          SUB.L   A2,A3
00001DD6  B6FC 0002               1435          CMP     #2,A3
00001DDA  6700 0004               1436          BEQ     FORMATGOOD1
00001DDE  538A                    1437          SUB.L   #1,A2     
00001DE0                          1438  FORMATGOOD1:
00001DE0                          1439  
00001DE0  224A                    1440          MOVE.L  A2,A1
00001DE2  103C 0001               1441          MOVE.B  #1,D0
00001DE6  4E4F                    1442          TRAP    #15
00001DE8                          1443          
00001DE8  1615                    1444          MOVE.B  (A5),D3
00001DEA  4EB9 000027C0           1445          JSR     HEXTOASCII
00001DF0  7202                    1446          MOVE.L  #2,D1
00001DF2  97CA                    1447          SUB.L   A2,A3
00001DF4  B6FC 0002               1448          CMP     #2,A3
00001DF8  6700 0004               1449          BEQ     FORMATGOOD2
00001DFC  538A                    1450          SUB.L   #1,A2     
00001DFE                          1451  FORMATGOOD2:
00001DFE                          1452  
00001DFE  224A                    1453          MOVE.L  A2,A1
00001E00  103C 0001               1454          MOVE.B  #1,D0
00001E04  4E4F                    1455          TRAP    #15
00001E06                          1456  
00001E06                          1457          
00001E06  12BC 0020               1458          MOVE.B  #$20,(A1)
00001E0A  7201                    1459          MOVE.L  #1,D1   ;space between held data and input
00001E0C  7001                    1460          MOVE.L  #1,D0
00001E0E  4E4F                    1461          TRAP    #15
00001E10                          1462  
00001E10                          1463          
00001E10                          1464          *-----Enter Input-------*
00001E10  4283                    1465          CLR.L   D3
00001E12  7C0C                    1466          MOVE.L  #12,D6
00001E14  43F8 3000               1467          LEA     BUFFER,A1   ;set up storage for command
00001E18  103C 0002               1468          MOVE.B  #2,D0       ;load input trap call
00001E1C  4E4F                    1469          TRAP    #15
00001E1E  0C11 002E               1470          CMP.B   #$2E,(A1)
00001E22  6700 0152               1471          BEQ     ENDLP
00001E26  0C11 0000               1472          CMP.B   #$00,(A1)
00001E2A  6700 002E               1473          BEQ     ENTERW
00001E2E                          1474          
00001E2E                          1475  PARSELOOPW:
00001E2E  0C11 0000               1476          CMP.B   #$00,(A1)
00001E32  6700 0024               1477          BEQ     ENDPARSEW        
00001E36  0C11 0040               1478          CMP.B   #$40,(A1)
00001E3A  6E00 000A               1479          BGT     HIGHHEXMMW
00001E3E  0411 0030               1480          SUBI.B  #$30,(A1)   ;get hex value
00001E42  6000 0006               1481          BRA     NEXTMMSTEPW
00001E46  0411 0037               1482  HIGHHEXMMW: SUBI.B  #$37,(A1)  ;get hex value
00001E4A                          1483  NEXTMMSTEPW:
00001E4A  1411                    1484          MOVE.B  (A1),D2
00001E4C  EDBA                    1485          ROL.L   D6,D2
00001E4E  5986                    1486          SUBI.L  #4,D6
00001E50  5289                    1487          ADD.L   #1,A1
00001E52  D682                    1488          ADD.L   D2,D3   ;total byte stored in D3
00001E54  4282                    1489          CLR.L   D2      ;clear for next rotate
00001E56  60D6                    1490          BRA     PARSELOOPW
00001E58                          1491  ENDPARSEW:
00001E58                          1492          
00001E58  3883                    1493          MOVE.W  D3,(A4)   ;commit memory change 
00001E5A  548C                    1494  ENTERW:  ADD.L   #2,A4   ;increment address
00001E5C  6000 FF3C               1495          BRA     MODIFYLOOPW
00001E60                          1496  
00001E60                          1497  ***************************************************
00001E60                          1498  
00001E60                          1499  LONG:  
00001E60  5489                    1500          ADD.L   #2,A1       ;set up for subroutine
00001E62  3449                    1501          MOVE    A1,A2       ;set up for subroutine
00001E64  48E7 4270               1502          MOVEM.L D1/D6/A1-A3,-(SP)
00001E68  4EB9 00002780           1503          JSR     ASCII_ADDRESS
00001E6E  4CDF 0E42               1504          MOVEM.L (SP)+,D1/D6/A1-A3
00001E72  2845                    1505          MOVE.L  D5,A4       ;set up address to modify
00001E74                          1506         
00001E74                          1507  MODIFYLOOPL:
00001E74                          1508          *-------Display Memory First-----*
00001E74  200C                    1509          MOVE.L  A4,D0
00001E76  80FC 0002               1510          DIVU    #2,D0
00001E7A  4840                    1511          SWAP    D0      ;check if it's an odd address
00001E7C  B07C 0000               1512          CMP.W   #$00,D0
00001E80  6600 08B2               1513          BNE     ERRORSR
00001E84  260C                    1514          MOVE.L  A4,D3       ;set up for subroutine
00001E86  2A4C                    1515          MOVE.L  A4,A5       ;next byte of memory may not be needed
00001E88  528D                    1516          ADD.L   #1,A5
00001E8A  4EB9 000027C0           1517          JSR     HEXTOASCII  ;convert new address to ascii for output
00001E90  96CA                    1518          SUBA    A2,A3       ;get num of bytes to produce
00001E92  7001                    1519          MOVE.L  #1,D0
00001E94  220B                    1520          MOVE.L  A3,D1
00001E96  224A                    1521          MOVE.L  A2,A1
00001E98  4E4F                    1522          TRAP    #15
00001E9A                          1523          
00001E9A                          1524          *add colon to denote containing data*
00001E9A  12BC 003A               1525          MOVE.B  #$3A,(A1)
00001E9E  7201                    1526          MOVE.L  #1,D1   ;display only the colon
00001EA0  7001                    1527          MOVE.L  #1,D0
00001EA2  4E4F                    1528          TRAP    #15
00001EA4                          1529          
00001EA4  1614                    1530          MOVE.B  (A4),D3
00001EA6  4EB9 000027C0           1531          JSR     HEXTOASCII
00001EAC  7202                    1532          MOVE.L  #2,D1
00001EAE  97CA                    1533          SUB.L   A2,A3
00001EB0  B6FC 0002               1534          CMP     #2,A3
00001EB4  6700 0004               1535          BEQ     FORMATGOOD3
00001EB8  538A                    1536          SUB.L   #1,A2     
00001EBA                          1537  FORMATGOOD3:
00001EBA                          1538  
00001EBA  224A                    1539          MOVE.L  A2,A1
00001EBC  103C 0001               1540          MOVE.B  #1,D0
00001EC0  4E4F                    1541          TRAP    #15
00001EC2                          1542          
00001EC2  161D                    1543          MOVE.B  (A5)+,D3
00001EC4  4EB9 000027C0           1544          JSR     HEXTOASCII
00001ECA  7202                    1545          MOVE.L  #2,D1
00001ECC  97CA                    1546          SUB.L   A2,A3
00001ECE  B6FC 0002               1547          CMP     #2,A3
00001ED2  6700 0004               1548          BEQ     FORMATGOOD4
00001ED6  538A                    1549          SUB.L   #1,A2     
00001ED8                          1550  FORMATGOOD4:
00001ED8                          1551  
00001ED8  224A                    1552          MOVE.L  A2,A1
00001EDA  103C 0001               1553          MOVE.B  #1,D0
00001EDE  4E4F                    1554          TRAP    #15
00001EE0                          1555          
00001EE0  161D                    1556          MOVE.B  (A5)+,D3
00001EE2  4EB9 000027C0           1557          JSR     HEXTOASCII
00001EE8  7202                    1558          MOVE.L  #2,D1
00001EEA  97CA                    1559          SUB.L   A2,A3
00001EEC  B6FC 0002               1560          CMP     #2,A3
00001EF0  6700 0004               1561          BEQ     FORMATGOOD5
00001EF4  538A                    1562          SUB.L   #1,A2     
00001EF6                          1563  FORMATGOOD5:
00001EF6                          1564  
00001EF6  224A                    1565          MOVE.L  A2,A1
00001EF8  103C 0001               1566          MOVE.B  #1,D0
00001EFC  4E4F                    1567          TRAP    #15
00001EFE  161D                    1568          MOVE.B  (A5)+,D3
00001F00  4EB9 000027C0           1569          JSR     HEXTOASCII
00001F06  7202                    1570          MOVE.L  #2,D1
00001F08  97CA                    1571          SUB.L   A2,A3
00001F0A  B6FC 0002               1572          CMP     #2,A3
00001F0E  6700 0004               1573          BEQ     FORMATGOOD6
00001F12  538A                    1574          SUB.L   #1,A2     
00001F14                          1575  FORMATGOOD6:
00001F14                          1576  
00001F14  224A                    1577          MOVE.L  A2,A1
00001F16  103C 0001               1578          MOVE.B  #1,D0
00001F1A  4E4F                    1579          TRAP    #15
00001F1C                          1580     
00001F1C  12BC 0020               1581          MOVE.B  #$20,(A1)
00001F20  7201                    1582          MOVE.L  #1,D1   ;space between held data and input
00001F22  7001                    1583          MOVE.L  #1,D0
00001F24  4E4F                    1584          TRAP    #15
00001F26                          1585  
00001F26                          1586          
00001F26                          1587          *-----Enter Input-------*
00001F26  4283                    1588          CLR.L   D3
00001F28  7C1C                    1589          MOVE.L  #28,D6
00001F2A  43F8 3000               1590          LEA     BUFFER,A1   ;set up storage for command
00001F2E  103C 0002               1591          MOVE.B  #2,D0       ;load input trap call
00001F32  4E4F                    1592          TRAP    #15
00001F34  0C11 002E               1593          CMP.B   #$2E,(A1)
00001F38  6700 003C               1594          BEQ     ENDLP
00001F3C  0C11 0000               1595          CMP.B   #$00,(A1)
00001F40  6700 002E               1596          BEQ     ENTERL
00001F44                          1597          
00001F44                          1598  PARSELOOPL:
00001F44  0C11 0000               1599          CMP.B   #$00,(A1)
00001F48  6700 0024               1600          BEQ     ENDPARSEL        
00001F4C  0C11 0040               1601          CMP.B   #$40,(A1)
00001F50  6E00 000A               1602          BGT     HIGHHEXMML
00001F54  0411 0030               1603          SUBI.B  #$30,(A1)   ;get hex value
00001F58  6000 0006               1604          BRA     NEXTMMSTEPL
00001F5C  0411 0037               1605  HIGHHEXMML: SUBI.B  #$37,(A1)  ;get hex value
00001F60                          1606  NEXTMMSTEPL:
00001F60  1411                    1607          MOVE.B  (A1),D2
00001F62  EDBA                    1608          ROL.L   D6,D2
00001F64  5986                    1609          SUBI.L  #4,D6
00001F66  5289                    1610          ADD.L   #1,A1
00001F68  D682                    1611          ADD.L   D2,D3   ;total byte stored in D3
00001F6A  4282                    1612          CLR.L   D2      ;clear for next rotate
00001F6C  60D6                    1613          BRA     PARSELOOPL
00001F6E                          1614  ENDPARSEL:
00001F6E  2883                    1615          MOVE.L  D3,(A4)   ;commit memory change 
00001F70  588C                    1616  ENTERL:  ADD.L   #4,A4   ;increment address
00001F72  6000 FF00               1617          BRA     MODIFYLOOPL
00001F76                          1618  
00001F76                          1619  
00001F76  6000 F17E               1620  ENDLP:  BRA RESTORE
00001F7A                          1621          
00001F7A                          1622          
00001F7A                          1623  *--------------------------------------------------------------------------------------*
00001F7A                          1624  
00001F7A                          1625  BF:    
00001F7A  5289                    1626         ADD.L    #1,A1   ;first byte of data
00001F7C  2649                    1627         MOVE.L   A1,A3   ;for end ptr
00001F7E                          1628  BFGETENDDATA:
00001F7E  0C1B 0020               1629          CMP.B   #$20,(A3)+
00001F82  6700 0004               1630          BEQ     BFNEXTADDR
00001F86  60F6                    1631          BRA     BFGETENDDATA
00001F88                          1632  BFNEXTADDR:
00001F88  2449                    1633          MOVE.L  A1,A2   ;for subroutine
00001F8A  538B                    1634          SUB.L   #1,A3   ;off by one error
00001F8C  4EB9 00002780           1635          JSR     ASCII_ADDRESS
00001F92  2F05                    1636          MOVE.L  D5,-(SP)    ;save data on the stack
00001F94                          1637          
00001F94  528B                    1638          ADD.L   #1,A3   ;inc end ptr to first byte of address
00001F96  244B                    1639          MOVE.L  A3,A2   ;set start ptr
00001F98                          1640  BFGETENDADDRONE:
00001F98  0C1B 0020               1641          CMP.B   #$20,(A3)+
00001F9C  6700 0004               1642          BEQ     BFNEXTADDRTWO
00001FA0  60F6                    1643          BRA     BFGETENDADDRONE
00001FA2                          1644          
00001FA2                          1645  BFNEXTADDRTWO:
00001FA2  538B                    1646          SUB.L   #1,A3   ;off by one error
00001FA4  4EB9 00002780           1647          JSR     ASCII_ADDRESS   ;convert address to hex
00001FAA  2A45                    1648          MOVE.L  D5,A5       ;store address 1 in A5
00001FAC  8AFC 0002               1649          DIVU    #2,D5
00001FB0  4845                    1650          SWAP    D5
00001FB2  BA7C 0000               1651          CMP.W   #$00,D5
00001FB6  6600 077C               1652          BNE     ERRORSR
00001FBA                          1653          
00001FBA  528B                    1654          ADD.L   #1,A3   ;inc end ptr to first byte of address
00001FBC  244B                    1655          MOVE.L  A3,A2   ;set start ptr
00001FBE                          1656  BFGETLASTEND:
00001FBE  0C1B 0000               1657          CMP.B   #$00,(A3)+
00001FC2  6700 0004               1658          BEQ     STOREDATA
00001FC6  60F6                    1659          BRA     BFGETLASTEND
00001FC8                          1660          
00001FC8                          1661  STOREDATA:
00001FC8  538B                    1662          SUB.L   #1,A3   ;off by one error
00001FCA  4EB9 00002780           1663          JSR     ASCII_ADDRESS
00001FD0  2C45                    1664          MOVE.L  D5,A6   ;end address in A6
00001FD2  8AFC 0002               1665          DIVU    #2,D5
00001FD6  4845                    1666          SWAP    D5
00001FD8  BA7C 0000               1667          CMP.W   #$00,D5
00001FDC  6600 0756               1668          BNE     ERRORSR
00001FE0  2A1F                    1669          MOVE.L  (SP)+,D5
00001FE2                          1670          
00001FE2                          1671  DATALOOP:
00001FE2  BDCD                    1672          CMP.L   A5,A6
00001FE4  6D00 0006               1673          BLT     ENDBF
00001FE8  3AC5                    1674          MOVE.W  D5,(A5)+
00001FEA  60F6                    1675          BRA     DATALOOP
00001FEC                          1676  
00001FEC  6000 F108               1677  ENDBF:  BRA RESTORE
00001FF0                          1678  *--------------------------------------------------------------------------------------*
00001FF0                          1679  
00001FF0  5289                    1680  BMOV:   ADD.L   #1,A1   ;get to start of first address
00001FF2  2449                    1681          MOVE.L  A1,A2   ;set up start ptr
00001FF4  264A                    1682          MOVE.L  A2,A3   ;set up end ptr
00001FF6                          1683          
00001FF6                          1684  FIRSTADDRESS:
00001FF6  0C1B 0020               1685          CMP.B #$20,(A3)+
00001FFA  6700 0004               1686          BEQ     COMPUTEFIRSTADD
00001FFE  60F6                    1687          BRA     FIRSTADDRESS
00002000                          1688          
00002000                          1689  COMPUTEFIRSTADD:
00002000  538B                    1690          SUB.L   #1,A3   ;off by one error
00002002  4EB9 00002780           1691          JSR     ASCII_ADDRESS
00002008  2045                    1692          MOVE.L  D5,A0   ; save 1st address
0000200A                          1693          
0000200A  528B                    1694          ADD.L   #1,A3
0000200C  244B                    1695          MOVE.L  A3,A2
0000200E                          1696  SECONDADDRESS:
0000200E  0C1B 0020               1697          CMP.B   #$20,(A3)+
00002012  6700 0004               1698          BEQ     COMPUTESECONDADDRESS
00002016  60F6                    1699          BRA     SECONDADDRESS
00002018                          1700          
00002018                          1701  COMPUTESECONDADDRESS:
00002018  538B                    1702          SUB.L   #1,A3   ;off by one error
0000201A  4EB9 00002780           1703          JSR     ASCII_ADDRESS
00002020  2845                    1704          MOVE.L  D5,A4   ;save 2nd address
00002022                          1705  
00002022  528B                    1706          ADD.L   #1,A3
00002024  244B                    1707          MOVE.L  A3,A2
00002026                          1708  THIRDADDRESS:
00002026  0C1B 0020               1709          CMP.B   #$20,(A3)+
0000202A  6700 0004               1710          BEQ     COMPUTETHIRDADDRESS
0000202E  60F6                    1711          BRA     THIRDADDRESS
00002030                          1712          
00002030                          1713  COMPUTETHIRDADDRESS:
00002030  538B                    1714          SUB.L   #1,A3
00002032  4EB9 00002780           1715          JSR     ASCII_ADDRESS
00002038  2A45                    1716          MOVE.L  D5,A5   ;save 3rd address
0000203A                          1717          
0000203A  528B                    1718          ADD.L   #1,A3
0000203C  244B                    1719          MOVE.L  A3,A2
0000203E                          1720  FOURTHADDRESS:
0000203E  0C1B 0000               1721          CMP.B   #$00,(A3)+
00002042  6700 0004               1722          BEQ     COMPUTEFOURTHADDRESS
00002046  60F6                    1723          BRA     FOURTHADDRESS
00002048                          1724          
00002048                          1725  COMPUTEFOURTHADDRESS:
00002048  538B                    1726          SUB.L   #1,A3
0000204A  4EB9 00002780           1727          JSR     ASCII_ADDRESS
00002050  2C45                    1728          MOVE.L  D5,A6   ;save 3rd address
00002052                          1729          
00002052                          1730          
00002052                          1731  
00002052                          1732          *Check for matching dimensions*
00002052  2008                    1733          MOVE.L  A0,D0
00002054  220C                    1734          MOVE.L  A4,D1
00002056  2A0D                    1735          MOVE.L  A5,D5
00002058  2C0E                    1736          MOVE.L  A6,D6
0000205A  9280                    1737          SUB.L   D0,D1
0000205C  9C85                    1738          SUB.L   D5,D6
0000205E  BC81                    1739          CMP.L   D1,D6
00002060  6600 06D2               1740          BNE     ERRORSR
00002064  B9C8                    1741          CMP.L   A0,A4
00002066  6D00 06CC               1742          BLT     ERRORSR
0000206A  BDCD                    1743          CMP.L   A5,A6
0000206C  6D00 06C6               1744          BLT     ERRORSR
00002070                          1745  
00002070                          1746  DATATRANSFER:
00002070  B9C8                    1747          CMP.L   A0,A4
00002072  6D00 0006               1748          BLT     BMOVDONE
00002076  1AD8                    1749          MOVE.B  (A0)+,(A5)+
00002078  60F6                    1750          BRA     DATATRANSFER
0000207A                          1751          
0000207A                          1752  
0000207A                          1753  
0000207A                          1754  BMOVDONE:
0000207A  6000 F07A               1755          BRA RESTORE
0000207E                          1756  
0000207E                          1757  *--------------------------------------------------------------------------------------*
0000207E                          1758  
0000207E                          1759  BTST:   
0000207E  5289                    1760         ADD.L    #1,A1   ;first byte of data
00002080  2649                    1761         MOVE.L   A1,A3   ;for end ptr
00002082                          1762  BTSTGETENDDATA:
00002082  0C1B 0020               1763          CMP.B   #$20,(A3)+
00002086  6700 0004               1764          BEQ     BTSTNEXTADDR
0000208A  60F6                    1765          BRA     BTSTGETENDDATA
0000208C                          1766  BTSTNEXTADDR:
0000208C  2449                    1767          MOVE.L  A1,A2   ;for subroutine
0000208E  538B                    1768          SUB.L   #1,A3   ;off by one error
00002090  4EB9 00002780           1769          JSR     ASCII_ADDRESS
00002096  2F05                    1770          MOVE.L  D5,-(SP)    ;save data on the stack
00002098                          1771          
00002098  528B                    1772          ADD.L   #1,A3   ;inc end ptr to first byte of address
0000209A  244B                    1773          MOVE.L  A3,A2   ;set start ptr
0000209C                          1774  BTSTGETENDADDRONE:
0000209C  0C1B 0020               1775          CMP.B   #$20,(A3)+
000020A0  6700 0004               1776          BEQ     BTSTNEXTADDRTWO
000020A4  60F6                    1777          BRA     BTSTGETENDADDRONE
000020A6                          1778          
000020A6                          1779  BTSTNEXTADDRTWO:
000020A6  538B                    1780          SUB.L   #1,A3   ;off by one error
000020A8  4EB9 00002780           1781          JSR     ASCII_ADDRESS   ;convert address to hex
000020AE  2A45                    1782          MOVE.L  D5,A5       ;store address 1 in A5
000020B0  2845                    1783          MOVE.L  D5,A4       ;for second run through
000020B2                          1784                
000020B2  528B                    1785          ADD.L   #1,A3   ;inc end ptr to first byte of address
000020B4  244B                    1786          MOVE.L  A3,A2   ;set start ptr
000020B6                          1787  BTSTGETLASTEND:
000020B6  0C1B 0000               1788          CMP.B   #$00,(A3)+
000020BA  6700 0004               1789          BEQ     STOREDATABTST
000020BE  60F6                    1790          BRA     BTSTGETLASTEND
000020C0                          1791  
000020C0                          1792  
000020C0                          1793  STOREDATABTST:
000020C0  538B                    1794          SUB.L   #1,A3   ;off by one error
000020C2  4EB9 00002780           1795          JSR     ASCII_ADDRESS
000020C8  2C45                    1796          MOVE.L  D5,A6   ;end address in A6
000020CA  2A1F                    1797          MOVE.L  (SP)+,D5
000020CC                          1798          
000020CC                          1799  BTSTDATALOOP:
000020CC  BDCD                    1800          CMP.L   A5,A6
000020CE  6D00 0006               1801          BLT     READ
000020D2  1AC5                    1802          MOVE.B  D5,(A5)+
000020D4  60F6                    1803          BRA     BTSTDATALOOP
000020D6                          1804  
000020D6                          1805  
000020D6                          1806  READ:
000020D6  BDCC                    1807          CMP.L   A4,A6
000020D8  6D00 006C               1808          BLT     COMPLETE
000020DC  BA1C                    1809          CMP.B   (A4)+,D5
000020DE  6600 0004               1810          BNE     FAIL
000020E2  60F2                    1811          BRA     READ
000020E4                          1812          
000020E4                          1813  FAIL:
000020E4  43F8 37E4               1814          LEA     BTST4,A1
000020E8  720B                    1815          MOVE.L  #11,D1
000020EA  7000                    1816          MOVE.L  #0,D0
000020EC  4E4F                    1817          TRAP    #15
000020EE                          1818          
000020EE  43F8 37AD               1819          LEA     BTST1,A1
000020F2  7001                    1820          MOVE.L  #1,D0
000020F4  7214                    1821          MOVE.L  #20,D1
000020F6  4E4F                    1822          TRAP    #15
000020F8                          1823          
000020F8  1605                    1824          MOVE.B  D5,D3   ;for subroutine
000020FA  4EB9 000027C0           1825          JSR     HEXTOASCII
00002100  224A                    1826          MOVE.L     A2,A1
00002102  7000                    1827          MOVE.L  #0,D0
00002104  97CA                    1828          SUBA.L  A2,A3   ;number of bytes
00002106  220B                    1829          MOVE.L  A3,D1
00002108  4E4F                    1830          TRAP    #15
0000210A                          1831          
0000210A                          1832          
0000210A  43F8 37C1               1833          LEA     BTST2,A1
0000210E  7001                    1834          MOVE.L  #1,D0
00002110  7211                    1835          MOVE.L  #17,D1
00002112  4E4F                    1836          TRAP    #15
00002114                          1837          
00002114                          1838          
00002114  538C                    1839          SUB.L   #1,A4   ;go back to address that failed
00002116  1614                    1840          MOVE.B  (A4),D3
00002118  4EB9 000027C0           1841          JSR     HEXTOASCII  ;convert for output
0000211E  224A                    1842          MOVE.L     A2,A1
00002120  7000                    1843          MOVE.L  #0,D0
00002122  97CA                    1844          SUBA.L  A2,A3   ;number of bytes
00002124  220B                    1845          MOVE.L  A3,D1
00002126  4E4F                    1846          TRAP    #15
00002128                          1847          
00002128  43F8 37EF               1848          LEA     BTST5,A1
0000212C  721B                    1849          MOVE.L  #27,D1
0000212E  103C 0001               1850          MOVE.B  #1,D0
00002132  4E4F                    1851          TRAP    #15
00002134  260C                    1852          MOVE.L  A4,D3
00002136  4EB9 000027C0           1853          JSR     HEXTOASCII
0000213C  224A                    1854          MOVE.L     A2,A1
0000213E  7000                    1855          MOVE.L  #0,D0
00002140  97CA                    1856          SUBA.L  A2,A3   ;number of bytes
00002142  220B                    1857          MOVE.L  A3,D1
00002144  4E4F                    1858          TRAP    #15
00002146                          1859  
00002146                          1860  
00002146                          1861          
00002146                          1862  COMPLETE:
00002146                          1863  
00002146  43F8 37D2               1864          LEA     BTST3,A1
0000214A  7212                    1865          MOVE.L  #18,D1
0000214C  7000                    1866          MOVE.L  #0,D0
0000214E  4E4F                    1867          TRAP    #15
00002150  6000 EFA4               1868          BRA RESTORE
00002154                          1869  
00002154                          1870  *--------------------------------------------------------------------------------------*
00002154                          1871  
00002154                          1872  BSCH:   
00002154  5289                    1873          ADD.L   #1,A1   ;start of data
00002156  2449                    1874          MOVE.L  A1,A2   ;set up bac ptr
00002158                          1875          
00002158                          1876  BSCHENDDATA:
00002158  0C1A 0020               1877          CMP.B   #$20,(A2)+
0000215C  6700 0004               1878          BEQ     BSCHFIRSTADD
00002160  60F6                    1879          BRA     BSCHENDDATA
00002162                          1880  
00002162                          1881  
00002162                          1882  BSCHFIRSTADD:
00002162  538A                    1883          SUB.L   #1,A2
00002164  264A                    1884          MOVE.L  A2,A3
00002166  2449                    1885          MOVE.L  A1,A2
00002168  4EB9 00002780           1886          JSR     ASCII_ADDRESS
0000216E  97C9                    1887          SUB.L   A1,A3   ;see how many bytes
00002170  2C0B                    1888          MOVE.L  A3,D6   ;store byte/word/long in D6   
00002172  528A                    1889          ADD.L   #1,A2   ;set up for start of next address     
00002174  264A                    1890          MOVE.L  A2,A3   ;set up for end ptr
00002176  2F05                    1891          MOVE.L  D5,-(SP)    ;save data to stack
00002178                          1892          
00002178                          1893          
00002178                          1894  BSCHFADDEND:
00002178  0C1B 0020               1895          CMP.B   #$20,(A3)+
0000217C  6700 0004               1896          BEQ     BSCHSECONDADD
00002180  60F6                    1897          BRA     BSCHFADDEND
00002182                          1898          
00002182                          1899          
00002182                          1900  BSCHSECONDADD:
00002182  538B                    1901          SUB.L   #1,A3   ;off by one
00002184  4EB9 00002780           1902          JSR     ASCII_ADDRESS
0000218A  2A45                    1903          MOVE.L  D5,A5   ;first address destination
0000218C  528B                    1904          ADD.L   #1,A3   ;start it at next address
0000218E  244B                    1905          MOVE.L  A3,A2   ; set up for next address
00002190                          1906          
00002190                          1907          
00002190                          1908  BSCHSECONDFIND:
00002190  0C1B 0000               1909          CMP.B   #$00,(A3)+
00002194  6700 0004               1910          BEQ     TESTOP
00002198  60F6                    1911          BRA     BSCHSECONDFIND
0000219A                          1912          
0000219A                          1913          
0000219A                          1914  TESTOP: 
0000219A  538B                    1915          SUB.L   #1,A3   ;off by one
0000219C  4EB9 00002780           1916          JSR     ASCII_ADDRESS
000021A2  2C45                    1917          MOVE.L  D5,A6   ;end address at A6
000021A4  2A1F                    1918          MOVE.L  (SP)+,D5    ;restore data
000021A6  BC3C 0002               1919          CMP.B   #2,D6
000021AA  6700 0016               1920          BEQ     BYTEBSCH
000021AE  BC3C 0004               1921          CMP.B   #4,D6
000021B2  6700 001C               1922          BEQ     WORDBSCH
000021B6  BC3C 0008               1923          CMP.B   #8,D6
000021BA  6700 0022               1924          BEQ     LONGBSCH
000021BE  6000 0574               1925          BRA     ERRORSR
000021C2                          1926          
000021C2                          1927  BYTEBSCH:
000021C2  BDCD                    1928          CMP.L   A5,A6
000021C4  6D00 0070               1929          BLT     ENDBSCH
000021C8  BA1D                    1930          CMP.B   (A5)+,D5
000021CA  6700 0020               1931          BEQ     FOUNDB
000021CE  60F2                    1932          BRA     BYTEBSCH
000021D0                          1933  
000021D0                          1934  WORDBSCH:
000021D0  BDCD                    1935          CMP.L   A5,A6
000021D2  6D00 0062               1936          BLT     ENDBSCH
000021D6  BA5D                    1937          CMP.W   (A5)+,D5
000021D8  6700 001A               1938          BEQ     FOUNDW
000021DC  60F2                    1939          BRA     WORDBSCH
000021DE                          1940  
000021DE                          1941  LONGBSCH:
000021DE  BDCD                    1942          CMP.L   A5,A6
000021E0  6D00 0054               1943          BLT     ENDBSCH
000021E4  BA9D                    1944          CMP.L   (A5)+,D5
000021E6  6700 0014               1945          BEQ     FOUNDL
000021EA  60F2                    1946          BRA     LONGBSCH
000021EC                          1947  
000021EC                          1948  
000021EC                          1949  
000021EC                          1950  FOUNDB:
000021EC  538D                    1951          SUB.L   #1,A5
000021EE  1615                    1952          MOVE.B  (A5),D3
000021F0  6000 000E               1953          BRA     SUCCESSTEXT
000021F4                          1954  FOUNDW:
000021F4  558D                    1955          SUB.L   #2,A5
000021F6  3615                    1956          MOVE.W  (A5),D3
000021F8  6000 0006               1957          BRA     SUCCESSTEXT
000021FC                          1958  FOUNDL:
000021FC  598D                    1959          SUB.L   #4,A5
000021FE  2615                    1960          MOVE.L  (A5),D3
00002200                          1961          
00002200                          1962  SUCCESSTEXT:
00002200  43F8 380A               1963          LEA BSCH1,A1
00002204  7206                    1964          MOVE.L  #6,D1
00002206  7001                    1965          MOVE.L  #1,D0
00002208  4E4F                    1966          TRAP    #15
0000220A                          1967  
0000220A  4EB9 000027C0           1968          JSR     HEXTOASCII
00002210  224A                    1969          MOVE.L  A2,A1
00002212  97CA                    1970          SUB.L   A2,A3
00002214  220B                    1971          MOVE.L  A3,D1   ;how many bytes
00002216  7000                    1972          MOVE.L  #0,D0
00002218  4E4F                    1973          TRAP    #15
0000221A                          1974          
0000221A  43F8 3810               1975          LEA BSCH2,A1
0000221E  7212                    1976          MOVE.L  #18,D1
00002220  7001                    1977          MOVE.L  #1,D0
00002222  4E4F                    1978          TRAP    #15
00002224                          1979          
00002224  260D                    1980          MOVE.L  A5,D3
00002226  4EB9 000027C0           1981          JSR     HEXTOASCII
0000222C  224A                    1982          MOVE.L  A2,A1
0000222E  97CA                    1983          SUB.L   A2,A3
00002230  220B                    1984          MOVE.L  A3,D1   ;how many bytes
00002232  7000                    1985          MOVE.L  #0,D0
00002234  4E4F                    1986          TRAP    #15
00002236                          1987  
00002236                          1988          
00002236                          1989  ENDBSCH:        
00002236  6000 EEBE               1990          BRA RESTORE
0000223A                          1991  
0000223A                          1992  *--------------------------------------------------------------------------------------*
0000223A                          1993  
0000223A                          1994  GO:    
0000223A  2449                    1995          MOVE.L  A1,A2   ;setup for hex conversion
0000223C  264A                    1996          MOVE.L  A2,A3   
0000223E                          1997  GGETEND:
0000223E  0C1B 0000               1998          CMP.B   #$00,(A3)+
00002242  6700 0004               1999          BEQ     EXECUTE
00002246  60F6                    2000          BRA     GGETEND
00002248                          2001          
00002248                          2002  EXECUTE:
00002248  538B                    2003          SUB.L   #1,A3   ;off by one error
0000224A  4EB9 00002780           2004          JSR     ASCII_ADDRESS
00002250  2045                    2005          MOVE.L  D5,A0   
00002252  4E90                    2006          JSR     (A0)    ;go to program
00002254                          2007          **NOTE: THE PROGRAM MUST HAVE RTS OR CONTROL WILL NOT BE RETURNED BACK TO MONITOR441!!!**
00002254  6000 EEA0               2008          BRA RESTORE
00002258                          2009  
00002258                          2010  *--------------------------------------------------------------------------------------*
00002258                          2011  
00002258                          2012  DF:    *Registers have already been saved to STACK, just need to pop them off first*
00002258                          2013          *Stack looks like this*
00002258                          2014          
00002258                          2015          *-------------*
00002258                          2016          *|D0-D7/A0-A6|*
00002258                          2017          *|     USP   |*
00002258                          2018          *|     SR    |*
00002258                          2019          *|     SSP   |*
00002258                          2020          *|     PC    |*
00002258                          2021          *-------------*
00002258                          2022          *I should've used loops for efficiency but runtime is not a design constraint*
00002258                          2023          *Maybe fix this in the future?*
00002258                          2024          
00002258                          2025            *----------D0-----------*
00002258  43F8 3833               2026         LEA      RD0,A1
0000225C  7204                    2027         MOVE.L   #4,D1
0000225E  7001                    2028         MOVE.L   #1,D0
00002260  4E4F                    2029         TRAP     #15
00002262  261F                    2030         MOVE.L   (SP)+,D3    
00002264  4EB9 000027C0           2031         JSR      HEXTOASCII
0000226A  224A                    2032         MOVE.L   A2,A1
0000226C  95CB                    2033         SUB.L    A3,A2
0000226E  240A                    2034         MOVE.L   A2,D2
00002270  B4BC FFFFFFF8           2035         CMP.L    #-8,D2
00002276  6700 0006               2036         BEQ      D0DONTWORRY
0000227A                          2037  D0ACCOUNTFORZEROS:
0000227A  5082                    2038          ADDI.L  #8,D2
0000227C  93C2                    2039          SUB.L   D2,A1
0000227E                          2040  D0DONTWORRY:
0000227E  7000                    2041         MOVE.L   #0,D0
00002280  7208                    2042         MOVE.L   #8,D1
00002282  4E4F                    2043         TRAP     #15
00002284                          2044         
00002284                          2045             *----------D1-----------*
00002284  43F8 3837               2046         LEA      RD1,A1
00002288  7204                    2047         MOVE.L   #4,D1
0000228A  7001                    2048         MOVE.L   #1,D0
0000228C  4E4F                    2049         TRAP     #15
0000228E  261F                    2050         MOVE.L   (SP)+,D3    
00002290  4EB9 000027C0           2051         JSR      HEXTOASCII
00002296  224A                    2052         MOVE.L   A2,A1
00002298  95CB                    2053         SUB.L    A3,A2
0000229A  240A                    2054         MOVE.L   A2,D2
0000229C  B4BC FFFFFFF8           2055         CMP.L    #-8,D2
000022A2  6700 0006               2056         BEQ      D1DONTWORRY
000022A6                          2057  D1ACCOUNTFORZEROS:
000022A6  5082                    2058          ADDI.L  #8,D2
000022A8  93C2                    2059          SUB.L   D2,A1
000022AA                          2060  D1DONTWORRY:
000022AA  7000                    2061         MOVE.L   #0,D0
000022AC  7208                    2062         MOVE.L   #8,D1
000022AE  4E4F                    2063         TRAP     #15
000022B0                          2064         
000022B0                          2065             *----------D2-----------*
000022B0  43F8 383B               2066         LEA      RD2,A1
000022B4  7204                    2067         MOVE.L   #4,D1
000022B6  7001                    2068         MOVE.L   #1,D0
000022B8  4E4F                    2069         TRAP     #15
000022BA  261F                    2070         MOVE.L   (SP)+,D3   
000022BC  4EB9 000027C0           2071         JSR      HEXTOASCII
000022C2  224A                    2072         MOVE.L   A2,A1
000022C4  95CB                    2073         SUB.L    A3,A2
000022C6  240A                    2074         MOVE.L   A2,D2
000022C8  B4BC FFFFFFF8           2075         CMP.L    #-8,D2
000022CE  6700 0006               2076         BEQ      D2DONTWORRY
000022D2                          2077  D2ACCOUNTFORZEROS:
000022D2  5082                    2078          ADDI.L  #8,D2
000022D4  93C2                    2079          SUB.L   D2,A1
000022D6                          2080  D2DONTWORRY:
000022D6  7000                    2081         MOVE.L   #0,D0
000022D8  7208                    2082         MOVE.L   #8,D1
000022DA  4E4F                    2083         TRAP     #15
000022DC                          2084         
000022DC                          2085              *----------D3-----------*
000022DC  43F8 383F               2086         LEA      RD3,A1
000022E0  7204                    2087         MOVE.L   #4,D1
000022E2  7001                    2088         MOVE.L   #1,D0
000022E4  4E4F                    2089         TRAP     #15   
000022E6  261F                    2090         MOVE.L   (SP)+,D3  
000022E8  4EB9 000027C0           2091         JSR      HEXTOASCII
000022EE  224A                    2092         MOVE.L   A2,A1
000022F0  95CB                    2093         SUB.L    A3,A2
000022F2  240A                    2094         MOVE.L   A2,D2
000022F4  B4BC FFFFFFF8           2095         CMP.L    #-8,D2
000022FA  6700 0006               2096         BEQ      D3DONTWORRY
000022FE                          2097  D3ACCOUNTFORZEROS:
000022FE  5082                    2098          ADDI.L  #8,D2
00002300  93C2                    2099          SUB.L   D2,A1
00002302                          2100  D3DONTWORRY:
00002302  7000                    2101         MOVE.L   #0,D0
00002304  7208                    2102         MOVE.L   #8,D1
00002306  4E4F                    2103         TRAP     #15
00002308                          2104         
00002308                          2105              *----------D4-----------*
00002308  43F8 3843               2106         LEA      RD4,A1
0000230C  7204                    2107         MOVE.L   #4,D1
0000230E  7001                    2108         MOVE.L   #1,D0
00002310  4E4F                    2109         TRAP     #15
00002312  261F                    2110         MOVE.L   (SP)+,D3    
00002314  4EB9 000027C0           2111         JSR      HEXTOASCII
0000231A  224A                    2112         MOVE.L   A2,A1
0000231C  95CB                    2113         SUB.L    A3,A2
0000231E  240A                    2114         MOVE.L   A2,D2
00002320  B4BC FFFFFFF8           2115         CMP.L    #-8,D2
00002326  6700 0006               2116         BEQ      D4DONTWORRY
0000232A                          2117  D4ACCOUNTFORZEROS:
0000232A  5082                    2118          ADDI.L  #8,D2
0000232C  93C2                    2119          SUB.L   D2,A1
0000232E                          2120  D4DONTWORRY:
0000232E  7000                    2121         MOVE.L   #0,D0
00002330  7208                    2122         MOVE.L   #8,D1
00002332  4E4F                    2123         TRAP     #15
00002334                          2124         
00002334                          2125         *----------D5-----------*
00002334  43F8 3847               2126         LEA      RD5,A1
00002338  7204                    2127         MOVE.L   #4,D1
0000233A  7001                    2128         MOVE.L   #1,D0
0000233C  4E4F                    2129         TRAP     #15
0000233E  261F                    2130         MOVE.L   (SP)+,D3    
00002340  4EB9 000027C0           2131         JSR      HEXTOASCII
00002346  224A                    2132         MOVE.L   A2,A1
00002348  95CB                    2133         SUB.L    A3,A2
0000234A  240A                    2134         MOVE.L   A2,D2
0000234C  B4BC FFFFFFF8           2135         CMP.L    #-8,D2
00002352  6700 0006               2136         BEQ      D5DONTWORRY
00002356                          2137  D5ACCOUNTFORZEROS:
00002356  5082                    2138          ADDI.L  #8,D2
00002358  93C2                    2139          SUB.L   D2,A1
0000235A                          2140  D5DONTWORRY:
0000235A  7000                    2141         MOVE.L   #0,D0
0000235C  7208                    2142         MOVE.L   #8,D1
0000235E  4E4F                    2143         TRAP     #15
00002360                          2144  
00002360                          2145          *----------D6-----------*
00002360  43F8 384B               2146         LEA      RD6,A1
00002364  7204                    2147         MOVE.L   #4,D1
00002366  7001                    2148         MOVE.L   #1,D0
00002368  4E4F                    2149         TRAP     #15
0000236A  261F                    2150         MOVE.L   (SP)+,D3    
0000236C  4EB9 000027C0           2151         JSR      HEXTOASCII
00002372  224A                    2152         MOVE.L   A2,A1
00002374  95CB                    2153         SUB.L    A3,A2
00002376  240A                    2154         MOVE.L   A2,D2
00002378  B4BC FFFFFFF8           2155         CMP.L    #-8,D2
0000237E  6700 0006               2156         BEQ      D6DONTWORRY
00002382                          2157  D6ACCOUNTFORZEROS:
00002382  5082                    2158          ADDI.L  #8,D2
00002384  93C2                    2159          SUB.L   D2,A1
00002386                          2160  D6DONTWORRY:
00002386  7000                    2161         MOVE.L   #0,D0
00002388  7208                    2162         MOVE.L   #8,D1
0000238A  4E4F                    2163         TRAP     #15
0000238C                          2164         
0000238C                          2165           *----------D7-----------*
0000238C  43F8 384F               2166         LEA      RD7,A1
00002390  7204                    2167         MOVE.L   #4,D1
00002392  7001                    2168         MOVE.L   #1,D0
00002394  4E4F                    2169         TRAP     #15
00002396  261F                    2170         MOVE.L   (SP)+,D3    
00002398  4EB9 000027C0           2171         JSR      HEXTOASCII
0000239E  224A                    2172         MOVE.L   A2,A1
000023A0  95CB                    2173         SUB.L    A3,A2
000023A2  240A                    2174         MOVE.L   A2,D2
000023A4  B4BC FFFFFFF8           2175         CMP.L    #-8,D2
000023AA  6700 0006               2176         BEQ      D7DONTWORRY
000023AE                          2177  D7ACCOUNTFORZEROS:
000023AE  5082                    2178          ADDI.L  #8,D2
000023B0  93C2                    2179          SUB.L   D2,A1
000023B2                          2180  D7DONTWORRY:
000023B2  7000                    2181         MOVE.L   #0,D0
000023B4  7208                    2182         MOVE.L   #8,D1
000023B6  4E4F                    2183         TRAP     #15
000023B8                          2184  
000023B8                          2185     *----------A0-----------*
000023B8  43F8 3853               2186         LEA      RA0,A1
000023BC  7204                    2187         MOVE.L   #4,D1
000023BE  7001                    2188         MOVE.L   #1,D0
000023C0  4E4F                    2189         TRAP     #15
000023C2  261F                    2190         MOVE.L   (SP)+,D3    
000023C4  4EB9 000027C0           2191         JSR      HEXTOASCII
000023CA  224A                    2192         MOVE.L   A2,A1
000023CC  95CB                    2193         SUB.L    A3,A2
000023CE  240A                    2194         MOVE.L   A2,D2
000023D0  B4BC FFFFFFF8           2195         CMP.L    #-8,D2
000023D6  6700 0006               2196         BEQ      A0DONTWORRY
000023DA                          2197  A0ACCOUNTFORZEROS:
000023DA  5082                    2198          ADDI.L  #8,D2
000023DC  93C2                    2199          SUB.L   D2,A1
000023DE                          2200  A0DONTWORRY:
000023DE  7000                    2201         MOVE.L   #0,D0
000023E0  7208                    2202         MOVE.L   #8,D1
000023E2  4E4F                    2203         TRAP     #15
000023E4                          2204         
000023E4                          2205            *----------A1-----------*
000023E4  43F8 3857               2206         LEA      RA1,A1
000023E8  7204                    2207         MOVE.L   #4,D1
000023EA  7001                    2208         MOVE.L   #1,D0
000023EC  4E4F                    2209         TRAP     #15
000023EE  261F                    2210         MOVE.L   (SP)+,D3    
000023F0  4EB9 000027C0           2211         JSR      HEXTOASCII
000023F6  224A                    2212         MOVE.L   A2,A1
000023F8  95CB                    2213         SUB.L    A3,A2
000023FA  240A                    2214         MOVE.L   A2,D2
000023FC  B4BC FFFFFFF8           2215         CMP.L    #-8,D2
00002402  6700 0006               2216         BEQ      A1DONTWORRY
00002406                          2217  A1ACCOUNTFORZEROS:
00002406  5082                    2218          ADDI.L  #8,D2
00002408  93C2                    2219          SUB.L   D2,A1
0000240A                          2220  A1DONTWORRY:
0000240A  7000                    2221         MOVE.L   #0,D0
0000240C  7208                    2222         MOVE.L   #8,D1
0000240E  4E4F                    2223         TRAP     #15
00002410                          2224         
00002410                          2225          *----------A2-----------*
00002410  43F8 385B               2226         LEA      RA2,A1
00002414  7204                    2227         MOVE.L   #4,D1
00002416  7001                    2228         MOVE.L   #1,D0
00002418  4E4F                    2229         TRAP     #15
0000241A  261F                    2230         MOVE.L   (SP)+,D3    
0000241C  4EB9 000027C0           2231         JSR      HEXTOASCII
00002422  224A                    2232         MOVE.L   A2,A1
00002424  95CB                    2233         SUB.L    A3,A2
00002426  240A                    2234         MOVE.L   A2,D2
00002428  B4BC FFFFFFF8           2235         CMP.L    #-8,D2
0000242E  6700 0006               2236         BEQ      A2DONTWORRY
00002432                          2237  A2ACCOUNTFORZEROS:
00002432  5082                    2238          ADDI.L  #8,D2
00002434  93C2                    2239          SUB.L   D2,A1
00002436                          2240  A2DONTWORRY:
00002436  7000                    2241         MOVE.L   #0,D0
00002438  7208                    2242         MOVE.L   #8,D1
0000243A  4E4F                    2243         TRAP     #15
0000243C                          2244         
0000243C                          2245           *----------A3-----------*
0000243C  43F8 385F               2246         LEA      RA3,A1
00002440  7204                    2247         MOVE.L   #4,D1
00002442  7001                    2248         MOVE.L   #1,D0
00002444  4E4F                    2249         TRAP     #15
00002446  261F                    2250         MOVE.L   (SP)+,D3    
00002448  4EB9 000027C0           2251         JSR      HEXTOASCII
0000244E  224A                    2252         MOVE.L   A2,A1
00002450  95CB                    2253         SUB.L    A3,A2
00002452  240A                    2254         MOVE.L   A2,D2
00002454  B4BC FFFFFFF8           2255         CMP.L    #-8,D2
0000245A  6700 0006               2256         BEQ      A3DONTWORRY
0000245E                          2257  A3ACCOUNTFORZEROS:
0000245E  5082                    2258          ADDI.L  #8,D2
00002460  93C2                    2259          SUB.L   D2,A1
00002462                          2260  A3DONTWORRY:
00002462  7000                    2261         MOVE.L   #0,D0
00002464  7208                    2262         MOVE.L   #8,D1
00002466  4E4F                    2263         TRAP     #15
00002468                          2264         
00002468                          2265          *----------A4-----------*
00002468  43F8 385F               2266         LEA      RA3,A1
0000246C  7204                    2267         MOVE.L   #4,D1
0000246E  7001                    2268         MOVE.L   #1,D0
00002470  4E4F                    2269         TRAP     #15
00002472  261F                    2270         MOVE.L   (SP)+,D3    
00002474  4EB9 000027C0           2271         JSR      HEXTOASCII
0000247A  224A                    2272         MOVE.L   A2,A1
0000247C  95CB                    2273         SUB.L    A3,A2
0000247E  240A                    2274         MOVE.L   A2,D2
00002480  B4BC FFFFFFF8           2275         CMP.L    #-8,D2
00002486  6700 0006               2276         BEQ      A4DONTWORRY
0000248A                          2277  A4ACCOUNTFORZEROS:
0000248A  5082                    2278          ADDI.L  #8,D2
0000248C  93C2                    2279          SUB.L   D2,A1
0000248E                          2280  A4DONTWORRY:
0000248E  7000                    2281         MOVE.L   #0,D0
00002490  7208                    2282         MOVE.L   #8,D1
00002492  4E4F                    2283         TRAP     #15
00002494                          2284         
00002494                          2285         *----------A5-----------*
00002494  43F8 385F               2286         LEA      RA3,A1
00002498  7204                    2287         MOVE.L   #4,D1
0000249A  7001                    2288         MOVE.L   #1,D0
0000249C  4E4F                    2289         TRAP     #15
0000249E  261F                    2290         MOVE.L   (SP)+,D3    
000024A0  4EB9 000027C0           2291         JSR      HEXTOASCII
000024A6  224A                    2292         MOVE.L   A2,A1
000024A8  95CB                    2293         SUB.L    A3,A2
000024AA  240A                    2294         MOVE.L   A2,D2
000024AC  B4BC FFFFFFF8           2295         CMP.L    #-8,D2
000024B2  6700 0006               2296         BEQ      A5DONTWORRY
000024B6                          2297  A5ACCOUNTFORZEROS:
000024B6  5082                    2298          ADDI.L  #8,D2
000024B8  93C2                    2299          SUB.L   D2,A1
000024BA                          2300  A5DONTWORRY:
000024BA  7000                    2301         MOVE.L   #0,D0
000024BC  7208                    2302         MOVE.L   #8,D1
000024BE  4E4F                    2303         TRAP     #15
000024C0                          2304         
000024C0                          2305         *----------A6-----------*
000024C0  43F8 385F               2306         LEA      RA3,A1
000024C4  7204                    2307         MOVE.L   #4,D1
000024C6  7001                    2308         MOVE.L   #1,D0
000024C8  4E4F                    2309         TRAP     #15
000024CA  261F                    2310         MOVE.L   (SP)+,D3    
000024CC  4EB9 000027C0           2311         JSR      HEXTOASCII
000024D2  224A                    2312         MOVE.L   A2,A1
000024D4  95CB                    2313         SUB.L    A3,A2
000024D6  240A                    2314         MOVE.L   A2,D2
000024D8  B4BC FFFFFFF8           2315         CMP.L    #-8,D2
000024DE  6700 0006               2316         BEQ      A6DONTWORRY
000024E2                          2317  A6ACCOUNTFORZEROS:
000024E2  5082                    2318          ADDI.L  #8,D2
000024E4  93C2                    2319          SUB.L   D2,A1
000024E6                          2320  A6DONTWORRY:
000024E6  7000                    2321         MOVE.L   #0,D0
000024E8  7208                    2322         MOVE.L   #8,D1
000024EA  4E4F                    2323         TRAP     #15
000024EC                          2324       *-----HACK---*
000024EC  DFFC 0000003C           2325       ADD.L  #60,SP  ;should put stack in correct place
000024F2                          2326       
000024F2                          2327                *----------USP-----------*
000024F2  43F8 3876               2328         LEA      RUS,A1
000024F6  7204                    2329         MOVE.L   #4,D1
000024F8  7001                    2330         MOVE.L   #1,D0
000024FA  4E4F                    2331         TRAP     #15
000024FC  261F                    2332         MOVE.L   (SP)+,D3    
000024FE  4EB9 000027C0           2333         JSR      HEXTOASCII
00002504  224A                    2334         MOVE.L   A2,A1
00002506  95CB                    2335         SUB.L    A3,A2
00002508  240A                    2336         MOVE.L   A2,D2
0000250A  B4BC FFFFFFF8           2337         CMP.L    #-8,D2
00002510  6700 0006               2338         BEQ      USPDONTWORRY
00002514                          2339  USPACCOUNTFORZEROS:
00002514  5082                    2340          ADDI.L  #8,D2
00002516  93C2                    2341          SUB.L   D2,A1
00002518                          2342  USPDONTWORRY:
00002518  7000                    2343         MOVE.L   #0,D0
0000251A  7208                    2344         MOVE.L   #8,D1
0000251C  4E4F                    2345         TRAP     #15
0000251E                          2346  
0000251E                          2347                *----------SR-----------*
0000251E  43F8 387E               2348         LEA      RSR,A1
00002522  7204                    2349         MOVE.L   #4,D1
00002524  7001                    2350         MOVE.L   #1,D0
00002526  4E4F                    2351         TRAP     #15
00002528  361F                    2352         MOVE.W   (SP)+,D3
0000252A  3E03                    2353         MOVE.W   D3,D7   ;temp storage to restore before return    
0000252C  4EB9 000027C0           2354         JSR      HEXTOASCII
00002532  224A                    2355         MOVE.L   A2,A1
00002534  95CB                    2356         SUB.L    A3,A2
00002536  240A                    2357         MOVE.L   A2,D2
00002538  B4BC FFFFFFFC           2358         CMP.L    #-4,D2
0000253E  6700 0006               2359         BEQ      SRDONTWORRY
00002542                          2360  SRACCOUNTFORZEROS:
00002542  5882                    2361          ADDI.L  #4,D2
00002544  93C2                    2362          SUB.L   D2,A1
00002546                          2363  SRDONTWORRY:
00002546  7000                    2364         MOVE.L   #0,D0
00002548  7204                    2365         MOVE.L   #4,D1
0000254A  4E4F                    2366         TRAP     #15
0000254C                          2367         
0000254C                          2368      *----------SS/A7-----------*
0000254C  43F8 386F               2369         LEA      RSS,A1
00002550  7207                    2370         MOVE.L   #7,D1
00002552  7001                    2371         MOVE.L   #1,D0
00002554  4E4F                    2372         TRAP     #15
00002556  261F                    2373         MOVE.L   (SP)+,D3    
00002558  4EB9 000027C0           2374         JSR      HEXTOASCII
0000255E  224A                    2375         MOVE.L   A2,A1
00002560  95CB                    2376         SUB.L    A3,A2
00002562  240A                    2377         MOVE.L   A2,D2
00002564  B4BC FFFFFFF8           2378         CMP.L    #-8,D2
0000256A  6700 0006               2379         BEQ      SSDONTWORRY
0000256E                          2380  SSACCOUNTFORZEROS:
0000256E  5082                    2381          ADDI.L  #8,D2
00002570  93C2                    2382          SUB.L   D2,A1
00002572                          2383  SSDONTWORRY:
00002572  7000                    2384         MOVE.L   #0,D0
00002574  7208                    2385         MOVE.L   #8,D1
00002576  4E4F                    2386         TRAP     #15
00002578                          2387         
00002578                          2388      *----------PC-----------*
00002578  43F8 387A               2389         LEA      RPC,A1
0000257C  7204                    2390         MOVE.L   #4,D1
0000257E  7001                    2391         MOVE.L   #1,D0
00002580  4E4F                    2392         TRAP     #15
00002582  261F                    2393         MOVE.L   (SP)+,D3    
00002584  4EB9 000027C0           2394         JSR      HEXTOASCII
0000258A  224A                    2395         MOVE.L   A2,A1
0000258C  95CB                    2396         SUB.L    A3,A2
0000258E  240A                    2397         MOVE.L   A2,D2
00002590  B4BC FFFFFFF8           2398         CMP.L    #-8,D2
00002596  6700 0006               2399         BEQ      PCDONTWORRY
0000259A                          2400  PCACCOUNTFORZEROS:
0000259A  5082                    2401          ADDI.L  #8,D2
0000259C  93C2                    2402          SUB.L   D2,A1
0000259E                          2403  PCDONTWORRY:
0000259E  7000                    2404         MOVE.L   #0,D0
000025A0  7208                    2405         MOVE.L   #8,D1
000025A2  4E4F                    2406         TRAP     #15       
000025A4                          2407         
000025A4                          2408     *---DF HACK RESTORE---*
000025A4  3F07                    2409     MOVE.W   D7,-(SP)
000025A6  DFFC FFFFFFB8           2410     ADD.L    #-72,SP
000025AC  4CDF 7FFF               2411     MOVEM.L  (SP)+,D0-D7/A0-A6
000025B0  DFFC 0000000C           2412     ADD.L    #12,SP  ;go back to original value
000025B6  46DF                    2413     MOVE.W   (SP)+,SR
000025B8                          2414          
000025B8  6000 EAB6               2415         BRA SHELL
000025BC                          2416  
000025BC                          2417  *--------------------------------------------------------------------------------------*
000025BC                          2418  
000025BC                          2419  
000025BC                          2420  ************************************EXCEPTIONS!*****************************************
000025BC                          2421  *--------------------------------------------------------------------------------------*
000025BC                          2422  
000025BC                          2423  BERR:
000025BC  48E7 C070               2424          MOVEM.L A1-A3/D0-D1,-(SP)
000025C0  43F8 3882               2425          LEA     BERR_TEXT,A1
000025C4  700D                    2426          MOVE.L  #13,D0
000025C6  4E4F                    2427          TRAP    #15
000025C8  43F8 3973               2428          LEA     SSW,A1
000025CC  700E                    2429          MOVE.L  #14,D0
000025CE  4E4F                    2430          TRAP    #15
000025D0  362F 001C               2431          MOVE.W  (28,SP),D3
000025D4  4EB9 000027C0           2432          JSR     HEXTOASCII
000025DA  598B                    2433          SUB.L   #4,A3
000025DC  224B                    2434          MOVEA.L A3,A1
000025DE  7204                    2435          MOVE.L  #4,D1
000025E0  7000                    2436          MOVE.L  #0,D0
000025E2  4E4F                    2437          TRAP    #15
000025E4  43F8 3979               2438          LEA     BA,A1
000025E8  700E                    2439          MOVE.L  #14,D0
000025EA  4E4F                    2440          TRAP    #15
000025EC  262F 001E               2441          MOVE.L  (30,SP),D3
000025F0  4EB9 000027C0           2442          JSR     HEXTOASCII
000025F6  518B                    2443          SUB.L   #8,A3
000025F8  224B                    2444          MOVEA.L A3,A1
000025FA  7208                    2445          MOVE.L  #8,D1
000025FC  7000                    2446          MOVE.L  #0,D0
000025FE  4E4F                    2447          TRAP    #15
00002600  43F8 397E               2448          LEA     IR,A1
00002604  700E                    2449          MOVE.L  #14,D0
00002606  4E4F                    2450          TRAP    #15
00002608  362F 0022               2451          MOVE.W  (34,SP),D3
0000260C  4EB9 000027C0           2452          JSR     HEXTOASCII
00002612  598B                    2453          SUB.L   #4,A3
00002614  224B                    2454          MOVEA.L A3,A1
00002616  7204                    2455          MOVE.L  #4,D1
00002618  7000                    2456          MOVE.L  #0,D0
0000261A  4E4F                    2457          TRAP    #15
0000261C  4CDF 0E03               2458          MOVEM.L (SP)+,A1-A3/D0-D1
00002620  2E7C 01000000           2459          MOVE.L  #$01000000,SP   ;reset stack
00002626  6000 EA48               2460          BRA     SHELL
0000262A                          2461  
0000262A                          2462  AERR:
0000262A  48E7 CC70               2463          MOVEM.L A1-A3/D0-D1/D4-D5,-(SP)
0000262E  43F8 389A               2464          LEA     AERR_TEXT,A1
00002632  700D                    2465          MOVE.L  #13,D0
00002634  4E4F                    2466          TRAP    #15
00002636  43F8 3973               2467          LEA     SSW,A1
0000263A  700E                    2468          MOVE.L  #14,D0
0000263C  4E4F                    2469          TRAP    #15
0000263E  362F 001C               2470          MOVE.W  (28,SP),D3
00002642  4EB9 000027C0           2471          JSR     HEXTOASCII
00002648  598B                    2472          SUB.L   #4,A3
0000264A  224B                    2473          MOVEA.L A3,A1
0000264C  7204                    2474          MOVE.L  #4,D1
0000264E  7000                    2475          MOVE.L  #0,D0
00002650  4E4F                    2476          TRAP    #15
00002652  43F8 3979               2477          LEA     BA,A1
00002656  700E                    2478          MOVE.L  #14,D0
00002658  4E4F                    2479          TRAP    #15
0000265A  262F 001E               2480          MOVE.L  (30,SP),D3
0000265E  4EB9 000027C0           2481          JSR     HEXTOASCII
00002664  518B                    2482          SUB.L   #8,A3
00002666  224B                    2483          MOVEA.L A3,A1
00002668  7208                    2484          MOVE.L  #8,D1
0000266A  7000                    2485          MOVE.L  #0,D0
0000266C  4E4F                    2486          TRAP    #15
0000266E  43F8 397E               2487          LEA     IR,A1
00002672  700E                    2488          MOVE.L  #14,D0
00002674  4E4F                    2489          TRAP    #15
00002676  362F 0022               2490          MOVE.W  (34,SP),D3
0000267A  4EB9 000027C0           2491          JSR     HEXTOASCII
00002680  598B                    2492          SUB.L   #4,A3
00002682  224B                    2493          MOVEA.L A3,A1
00002684  7204                    2494          MOVE.L  #4,D1
00002686  7000                    2495          MOVE.L  #0,D0
00002688  4E4F                    2496          TRAP    #15
0000268A  4CDF 0E33               2497          MOVEM.L (SP)+,A1-A3/D0-D1/D4-D5
0000268E  2E7C 01000000           2498          MOVE.L  #$01000000,SP   ;reset stack
00002694  6000 E9DA               2499          BRA     SHELL
00002698                          2500  
00002698                          2501  IERR:
00002698  48E7 8040               2502      MOVEM.L A1/D0,-(SP)
0000269C  43F8 38B7               2503      LEA IERR_TEXT,A1
000026A0  700D                    2504      MOVE.L #13,D0
000026A2  4E4F                    2505      TRAP #15
000026A4  4CDF 0201               2506      MOVEM.L (SP)+,A1/D0
000026A8  2E7C 01000000           2507      MOVE.L #$01000000,SP
000026AE  6000 E9C0               2508      BRA SHELL
000026B2                          2509  
000026B2                          2510  PERR:
000026B2  48E7 8040               2511      MOVEM.L A1/D0,-(SP)
000026B6  43F8 38E0               2512      LEA PERR_TEXT,A1
000026BA  700D                    2513      MOVE.L #13,D0
000026BC  4E4F                    2514      TRAP #15
000026BE  4CDF 0201               2515      MOVEM.L (SP)+,A1/D0
000026C2  2E7C 01000000           2516      MOVE.L #$01000000,SP
000026C8  6000 E9A6               2517      BRA SHELL
000026CC                          2518      
000026CC                          2519  ZERR:
000026CC  48E7 8040               2520      MOVEM.L A1/D0,-(SP)
000026D0  43F8 38FE               2521      LEA ZERR_TEXT,A1
000026D4  700D                    2522      MOVE.L #13,D0
000026D6  4E4F                    2523      TRAP #15
000026D8  4CDF 0201               2524      MOVEM.L (SP)+,A1/D0
000026DC  2E7C 01000000           2525      MOVE.L #$01000000,SP
000026E2  6000 E98C               2526      BRA SHELL
000026E6                          2527  
000026E6                          2528  ALERR:
000026E6  48E7 8040               2529      MOVEM.L A1/D0,-(SP)
000026EA  43F8 3921               2530      LEA ALERR_TEXT,A1
000026EE  700D                    2531      MOVE.L #13,D0
000026F0  4E4F                    2532      TRAP #15
000026F2  4CDF 0201               2533      MOVEM.L (SP)+,A1/D0
000026F6  2E7C 01000000           2534      MOVE.L #$01000000,SP
000026FC  6000 E972               2535      BRA SHELL
00002700                          2536      
00002700                          2537  FLERR:
00002700  48E7 8040               2538      MOVEM.L A1/D0,-(SP)
00002704  43F8 393D               2539      LEA FLERR_TEXT,A1
00002708  700D                    2540      MOVE.L #13,D0
0000270A  4E4F                    2541      TRAP #15
0000270C  4CDF 0201               2542      MOVEM.L (SP)+,A1/D0
00002710  2E7C 01000000           2543      MOVE.L #$01000000,SP
00002716  6000 E958               2544      BRA SHELL
0000271A                          2545      
0000271A                          2546  CHKERR:
0000271A  48E7 8040               2547      MOVEM.L A1/D0,-(SP)
0000271E  43F8 3959               2548      LEA CHKERR_TEXT,A1
00002722  700D                    2549      MOVE.L #13,D0
00002724  4E4F                    2550      TRAP #15
00002726  4CDF 0201               2551      MOVEM.L (SP)+,A1/D0
0000272A  2E7C 01000000           2552      MOVE.L #$01000000,SP
00002730  6000 E93E               2553      BRA SHELL
00002734                          2554  
00002734                          2555  
00002734                          2556  
00002734                          2557  ****************************COMMON SUBROUTINES NEEDED**********************************
00002734                          2558  
00002734                          2559  
00002734                          2560  *--------------------------------------------------------------------------------------*
00002734  43F8 3768               2561  ERRORSR:        LEA   ERROR,A1    ;load message
00002738  323C 002C               2562                  MOVE.W  #44,D1
0000273C  7000                    2563                  MOVE.L  #0,D0
0000273E  4E4F                    2564                  TRAP    #15
00002740  6000 E9B4               2565                  BRA     RESTORE
00002744                          2566  *--------------------------------------------------------------------------------------*
00002744                          2567  ASCII_TO_BCD:   *Number passed via D3 byte size only(to be expected)*
00002744  B67C 0046               2568                  CMP #$46,D3
00002748  6EEA                    2569                  BGT ERRORSR
0000274A  B67C 0040               2570                  CMP #$40,D3
0000274E  6E00 000A               2571                  BGT UPPER
00002752  0483 00000030           2572                  SUBI.L  #$30,D3
00002758  4E75                    2573                  RTS
0000275A  0483 00000031           2574  UPPER:          SUBI.L  #$31,D3 ;If ASCII number is A-F
00002760  4E75                    2575                  RTS
00002762                          2576  *--------------------------------------------------------------------------------------*
00002762                          2577  
00002762                          2578  BCD_TO_HEX:     *Number passed via D3 accepts BYTE ONLY*
00002762  2803                    2579                  MOVE.L  D3,D4   
00002764  2A03                    2580                  MOVE.L  D3,D5
00002766  0284 000000F0           2581                  ANDI.L  #240,D4 ;upper byte
0000276C  0285 0000000F           2582                  ANDI.L  #15,D5  ;lower byte
00002772  E89C                    2583                  ROR.L   #4,D4   ;get bits into correct place
00002774  C8FC 000A               2584                  MULU    #10,D4  ;multiply by its tens place
00002778  4283                    2585                  CLR.L   D3
0000277A  D684                    2586                  ADD.L   D4,D3
0000277C  D685                    2587                  ADD.L   D5,D3
0000277E  4E75                    2588                  RTS
00002780                          2589  *--------------------------------------------------------------------------------------*                
00002780                          2590  ASCII_ADDRESS:   *Address to be converted from ascii to hex passed through A2 and A3*
00002780                          2591                   *Returned in D5                                                    *
00002780  4283                    2592                  CLR.L   D3
00002782  4285                    2593                  CLR.L   D5
00002784  220A                    2594                  MOVE.L   A2,D1
00002786  200B                    2595                  MOVE.L   A3,D0
00002788  9081                    2596                  SUB.L   D1,D0   ;store the difference in D0
0000278A  7800                    2597                  MOVE.L  #0,D4   ;set up 10's place counter
0000278C  5380                    2598                  SUBI.L  #1,D0
0000278E  B07C 0000               2599  PLACECOUNTER:   CMP     #0,D0
00002792  6700 0008               2600                  BEQ     CONVERTADDRESS
00002796  5884                    2601                  ADDI.L  #4,D4
00002798  5380                    2602                  SUBI.L  #1,D0
0000279A  60F2                    2603                  BRA     PLACECOUNTER
0000279C  B6CA                    2604  CONVERTADDRESS  CMP     A2,A3
0000279E  6700 001E               2605                  BEQ     ADDRESSDONE
000027A2  4283                    2606                  CLR.L   D3
000027A4  161A                    2607                  MOVE.B  (A2)+,D3
000027A6  48E7 EC30               2608                  MOVEM.L A2-A3/D0-D2/D4-D5,-(SP)   ;so regs dont get destroyed
000027AA  4EB8 2744               2609                  JSR     ASCII_TO_BCD
000027AE  4EB8 2762               2610                  JSR     BCD_TO_HEX
000027B2  4CDF 0C37               2611                  MOVEM.L (SP)+,A2-A3/D0-D2/D4-D5
000027B6  E9BB                    2612                  ROL.L     D4,D3
000027B8  5984                    2613                  SUBI.L  #4,D4
000027BA  DA83                    2614                  ADD.L     D3,D5   ;get total
000027BC  60DE                    2615                  BRA     CONVERTADDRESS
000027BE  4E75                    2616  ADDRESSDONE     RTS
000027C0                          2617  
000027C0                          2618  *--------------------------------------------------------------------------------------*
000027C0                          2619  HEXTOASCII: *Result returned in address buffer from A2 to A3, HEX number passed*
000027C0                          2620              *through D3*
000027C0  4284                    2621              CLR.L   D4
000027C2  4285                    2622              CLR.L   D5
000027C4  247C 00003A00           2623              MOVE.L  #$3A00,A2
000027CA  267C 00003A32           2624              MOVE.L  #$3A32,A3
000027D0                          2625  KEEP_CONVERTING:
000027D0  1803                    2626              MOVE.B  D3,D4  
000027D2  1A03                    2627              MOVE.B  D3,D5 
000027D4  E08B                    2628              LSR.L   #8,D3   ;prepare for next byte
000027D6  0284 0000000F           2629              ANDI.L  #15,D4   ;get lower byte
000027DC  0285 000000F0           2630              ANDI.L  #240,D5 ;get upper byte'
000027E2  E85D                    2631              ROR     #4,D5   ;move D5 into position
000027E4  B83C 0009               2632              CMP.B     #$9,D4
000027E8  6E00 000C               2633              BGT     A_TO_F
000027EC  0684 00000030           2634              ADDI.L  #$30,D4
000027F2  6000 0008               2635              BRA     NEXTHEX
000027F6  0684 00000037           2636  A_TO_F:     ADDI.L  #$37,D4
000027FC  BA3C 0009               2637  NEXTHEX:    CMP.B     #$9,D5
00002800  6E00 000C               2638              BGT     A_TO_F2
00002804  0685 00000030           2639              ADDI.L  #$30,D5
0000280A  6000 0008               2640              BRA     PUTBUFFER
0000280E  0685 00000037           2641  A_TO_F2:    ADDI.L  #$37,D5
00002814  1704                    2642  PUTBUFFER:  MOVE.B  D4,-(A3)
00002816  1705                    2643              MOVE.B  D5,-(A3)
00002818  B6CA                    2644              CMP      A2,A3
0000281A  66B4                    2645              BNE      KEEP_CONVERTING
0000281C  0C12 0030               2646  RID_ZEROS:  CMP.B   #$30,(A2)
00002820  6700 0006               2647              BEQ     ADD
00002824  6000 0006               2648              BRA     HEXASCIIDONE
00002828  528A                    2649  ADD:        ADD.L   #1,A2   ;increment to find start of string
0000282A  60F0                    2650              BRA     RID_ZEROS
0000282C                          2651  HEXASCIIDONE:   
0000282C  267C 00003A32           2652              MOVE.L  #$3A32,A3    ;end of original number
00002832  B7CA                    2653              CMP.L   A2,A3
00002834  6700 0006               2654              BEQ     ZEROS
00002838  6000 0004               2655              BRA     NOTZEROS
0000283C  518A                    2656  ZEROS       SUB.L   #8,A2               
0000283E  4E75                    2657  NOTZEROS    RTS
00002840                          2658  *--------------------------------------------------------------------------------------*
00002840  43F8 3794               2659  UNKNOWNCMD:     LEA   ERROR1,A1    ;load message
00002844  323C 0015               2660                  MOVE.W  #21,D1
00002848  7000                    2661                  MOVE.L  #0,D0
0000284A  4E4F                    2662                  TRAP    #15
0000284C  6000 E8A8               2663                  BRA     RESTORE
00002850                          2664  
00002850                          2665  
00002850                          2666  NEXT:   ;for debugging single commands
00002850                          2667              
00002850                          2668              
00002850                          2669              
00002850                          2670              
00002850                          2671  
00002850                          2672  
00002850                          2673         END    START        

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
A0ACCOUNTFORZEROS   23DA
A0DONTWORRY         23DE
A1ACCOUNTFORZEROS   2406
A1DONTWORRY         240A
A2ACCOUNTFORZEROS   2432
A2DONTWORRY         2436
A3ACCOUNTFORZEROS   245E
A3DONTWORRY         2462
A4ACCOUNTFORZEROS   248A
A4DONTWORRY         248E
A5ACCOUNTFORZEROS   24B6
A5DONTWORRY         24BA
A6ACCOUNTFORZEROS   24E2
A6DONTWORRY         24E6
ACMP                1BE8
ADD                 2828
ADDRESSDONE         27BE
AERR                262A
AERR_TEXT           389A
AFADDCONV           1BC2
AGETFIRSTADDRESS    1BB0
AGETSECADDRESS      1BD0
ALERR               26E6
ALERR_TEXT          3921
ARESETLOOP          1BE6
ASADDCONV           1BDA
ASCEND              1BA0
ASCII_ADDRESS       2780
ASCII_TO_BCD        2744
ASWAP               1BF6
A_TO_F              27F6
A_TO_F2             280E
BA                  3979
BCD_TO_HEX          2762
BERR                25BC
BERR_TEXT           3882
BF                  1F7A
BFGETENDADDRONE     1F98
BFGETENDDATA        1F7E
BFGETLASTEND        1FBE
BFNEXTADDR          1F88
BFNEXTADDRTWO       1FA2
BFTEST              11C0
BLCKTEST            1134
BMOV                1FF0
BMOVDONE            207A
BMOVTEST            119E
BSCH                2154
BSCH1               380A
BSCH2               3810
BSCH3               3822
BSCHENDDATA         2158
BSCHFADDEND         2178
BSCHFIRSTADD        2162
BSCHSECONDADD       2182
BSCHSECONDFIND      2190
BSCHTEST            115A
BTST                207E
BTST1               37AD
BTST2               37C1
BTST3               37D2
BTST4               37E4
BTST5               37EF
BTSTDATALOOP        20CC
BTSTGETENDADDRONE   209C
BTSTGETENDDATA      2082
BTSTGETLASTEND      20B6
BTSTNEXTADDR        208C
BTSTNEXTADDRTWO     20A6
BTSTTEST            117C
BUFFER              3000
BYTEBSCH            21C2
CHKERR              271A
CHKERR_TEXT         3959
COMPLETE            2146
COMPUTATION         1AE6
COMPUTEFIRSTADD     2000
COMPUTEFOURTHADDRESS  2048
COMPUTESECONDADDRESS  2018
COMPUTETHIRDADDRESS  2030
CONVERT             1ACA
CONVERTADDRESS      279C
CONVERTMINUS1       1AC8
D0ACCOUNTFORZEROS   227A
D0DONTWORRY         227E
D1ACCOUNTFORZEROS   22A6
D1DONTWORRY         22AA
D2ACCOUNTFORZEROS   22D2
D2DONTWORRY         22D6
D3ACCOUNTFORZEROS   22FE
D3DONTWORRY         2302
D4ACCOUNTFORZEROS   232A
D4DONTWORRY         232E
D5ACCOUNTFORZEROS   2356
D5DONTWORRY         235A
D6ACCOUNTFORZEROS   2382
D6DONTWORRY         2386
D7ACCOUNTFORZEROS   23AE
D7DONTWORRY         23B2
DATALOOP            1FE2
DATATRANSFER        2070
DCMP                1C46
DEBUG               37AA
DEFAULT             1C96
DEFAULTTEST         1B52
DESCEND             1BFE
DF                  2258
DFADDCONV           1C20
DFTST               11CE
DGETFIRSTADDRESS    1C0E
DGETSECADDRESS      1C2E
DISPLOOP            1A44
DONEASCEND          1C5C
DONEDESCEND         1C5C
DRESETLOOP          1C44
DSADDCONV           1C38
DSWAP               1C54
ECHO                130A
ECHOTEST            110E
EEND                130C
EFOUND              1316
ENDBF               1FEC
ENDBSCH             2236
ENDCONVERT          1AF8
ENDLP               1F76
ENDPARSE            1D7E
ENDPARSEL           1F6E
ENDPARSEW           1E58
ENDPTRMM            1C66
ENTER               1D80
ENTERL              1F70
ENTERW              1E5A
ERROR               3768
ERROR1              3794
ERRORSR             2734
EXECUTE             2248
FAIL                20E4
FINDEND             19C8
FINDEND1            1A06
FINDEND2            1A16
FINDLASTNUM         1ABE
FINDNEXT            1A10
FIRSTADDRESS        1FF6
FLERR               2700
FLERR_TEXT          393D
FONT                1090000
FORMATGOOD          1D26
FORMATGOOD1         1DE0
FORMATGOOD2         1DFE
FORMATGOOD3         1EBA
FORMATGOOD4         1ED8
FORMATGOOD5         1EF6
FORMATGOOD6         1F14
FOUNDB              21EC
FOUNDL              21FC
FOUNDW              21F4
FOURTHADDRESS       203E
GGETEND             223E
GO                  223A
GOBACK              1772
GOTST               121C
GREEN               FF00
HELP                1778
HELPORHXDC          1234
HELPTST             124A
HEXASCIIDONE        282C
HEXTOASCII          27C0
HIGHHEX             1AE2
HIGHHEXMM           1D6E
HIGHHEXMML          1F5C
HIGHHEXMMW          1E46
HTXT                3063
HTXT1               3074
HTXT10              35F8
HTXT11              3635
HTXT12              366D
HTXT13              36AF
HTXT14              36E2
HTXT15              3729
HTXT1A              30BF
HTXT1B              30FC
HTXT2               3110
HTXT3               315B
HTXT3A              31A0
HTXT3B              31D9
HTXT3C              31ED
HTXT3D              3202
HTXT3E              321F
HTXT4               3252
HTXT4A              3299
HTXT4B              32DE
HTXT4C              32F9
HTXT4D              3317
HTXT4E              3336
HTXT5               335A
HTXT5A              33A0
HTXT6               33BC
HTXT6A              3402
HTXT6B              344A
HTXT7               3470
HTXT7A              34B4
HTXT7B              34FC
HTXT8               3514
HTXT8A              355B
HTXT9               3583
HTXT9A              35CB
HXDC                1A9E
HXDCTEST            12C8
IERR                2698
IERR_TEXT           38B7
IR                  397E
KEEP_CONVERTING     27D0
LONG                1E60
LONGBSCH            21DE
MDSPCTEST           1298
MEMCONT             19D2
MEMDISP             19FC
MEMNEXT             1A20
MEMSET              19C0
MEMTEST             126C
MM                  1C60
MMSPCTEST           12BA
MODIFYLOOP          1CF4
MODIFYLOOPL         1E74
MODIFYLOOPW         1D9A
MODIFYREGS          1324
MODIFYREGTEST       12F4
MOVEDATA            19EC
MRA                 136A
MRA0                15A8
MRA1                15E8
MRA2                1628
MRA3                1668
MRA4                16A8
MRA5                16E8
MRA6                1728
MRD                 1324
MRD0                13A8
MRD1                13E8
MRD2                1428
MRD3                1468
MRD4                14A8
MRD5                14E8
MRD6                1528
MRD7                1568
MRDFINDDATA         1768
MSFINDADDRESS       19E2
MSSPCTEST           128A
NEXT                2850
NEXTHEX             27FC
NEXTMMSTEP          1D72
NEXTMMSTEPL         1F60
NEXTMMSTEPW         1E4A
NOTZEROS            283E
OUTPUTBUFF          3050
OUTPUTNUM           1B16
PARSELOOP           1D56
PARSELOOPL          1F44
PARSELOOPW          1E2E
PCACCOUNTFORZEROS   259A
PCDONTWORRY         259E
PERR                26B2
PERR_TEXT           38E0
PLACECOUNTER        278E
PROMPT              3058
PUTBUFFER           2814
RA0                 3853
RA1                 3857
RA2                 385B
RA3                 385F
RA4                 3863
RA5                 3867
RA6                 386B
RD0                 3833
RD1                 3837
RD2                 383B
RD3                 383F
RD4                 3843
RD5                 3847
RD6                 384B
RD7                 384F
READ                20D6
RESTORE             10F6
RID_ZEROS           281C
RPC                 387A
RSR                 387E
RSS                 386F
RUS                 3876
SECONDADDRESS       200E
SECONDLOOP          1A7C
SHELL               1070
SIZECHECK           1C64
SORTTEST            11E6
SORTW               1B2C
SPACE               37A9
SRACCOUNTFORZEROS   2542
SRDONTWORRY         2546
SSACCOUNTFORZEROS   256E
SSDONTWORRY         2572
SSW                 3973
START               1000
STOREDATA           1FC8
STOREDATABTST       20C0
SUCCESSTEXT         2200
TESTOP              219A
THIRDADDRESS        2026
UNKNOWNCMD          2840
UPPER               275A
USPACCOUNTFORZEROS  2514
USPDONTWORRY        2518
WORD                1D86
WORDBSCH            21D0
ZEROS               283C
ZERR                26CC
ZERR_TEXT           38FE

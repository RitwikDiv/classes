00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.02
Created On: 4/27/2015 10:22:25 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :  Monitor Project
00000000                             3  * Written by :  Adam Sumner 
00000000                             4  * Date       :  4/28/2015
00000000                             5  * Description:  Monitor Final Project
00000000                             6  *-----------------------------------------------------------
00000000                             7  
00000000                             8  
00000000                             9  *---------------DISCLAIMER!-------------------------*
00000000                            10  *Subroutines are not as optimized as they should be!*
00000000                            11  *Things such as checking for spaces, getting addresses, etc. *
00000000                            12  *can easily be their own subroutines to save code space!*
00000000                            13  *Luckily code size is not a huge concern*
00000000                            14  *This is why there are no plans to optimize in the future*
00000000                            15  
00000000                            16  
00000000                            17  
00003000                            18      ORG    $3000
00003000                            19      
00003000                            20  BUFFER        DS.B      80              ;space for command storage 
00003050                            21  OUTPUTBUFF    DS.B      8               ;to output numbers easily
00003058= 4D 4F 4E 49 54 4F ...     22  PROMPT        DC.B      'MONITOR441>'   ;prompt definition
00003063                            23  
00003063                            24  *Help text*
00003063= 4C 69 73 74 20 6F ...     25  HTXT          DC.B      'List of Commands:'
00003074= 4D 44 53 50 20 3C ...     26  HTXT1         DC.B      'MDSP <address1> <address2> - Memory Display: Outputs the address and memory' 
000030BF= 63 6F 6E 74 65 6E ...     27  HTXT1A        DC.B      'contents from <address1> to <address2> amd from <address1> to' 
000030FC= 3C 61 64 64 72 65 ...     28  HTXT1B        DC.B      '<address2 + 16bytes>'
00003110= 48 58 44 45 43 20 ...     29  HTXT2         DC.B      'HXDEC <num> - Conversion: Converts a hexadecimal number to a decimal number'
0000315B= 53 4F 52 54 57 20 ...     30  HTXT3         DC.B      'SORTW <option> <address1> <address2> - Sort: Sorts a block of memory.'
000031A0= 3C 6F 70 74 69 6F ...     31  HTXT3A        DC.B      '<option> specifies the order in which the list is sorted:'
000031D9= 3B 41 20 2D 20 41 ...     32  HTXT3B        DC.B      ';A - Ascending Order'
000031ED= 3B 44 20 2D 20 44 ...     33  HTXT3C        DC.B      ';D - Descending Order'
00003202= 2D 28 64 65 66 61 ...     34  HTXT3D        DC.B      '-(default) - Descending Order'
0000321F= 53 6F 72 74 73 20 ...     35  HTXT3E        DC.B      'Sorts block of memory from <address1> to <address2>'
00003252= 4D 4D 20 3C 6F 70 ...     36  HTXT4         DC.B      'MM <option> <address> - Memory Modify: Display memory and, as required,'
00003299= 6D 6F 64 69 66 79 ...     37  HTXT4A        DC.B      'modify data or enter new data. <option> specifies the number of bytes'
000032DE= 64 69 73 70 6C 61 ...     38  HTXT4B        DC.B      'displayed for each address:'
000032F9= 2D 28 64 65 66 61 ...     39  HTXT4C        DC.B      '-(default) - Displays one byte'
00003317= 3B 57 20 2D 20 44 ...     40  HTXT4D        DC.B      ';W - Displays one word(2 bytes)'
00003336= 3B 4C 20 2D 20 44 ...     41  HTXT4E        DC.B      ';L - Displays one long word(4 bytes)'
0000335A= 4D 53 20 3C 64 61 ...     42  HTXT5         DC.B      'MS <data> <address> - Memory Set: Alters memory by setting <data> into' 
000033A0= 3C 61 64 64 72 65 ...     43  HTXT5A        DC.B      '<address>'
000033A9= 42 46 20 3C 64 61 ...     44  HTXT6         DC.B      'BF <data> <address1> <address2> - Block Fill: Fills memory starting at' 
000033EF= 3C 61 64 64 72 65 ...     45  HTXT6A        DC.B      '<address1> to <address2>. Both must be even addresses. This command only'
00003437= 77 6F 72 6B 73 20 ...     46  HTXT6B        DC.B      'works with a word-sized <data> pattern'
0000345D= 42 4D 4F 56 20 3C ...     47  HTXT7         DC.B      'BMOV <address1> <address2> <address3> <address4> - Block Move: Moves' 
000034A1= 61 20 64 75 70 6C ...     48  HTXT7A        DC.B      'a duplicate block of memory from <address1> to <address2> into the block'
000034E9= 3C 61 64 64 72 65 ...     49  HTXT7B        DC.B      '<address3> to <address4>'
00003501= 42 54 53 54 20 3C ...     50  HTXT8         DC.B      'BTST <data> <address1> <address2> - Block Test: Tests a block of memory'
00003548= 66 72 6F 6D 20 3C ...     51  HTXT8A        DC.B      'from <address1> to <address2> for <data>'
00003570= 42 53 43 48 20 3C ...     52  HTXT9         DC.B      'BSCH <data> <address1> <address2> - Block Search: Searches for <data> in'
000035B8= 69 6E 20 6D 65 6D ...     53  HTXT9A        DC.B      'in memory block from <address1> to <address2>'
000035E5= 47 4F 20 3C 61 64 ...     54  HTXT10        DC.B      'GO <address> - Execute Program: Executes program at <address>'
00003622= 44 46 20 2D 20 44 ...     55  HTXT11        DC.B      'DF - Display Formatted Registers: Displays all registers'
0000365A= 48 45 4C 50 20 2D ...     56  HTXT12        DC.B      'HELP - Help: Displays all available commands and their description'
0000369C= 45 43 48 4F 20 3C ...     57  HTXT13        DC.B      'ECHO <data> - Echo: Displays <data> to the terminal'
000036CF= 2E 3C 52 65 67 69 ...     58  HTXT14        DC.B      '.<Register Type><Register Number> <data>- Modify Register: Modifies the'
00003716= 63 6F 6E 74 65 6E ...     59  HTXT15        DC.B      'contents of register <Register Type><Register Number> to <data>'
00003755                            60  
00003755                            61  *Error Message*
00003755= 45 52 52 4F 52 3A ...     62  ERROR         DC.B      'ERROR: TRY COMMAND AGAIN WITH CORRECT SYNTAX'
00003781= 45 52 52 4F 52 3A ...     63  ERROR1        DC.B      'ERROR: UNKOWN COMMAND'
00003796                            64  *Space*
00003796= 20                        65  SPACE         DC.B      ' '
00003797                            66  
00003797                            67  *Debugger Print Statement*
00003797= 57 49 4E                  68  DEBUG         DC.B      'WIN'      
0000379A                            69  
0000379A                            70  *BTST Text*
0000379A= 4E 75 6D 62 65 72 ...     71  BTST1         DC.B      'Number written was: '
000037AE= 4E 75 6D 62 65 72 ...     72  BTST2         DC.B      'Number read was: '
000037BF= 42 6C 6F 63 6B 20 ...     73  BTST3         DC.B      'Block Test PASSES!'
000037D1= 46 41 49 4C 55 52 ...     74  BTST4         DC.B      'FAILURE!!!!'  
000037DC= 45 72 72 6F 72 20 ...     75  BTST5         DC.B      'Error Occurred at address: '      
000037F7                            76  
000037F7                            77  *BSCH Text*
000037F7= 44 61 74 61 3A 20         78  BSCH1         DC.B      'Data: '
000037FD= 46 6F 75 6E 64 20 ...     79  BSCH2         DC.B      'Found at address: '
0000380F= 50 61 74 74 65 72 ...     80  BSCH3         DC.B      'Pattern not found'
00003820                            81  
00003820                            82  *DF Text*
00003820= 44 30 3A 20               83  RD0            DC.B      'D0: '
00003824= 44 31 3A 20               84  RD1            DC.B      'D1: '
00003828= 44 32 3A 20               85  RD2            DC.B      'D2: '
0000382C= 44 33 3A 20               86  RD3            DC.B      'D3: '
00003830= 44 34 3A 20               87  RD4            DC.B      'D4: '
00003834= 44 35 3A 20               88  RD5            DC.B      'D5: '
00003838= 44 36 3A 20               89  RD6            DC.B      'D6: '
0000383C= 44 37 3A 20               90  RD7            DC.B      'D7: '
00003840                            91  
00003840= 41 30 3A 20               92  RA0            DC.B      'A0: '
00003844= 41 31 3A 20               93  RA1            DC.B      'A1: '
00003848= 41 32 3A 20               94  RA2            DC.B      'A2: '
0000384C= 41 33 3A 20               95  RA3            DC.B      'A3: '
00003850= 41 34 3A 20               96  RA4            DC.B      'A4: '
00003854= 41 35 3A 20               97  RA5            DC.B      'A5: '
00003858= 41 36 3A 20               98  RA6            DC.B      'A6: '
0000385C                            99  
0000385C= 53 53 2F 41 37 3A 20     100  RSS            DC.B      'SS/A7: '
00003863= 55 53 3A 20              101  RUS            DC.B      'US: '
00003867= 50 43 3A 20              102  RPC            DC.B      'PC: '
0000386B= 53 52 3A 20              103  RSR            DC.B      'SR: '
0000386F                           104  
0000386F                           105  *Exception Messages*
0000386F= 41 20 42 75 73 20 ...    106  BERR_TEXT      DC.B 'A Bus Error Occured! :(',0
00003887= 41 6E 20 41 64 64 ...    107  AERR_TEXT      DC.B 'An Address Error Occured! :(',0
000038A4= 41 6E 20 49 6C 6C ...    108  IERR_TEXT      DC.B 'An Illegal Instruction Error Occured! :(',0
000038CD= 41 20 50 72 69 76 ...    109  PERR_TEXT      DC.B 'A Privilege Error Occured! :(',0
000038EB= 41 20 44 69 76 69 ...    110  ZERR_TEXT      DC.B 'A Divide by Zero Error Occured! :(',0
0000390E= 41 6E 20 41 20 4C ...    111  ALERR_TEXT      DC.B 'An A Line Error Occured! :(',0
0000392A= 41 6E 20 46 20 4C ...    112  FLERR_TEXT      DC.B 'An F Line Error Occured! :(',0
00003946= 41 20 43 68 65 63 ...    113  CHKERR_TEXT      DC.B 'A Check Error Occured! :(',0
00003960                           114  
00003960= 53 53 57 3A 20 00        115  SSW            DC.B 'SSW: ',0
00003966= 42 41 3A 20 00           116  BA             DC.B 'BA: ',0
0000396B= 49 52 3A 20 00           117  IR             DC.B 'IR: ',0
00003970                           118  
00003970                           119  *Color definition for Font*
00003970  =01090000                120  FONT        EQU     $01090000  
00003970  =0000FF00                121  GREEN       EQU     $0000FF00
00003970                           122  
00001000                           123      ORG     $1000
00001000                           124  START:  
00001000  48E7 E040                125          MOVEM.L D0-D2/A1,-(SP)
00001004                           126          *Makes it look like a REAL terminal*
00001004  223C 0000FF00            127          MOVE.L  #GREEN,D1
0000100A  243C 01090000            128          MOVE.L  #FONT,D2
00001010  103C 0015                129          MOVE.B  #21,D0
00001014  4E4F                     130          TRAP    #15
00001016  4281                     131          CLR.L   D1
00001018  4282                     132          CLR.L   D2
0000101A  4200                     133          CLR.B   D0
0000101C                           134          *Load custom exceptions*
0000101C  43F9 000025D4            135          LEA BERR,A1 ;init exception handlers
00001022  21C9 0008                136          MOVE.L A1,$8
00001026  43F9 00002642            137          LEA AERR,A1
0000102C  21C9 000C                138          MOVE.L A1,$C
00001030  43F9 000026B0            139          LEA IERR,A1
00001036  21C9 0010                140          MOVE.L A1,$10
0000103A  43F9 000026E4            141          LEA ZERR,A1
00001040  21C9 0014                142          MOVE.L A1,$14
00001044  43F9 00002732            143          LEA CHKERR,A1
0000104A  21C9 0018                144          MOVE.L  A1,$18
0000104E  43F9 000026CA            145          LEA PERR,A1
00001054  21C9 0020                146          MOVE.L A1,$20
00001058  43F9 000026FE            147          LEA ALERR,A1
0000105E  21C9 0028                148          MOVE.L A1,$28
00001062  43F9 00002718            149          LEA FLERR,A1
00001068  21C9 002C                150          MOVE.L A1,$2C
0000106C  4CDF 0207                151          MOVEM.L (SP)+,D0-D2/A1  ;restore any preset values
00001070                           152  
00001070                           153  *--------------------------------------------------------------------------------------*
00001070                           154  SHELL:       
00001070  4878 1070                155              PEA     *           ;save PC on Stack for DF
00001074  588F                     156              ADD.L   #4,SP       ;get original value of stack pointer
00001076  2F4F FFF8                157              MOVE.L  SP,-8(SP)   ;save it
0000107A  DFFC FFFFFFF8            158              ADD.L   #-8,SP      ;update Stack position
00001080  40E7                     159              MOVE    SR,-(SP)    ;save Status register for use with DF
00001082  2F0E                     160              MOVE.L  A6,-(SP)    ;temp save
00001084  4E6E                     161              MOVE    USP,A6      ;for use with DF command
00001086  2F0E                     162              MOVE.L  A6,-(SP)    ;store USP to STACK
00001088  588F                     163              ADD.L   #4,SP       
0000108A  2C57                     164              MOVE.L  (SP),A6    ;restore original value
0000108C  2F67 0004                165              MOVE.L  -(SP),4(SP)  ;move correct value to correct stack position
00001090  588F                     166              ADD.L   #4,SP       ;point stack to CORRECT PLACE
00001092                           167              
00001092                           168  
00001092  48E7 FFFE                169              MOVEM.L D0-D7/A0-A6,-(SP)  ;save initial values of registers
00001096  48E7 FFFE                170              MOVEM.L D0-D7/A0-A6,-(SP)  ;unorthodox implementation to save registers when using DF command
0000109A                           171               
0000109A                           172                
0000109A  43F8 3058                173              LEA  PROMPT,A1      ;Load message            
0000109E  323C 000B                174              MOVE.W  #11,D1      ;load n bytes
000010A2  103C 0001                175              MOVE.B  #1,D0       ;set up trap call
000010A6  4E4F                     176              TRAP    #15
000010A8  43F8 3000                177              LEA     BUFFER,A1   ;set up storage for command
000010AC  103C 0002                178              MOVE.B  #2,D0       ;load input trap call
000010B0  4E4F                     179              TRAP    #15
000010B2  0C11 0048                180              CMP.B   #$48,(A1)   ;check for help/hxdc
000010B6  6700 017C                181              BEQ     HELPORHXDC
000010BA  0C11 004D                182              CMP.B   #$4D,(A1)   ;check for memory command
000010BE  6700 01AC                183              BEQ     MEMTEST
000010C2  0C11 0047                184              CMP.B   #$47,(A1)   ;check for go
000010C6  6700 0154                185              BEQ     GOTST
000010CA  0C11 0044                186              CMP.B   #$44,(A1)   ;check for df
000010CE  6700 00FE                187              BEQ     DFTST
000010D2  0C11 0042                188              CMP.B   #$42,(A1)   ;check for blck command
000010D6  6700 005C                189              BEQ     BLCKTEST
000010DA  0C11 0053                190              CMP.B   #$53,(A1)   ;check for sort command
000010DE  6700 0106                191              BEQ     SORTTEST
000010E2  0C11 0045                192              CMP.B   #$45,(A1)   ;check for echo command
000010E6  6700 0026                193              BEQ     ECHOTEST
000010EA  0C11 002E                194              CMP.B   #$2E,(A1)   ;check for modify register command
000010EE  6700 0204                195              BEQ     MODIFYREGTEST
000010F2  6000 1764                196              BRA     UNKNOWNCMD
000010F6  4CDF 7FFF                197  RESTORE:    MOVEM.L (SP)+,D0-D7/A0-A6
000010FA  4CDF 7FFF                198              MOVEM.L (SP)+,D0-D7/A0-A6 ;double restore because of DF hack workaround
000010FE  588F                     199              ADD.L   #4,SP       ;account for USP, it'll fix itself (it shouldn't be used)
00001100                           200                                  ;EASY68k simulator starts in supervisor mode
00001100  46DF                     201              MOVE    (SP)+,SR
00001102  201F                     202              MOVE.L  (SP)+,D0    ;save stack cuz it'll get destroyed
00001104  588F                     203              ADD.L   #4,SP       ;get rid of PC, itll fix itself
00001106  2E40                     204              MOVE.L  D0,SP
00001108  4280                     205              CLR.L   D0          ;no longer needed
0000110A                           206  
0000110A  6000 FF64                207              BRA     SHELL
0000110E                           208  *--------------------------------------------------------------------------------------*
0000110E                           209  
0000110E  5289                     210  ECHOTEST:   ADD.L   #1,A1
00001110  0C19 0043                211              CMP.B   #$43,(A1)+   ;C?
00001114  6600 1742                212              BNE     UNKNOWNCMD
00001118  0C19 0048                213              CMP.B   #$48,(A1)+   ;H?
0000111C  6600 173A                214              BNE     UNKNOWNCMD
00001120  0C19 004F                215              CMP.B   #$4F,(A1)+   ;O?
00001124  6600 1732                216              BNE     UNKNOWNCMD
00001128  0C19 0020                217              CMP.B   #$20,(A1)+   ;SPACE?
0000112C  6700 01DC                218              BEQ     ECHO
00001130  6000 161A                219              BRA     ERRORSR
00001134                           220  *--------------------------------------------------------------------------------------*
00001134                           221  
00001134                           222  
00001134                           223  *--------------------------------------------------------------------------------------*
00001134                           224  
00001134  5289                     225  BLCKTEST:   ADD.L   #1,A1
00001136  0C11 0046                226              CMP.B   #$46,(A1)   ;BF?
0000113A  6700 0084                227              BEQ     BFTEST
0000113E  0C11 004D                228              CMP.B   #$4D,(A1)   ;BMOV?
00001142  6700 005A                229              BEQ     BMOVTEST
00001146  0C11 0054                230              CMP.B   #$54,(A1)   ;BTST?
0000114A  6700 0030                231              BEQ     BTSTTEST
0000114E  0C11 0053                232              CMP.B   #$53,(A1)   ;BSCH?
00001152  6700 0006                233              BEQ     BSCHTEST
00001156  6000 1700                234              BRA     UNKNOWNCMD
0000115A                           235  *--------------------------------------------------------------------------------------*
0000115A                           236  
0000115A  5289                     237  BSCHTEST:   ADD.L   #1,A1
0000115C  0C11 0043                238              CMP.B   #$43,(A1)
00001160  6600 16F6                239              BNE     UNKNOWNCMD
00001164  5289                     240              ADD.L   #1,A1
00001166  0C11 0048                241              CMP.B   #$48,(A1)
0000116A  6600 16EC                242              BNE     UNKNOWNCMD
0000116E  5289                     243              ADD.L   #1,A1
00001170  0C11 0020                244              CMP.B   #$20,(A1)
00001174  6600 15D6                245              BNE     ERRORSR
00001178  6000 0FF2                246              BRA     BSCH
0000117C                           247                        
0000117C                           248  *--------------------------------------------------------------------------------------*
0000117C                           249  
0000117C                           250  BTSTTEST:   
0000117C  5289                     251              ADD.L   #1,A1
0000117E  0C11 0053                252              CMP.B   #$53,(A1)
00001182  6600 16D4                253              BNE     UNKNOWNCMD
00001186  5289                     254              ADD.L   #1,A1
00001188  0C11 0054                255              CMP.B   #$54,(A1)
0000118C  6600 16CA                256              BNE     UNKNOWNCMD
00001190  5289                     257              ADD.L   #1,A1
00001192  0C11 0020                258              CMP.B   #$20,(A1)
00001196  6600 15B4                259              BNE     ERRORSR
0000119A  6000 0EFA                260              BRA     BTST
0000119E                           261  
0000119E                           262  *--------------------------------------------------------------------------------------*
0000119E                           263  
0000119E  5289                     264  BMOVTEST:   ADD.L   #1,A1
000011A0  0C11 004F                265              CMP.B   #$4F,(A1)
000011A4  6600 16B2                266              BNE     UNKNOWNCMD
000011A8  5289                     267              ADD.L   #1,A1
000011AA  0C11 0056                268              CMP.B   #$56,(A1)
000011AE  6600 16A8                269              BNE     UNKNOWNCMD
000011B2  5289                     270              ADD.L   #1,A1
000011B4  0C11 0020                271              CMP.B   #$20,(A1)
000011B8  6600 1592                272              BNE     ERRORSR
000011BC  6000 0E4A                273              BRA     BMOV
000011C0                           274  *--------------------------------------------------------------------------------------*
000011C0  5289                     275  BFTEST:     ADD.L   #1,A1
000011C2  0C11 0020                276              CMP.B   #$20,(A1)
000011C6  6600 1584                277              BNE     ERRORSR
000011CA  6000 0DC6                278              BRA     BF
000011CE                           279  *--------------------------------------------------------------------------------------*
000011CE                           280  
000011CE  5289                     281  DFTST:      ADD.L   #1,A1
000011D0  0C11 0046                282              CMP.B   #$46,(A1)
000011D4  6600 1682                283              BNE     UNKNOWNCMD
000011D8  5289                     284              ADD.L   #1,A1
000011DA  0C11 0000                285              CMP.B   #$00,(A1)
000011DE  6600 156C                286              BNE     ERRORSR
000011E2  6000 108C                287              BRA     DF
000011E6                           288  *--------------------------------------------------------------------------------------*
000011E6                           289  
000011E6  5289                     290  SORTTEST:    ADD.L   #1,A1
000011E8  0C11 004F                291              CMP.B   #$4F,(A1)   ;O?
000011EC  6600 166A                292              BNE     UNKNOWNCMD
000011F0  5289                     293               ADD.L   #1,A1
000011F2  0C11 0052                294              CMP.B   #$52,(A1)   ;R?
000011F6  6600 1660                295              BNE     UNKNOWNCMD
000011FA  5289                     296              ADD.L   #1,A1
000011FC  0C11 0054                297              CMP.B   #$54,(A1)   ;T?
00001200  6600 1656                298              BNE     UNKNOWNCMD
00001204  5289                     299              ADD.L   #1,A1
00001206  0C11 0057                300              CMP.B   #$57,(A1)   ;W?
0000120A  6600 164C                301              BNE     UNKNOWNCMD
0000120E  5289                     302              ADD.L   #1,A1
00001210  0C11 0020                303              CMP.B   #$20,(A1)
00001214  6600 1536                304              BNE     ERRORSR
00001218                           305  
00001218  6000 092A                306              BRA     SORTW
0000121C                           307  *--------------------------------------------------------------------------------------*
0000121C                           308  
0000121C  5289                     309  GOTST:      ADD.L   #1,A1
0000121E  0C11 004F                310              CMP.B   #$4F,(A1)
00001222  6600 1634                311              BNE     UNKNOWNCMD
00001226  5289                     312              ADD.L   #1,A1
00001228  0C19 0020                313              CMP.B   #$20,(A1)+
0000122C  6600 151E                314              BNE     ERRORSR
00001230  6000 1020                315              BRA     GO
00001234                           316  *--------------------------------------------------------------------------------------*
00001234                           317  
00001234  5289                     318  HELPORHXDC: ADD.L   #1,A1
00001236  0C11 0045                319              CMP.B   #$45,(A1)   ;is it help?
0000123A  6700 000E                320              BEQ     HELPTST
0000123E  0C11 0058                321              CMP.B   #$58,(A1)   ;or is it hxdc
00001242  6700 0084                322              BEQ     HXDCTEST
00001246  6000 1610                323              BRA     UNKNOWNCMD     
0000124A                           324  *--------------------------------------------------------------------------------------*
0000124A                           325  
0000124A                           326  HELPTST:   
0000124A  5289                     327             ADD.L   #1,A1   ; check next char
0000124C  0C11 004C                328             CMP.B    #$4C,(A1) ;check for L
00001250  6600 1606                329             BNE      UNKNOWNCMD
00001254  5289                     330             ADD.L   #1,A1
00001256  0C11 0050                331             CMP.B    #$50,(A1)   ;check for P
0000125A  6600 15FC                332             BNE      UNKNOWNCMD
0000125E  5289                     333             ADD.L   #1,A1   ;check for anything else
00001260  0C11 0000                334             CMP.B    #$00,(A1)
00001264  6600 14E6                335             BNE      ERRORSR
00001268  6000 050E                336             BRA      HELP
0000126C                           337              
0000126C                           338  
0000126C                           339   
0000126C                           340  *--------------------------------------------------------------------------------------*
0000126C                           341              
0000126C  5289                     342  MEMTEST:    ADD.L   #1,A1
0000126E  0C11 0053                343              CMP.B   #$53,(A1)
00001272  6700 0016                344              BEQ     MSSPCTEST
00001276  0C11 0044                345              CMP.B   #$44,(A1)
0000127A  6700 001C                346              BEQ     MDSPCTEST
0000127E  0C11 004D                347              CMP.B   #$4D,(A1)
00001282  6700 0036                348              BEQ     MMSPCTEST
00001286  6000 15D0                349              BRA     UNKNOWNCMD
0000128A                           350              
0000128A  5289                     351  MSSPCTEST   ADD.L   #1,A1
0000128C  0C11 0020                352              CMP.B   #$20,(A1)
00001290  6700 072E                353              BEQ     MEMSET
00001294  6000 14B6                354              BRA     ERRORSR
00001298                           355              
00001298                           356  MDSPCTEST:  
00001298  5289                     357              ADD.L   #1,A1
0000129A  0C11 0053                358              CMP.B   #$53,(A1)
0000129E  6600 14AC                359              BNE     ERRORSR
000012A2  5289                     360              ADD.L   #1,A1
000012A4  0C11 0050                361              CMP.B   #$50,(A1)
000012A8  6600 15AE                362              BNE     UNKNOWNCMD
000012AC  5289                     363              ADD.L   #1,A1
000012AE  0C11 0020                364              CMP.B   #$20,(A1)
000012B2  6700 0760                365              BEQ     MEMDISP          
000012B6  6000 1494                366              BRA     ERRORSR
000012BA                           367             
000012BA  5289                     368  MMSPCTEST:  ADD.L   #1,A1
000012BC  0C11 0020                369              CMP.B   #$20,(A1)
000012C0  6700 09B6                370              BEQ     MM          
000012C4  6000 1486                371              BRA     ERRORSR
000012C8                           372  *--------------------------------------------------------------------------------------*
000012C8                           373  HXDCTEST:   
000012C8  5289                     374              ADD.L   #1,A1
000012CA  0C11 0044                375              CMP.B   #$44,(A1)
000012CE  6600 1588                376              BNE    UNKNOWNCMD
000012D2  5289                     377              ADD.L   #1,A1
000012D4  0C11 0045                378              CMP.B   #$45,(A1)
000012D8  6600 157E                379              BNE     UNKNOWNCMD
000012DC  5289                     380              ADD.L   #1,A1
000012DE  0C11 0043                381              CMP.B   #$43,(A1)
000012E2  6600 1574                382              BNE     UNKNOWNCMD
000012E6  5289                     383              ADD.L   #1,A1
000012E8  0C11 0020                384              CMP.B   #$20,(A1)
000012EC  6600 145E                385              BNE     ERRORSR
000012F0  6000 07C4                386              BRA     HXDC
000012F4                           387  *--------------------------------------------------------------------------------------*
000012F4                           388  MODIFYREGTEST:
000012F4  5289                     389              ADD.L   #1,A1
000012F6  0C11 0044                390              CMP.B   #$44,(A1)
000012FA  6700 0028                391              BEQ     MRD
000012FE  0C11 0041                392              CMP.B   #$41,(A1)
00001302  6700 0066                393              BEQ     MRA
00001306  6000 1550                394              BRA     UNKNOWNCMD
0000130A                           395              
0000130A                           396  *----------------------------USER DEFINED COMMANDS---------------------------------*
0000130A                           397  *--------------------------------------------------------------------------------------*
0000130A                           398  ECHO: *What terminal DOESN'T have echo?*
0000130A                           399  
0000130A  2449                     400          MOVE.L  A1,A2   ;setup to find end of string
0000130C  0C1A 0000                401  EEND:   CMP.B   #$00,(A2)+
00001310  6700 0004                402          BEQ     EFOUND
00001314  60F6                     403          BRA     EEND
00001316                           404  EFOUND:
00001316  538A                     405          SUB.L   #1,A2   ;off by one
00001318  95C9                     406          SUB.L   A1,A2   ;find out how many bytes
0000131A  220A                     407          MOVE.L  A2,D1   ;place it for trap function
0000131C  7000                     408          MOVE.L  #0,D0
0000131E  4E4F                     409          TRAP    #15
00001320                           410          
00001320  6000 FDD4                411          BRA RESTORE
00001324                           412  *--------------------------------------------------------------------------------------*
00001324                           413  MODIFYREGS:
00001324                           414  
00001324                           415  MRD:
00001324  5289                     416          ADD.L   #1,A1   ;inc
00001326  0C11 0030                417          CMP.B   #$30,(A1)
0000132A  6700 007C                418          BEQ     MRD0
0000132E  0C11 0031                419          CMP.B   #$31,(A1)
00001332  6700 00B4                420          BEQ     MRD1
00001336  0C11 0032                421          CMP.B   #$32,(A1)
0000133A  6700 00EC                422          BEQ     MRD2
0000133E  0C11 0033                423          CMP.B   #$33,(A1)
00001342  6700 0124                424          BEQ     MRD3
00001346  0C11 0034                425          CMP.B   #$34,(A1)
0000134A  6700 015C                426          BEQ     MRD4
0000134E  0C11 0035                427          CMP.B   #$35,(A1)
00001352  6700 0194                428          BEQ     MRD5
00001356  0C11 0036                429          CMP.B   #$36,(A1)
0000135A  6700 01CC                430          BEQ     MRD6
0000135E  0C11 0037                431          CMP.B   #$37,(A1)
00001362  6700 0204                432          BEQ     MRD7
00001366  6000 13E4                433          BRA     ERRORSR
0000136A                           434  
0000136A                           435  MRA:
0000136A  5289                     436          ADD.L   #1,A1   ;inc
0000136C  0C11 0030                437          CMP.B   #$30,(A1)
00001370  6700 0236                438          BEQ     MRA0
00001374  0C11 0031                439          CMP.B   #$31,(A1)
00001378  6700 026E                440          BEQ     MRA1
0000137C  0C11 0032                441          CMP.B   #$32,(A1)
00001380  6700 02A6                442          BEQ     MRA2
00001384  0C11 0033                443          CMP.B   #$33,(A1)
00001388  6700 02DE                444          BEQ     MRA3
0000138C  0C11 0034                445          CMP.B   #$34,(A1)
00001390  6700 0316                446          BEQ     MRA4
00001394  0C11 0035                447          CMP.B   #$35,(A1)
00001398  6700 034E                448          BEQ     MRA5
0000139C  0C11 0036                449          CMP.B   #$36,(A1)
000013A0  6700 0386                450          BEQ     MRA6
000013A4  6000 13A6                451          BRA     ERRORSR
000013A8                           452               
000013A8                           453  
000013A8                           454  
000013A8                           455          
000013A8                           456          
000013A8                           457  MRD0: 
000013A8  5289                     458          ADD.L   #1,A1
000013AA  0C19 0020                459          CMP.B   #$20,(A1)+
000013AE  6600 139C                460          BNE     ERRORSR
000013B2  2449                     461          MOVE.L  A1,A2
000013B4  264A                     462          MOVE.L  A2,A3
000013B6  4EB9 00001768            463          JSR     MRDFINDDATA
000013BC  538B                     464          SUB.L   #1,A3
000013BE  4EB9 00002798            465          JSR     ASCII_ADDRESS   ;convert data to hex
000013C4  2F05                     466          MOVE.L  D5,-(SP)        ;store it temporarily
000013C6  588F                     467          ADD.L   #4,SP       ;dont lose data
000013C8  4CDF 7FFF                468          MOVEM.L (SP)+,D0-D7/A0-A6
000013CC  4CDF 7FFF                469          MOVEM.L (SP)+,D0-D7/A0-A6 ;double restore because of DF hack workaround
000013D0  588F                     470          ADD.L   #4,SP       ;account for USP, it'll fix itself (it shouldn't be used)
000013D2                           471                                  ;EASY68k simulator starts in supervisor mode
000013D2  46DF                     472          MOVE    (SP)+,SR
000013D4  588F                     473          ADD.L   #4,SP       ;skip saved stack
000013D6  9FFC 00000086            474          SUB.L   #134,SP     ;find data again
000013DC  2017                     475          MOVE.L  (SP),D0
000013DE  DFFC 0000008A            476          ADD.L   #138,SP     ;go back to original spot
000013E4  6000 FC8A                477          BRA     SHELL
000013E8                           478               
000013E8                           479  MRD1:
000013E8  5289                     480          ADD.L   #1,A1
000013EA  0C19 0020                481          CMP.B   #$20,(A1)+
000013EE  6600 135C                482          BNE     ERRORSR
000013F2  2449                     483          MOVE.L  A1,A2
000013F4  264A                     484          MOVE.L  A2,A3
000013F6  4EB9 00001768            485          JSR     MRDFINDDATA
000013FC  538B                     486          SUB.L   #1,A3
000013FE  4EB9 00002798            487          JSR     ASCII_ADDRESS   ;convert data to hex
00001404  2F05                     488          MOVE.L  D5,-(SP)        ;store it temporarily
00001406  588F                     489          ADD.L   #4,SP       ;dont lose data
00001408  4CDF 7FFF                490          MOVEM.L (SP)+,D0-D7/A0-A6
0000140C  4CDF 7FFF                491          MOVEM.L (SP)+,D0-D7/A0-A6 ;double restore because of DF hack workaround
00001410  588F                     492          ADD.L   #4,SP       ;account for USP, it'll fix itself (it shouldn't be used)
00001412                           493                                  ;EASY68k simulator starts in supervisor mode
00001412  46DF                     494          MOVE    (SP)+,SR
00001414  588F                     495          ADD.L   #4,SP       ;skip saved stack
00001416  9FFC 00000086            496          SUB.L   #134,SP     ;find data again
0000141C  2217                     497          MOVE.L  (SP),D1
0000141E  DFFC 0000008A            498          ADD.L   #138,SP     ;go back to original spot
00001424  6000 FC4A                499          BRA     SHELL
00001428                           500  
00001428                           501  MRD2:
00001428  5289                     502          ADD.L   #1,A1
0000142A  0C19 0020                503          CMP.B   #$20,(A1)+
0000142E  6600 131C                504          BNE     ERRORSR
00001432  2449                     505          MOVE.L  A1,A2
00001434  264A                     506          MOVE.L  A2,A3
00001436  4EB9 00001768            507          JSR     MRDFINDDATA
0000143C  538B                     508          SUB.L   #1,A3
0000143E  4EB9 00002798            509          JSR     ASCII_ADDRESS   ;convert data to hex
00001444  2F05                     510          MOVE.L  D5,-(SP)        ;store it temporarily
00001446  588F                     511          ADD.L   #4,SP       ;dont lose data
00001448  4CDF 7FFF                512          MOVEM.L (SP)+,D0-D7/A0-A6
0000144C  4CDF 7FFF                513          MOVEM.L (SP)+,D0-D7/A0-A6 ;double restore because of DF hack workaround
00001450  588F                     514          ADD.L   #4,SP       ;account for USP, it'll fix itself (it shouldn't be used)
00001452                           515                                  ;EASY68k simulator starts in supervisor mode
00001452  46DF                     516          MOVE    (SP)+,SR
00001454  588F                     517          ADD.L   #4,SP       ;skip saved stack
00001456  9FFC 00000086            518          SUB.L   #134,SP     ;find data again
0000145C  2417                     519          MOVE.L  (SP),D2
0000145E  DFFC 0000008A            520          ADD.L   #138,SP     ;go back to original spot
00001464  6000 FC0A                521          BRA     SHELL
00001468                           522  
00001468                           523  MRD3:
00001468  5289                     524          ADD.L   #1,A1
0000146A  0C19 0020                525          CMP.B   #$20,(A1)+
0000146E  6600 12DC                526          BNE     ERRORSR
00001472  2449                     527          MOVE.L  A1,A2
00001474  264A                     528          MOVE.L  A2,A3
00001476  4EB9 00001768            529          JSR     MRDFINDDATA
0000147C  538B                     530          SUB.L   #1,A3
0000147E  4EB9 00002798            531          JSR     ASCII_ADDRESS   ;convert data to hex
00001484  2F05                     532          MOVE.L  D5,-(SP)        ;store it temporarily
00001486  588F                     533          ADD.L   #4,SP       ;dont lose data
00001488  4CDF 7FFF                534          MOVEM.L (SP)+,D0-D7/A0-A6
0000148C  4CDF 7FFF                535          MOVEM.L (SP)+,D0-D7/A0-A6 ;double restore because of DF hack workaround
00001490  588F                     536          ADD.L   #4,SP       ;account for USP, it'll fix itself (it shouldn't be used)
00001492                           537                                  ;EASY68k simulator starts in supervisor mode
00001492  46DF                     538          MOVE    (SP)+,SR
00001494  588F                     539          ADD.L   #4,SP       ;skip saved stack
00001496  9FFC 00000086            540          SUB.L   #134,SP     ;find data again
0000149C  2617                     541          MOVE.L  (SP),D3
0000149E  DFFC 0000008A            542          ADD.L   #138,SP     ;go back to original spot
000014A4  6000 FBCA                543          BRA     SHELL
000014A8                           544  
000014A8                           545  MRD4:
000014A8  5289                     546          ADD.L   #1,A1
000014AA  0C19 0020                547          CMP.B   #$20,(A1)+
000014AE  6600 129C                548          BNE     ERRORSR
000014B2  2449                     549          MOVE.L  A1,A2
000014B4  264A                     550          MOVE.L  A2,A3
000014B6  4EB9 00001768            551          JSR     MRDFINDDATA
000014BC  538B                     552          SUB.L   #1,A3
000014BE  4EB9 00002798            553          JSR     ASCII_ADDRESS   ;convert data to hex
000014C4  2F05                     554          MOVE.L  D5,-(SP)        ;store it temporarily
000014C6  588F                     555          ADD.L   #4,SP       ;dont lose data
000014C8  4CDF 7FFF                556          MOVEM.L (SP)+,D0-D7/A0-A6
000014CC  4CDF 7FFF                557          MOVEM.L (SP)+,D0-D7/A0-A6 ;double restore because of DF hack workaround
000014D0  588F                     558          ADD.L   #4,SP       ;account for USP, it'll fix itself (it shouldn't be used)
000014D2                           559                                  ;EASY68k simulator starts in supervisor mode
000014D2  46DF                     560          MOVE    (SP)+,SR
000014D4  588F                     561          ADD.L   #4,SP       ;skip saved stack
000014D6  9FFC 00000086            562          SUB.L   #134,SP     ;find data again
000014DC  2817                     563          MOVE.L  (SP),D4
000014DE  DFFC 0000008A            564          ADD.L   #138,SP     ;go back to original spot
000014E4  6000 FB8A                565          BRA     SHELL
000014E8                           566  
000014E8                           567  MRD5:
000014E8  5289                     568          ADD.L   #1,A1
000014EA  0C19 0020                569          CMP.B   #$20,(A1)+
000014EE  6600 125C                570          BNE     ERRORSR
000014F2  2449                     571          MOVE.L  A1,A2
000014F4  264A                     572          MOVE.L  A2,A3
000014F6  4EB9 00001768            573          JSR     MRDFINDDATA
000014FC  538B                     574          SUB.L   #1,A3
000014FE  4EB9 00002798            575          JSR     ASCII_ADDRESS   ;convert data to hex
00001504  2F05                     576          MOVE.L  D5,-(SP)        ;store it temporarily
00001506  588F                     577          ADD.L   #4,SP       ;dont lose data
00001508  4CDF 7FFF                578          MOVEM.L (SP)+,D0-D7/A0-A6
0000150C  4CDF 7FFF                579          MOVEM.L (SP)+,D0-D7/A0-A6 ;double restore because of DF hack workaround
00001510  588F                     580          ADD.L   #4,SP       ;account for USP, it'll fix itself (it shouldn't be used)
00001512                           581                                  ;EASY68k simulator starts in supervisor mode
00001512  46DF                     582          MOVE    (SP)+,SR
00001514  588F                     583          ADD.L   #4,SP       ;skip saved stack
00001516  9FFC 00000086            584          SUB.L   #134,SP     ;find data again
0000151C  2A17                     585          MOVE.L  (SP),D5
0000151E  DFFC 0000008A            586          ADD.L   #138,SP     ;go back to original spot
00001524  6000 FB4A                587          BRA     SHELL
00001528                           588  
00001528                           589  MRD6:
00001528  5289                     590          ADD.L   #1,A1
0000152A  0C19 0020                591          CMP.B   #$20,(A1)+
0000152E  6600 121C                592          BNE     ERRORSR
00001532  2449                     593          MOVE.L  A1,A2
00001534  264A                     594          MOVE.L  A2,A3
00001536  4EB9 00001768            595          JSR     MRDFINDDATA
0000153C  538B                     596          SUB.L   #1,A3
0000153E  4EB9 00002798            597          JSR     ASCII_ADDRESS   ;convert data to hex
00001544  2F05                     598          MOVE.L  D5,-(SP)        ;store it temporarily
00001546  588F                     599          ADD.L   #4,SP       ;dont lose data
00001548  4CDF 7FFF                600          MOVEM.L (SP)+,D0-D7/A0-A6
0000154C  4CDF 7FFF                601          MOVEM.L (SP)+,D0-D7/A0-A6 ;double restore because of DF hack workaround
00001550  588F                     602          ADD.L   #4,SP       ;account for USP, it'll fix itself (it shouldn't be used)
00001552                           603                                  ;EASY68k simulator starts in supervisor mode
00001552  46DF                     604          MOVE    (SP)+,SR
00001554  588F                     605          ADD.L   #4,SP       ;skip saved stack
00001556  9FFC 00000086            606          SUB.L   #134,SP     ;find data again
0000155C  2C17                     607          MOVE.L  (SP),D6
0000155E  DFFC 0000008A            608          ADD.L   #138,SP     ;go back to original spot
00001564  6000 FB0A                609          BRA     SHELL
00001568                           610  
00001568                           611  MRD7:
00001568  5289                     612          ADD.L   #1,A1
0000156A  0C19 0020                613          CMP.B   #$20,(A1)+
0000156E  6600 11DC                614          BNE     ERRORSR
00001572  2449                     615          MOVE.L  A1,A2
00001574  264A                     616          MOVE.L  A2,A3
00001576  4EB9 00001768            617          JSR     MRDFINDDATA
0000157C  538B                     618          SUB.L   #1,A3
0000157E  4EB9 00002798            619          JSR     ASCII_ADDRESS   ;convert data to hex
00001584  2F05                     620          MOVE.L  D5,-(SP)        ;store it temporarily
00001586  588F                     621          ADD.L   #4,SP       ;dont lose data
00001588  4CDF 7FFF                622          MOVEM.L (SP)+,D0-D7/A0-A6
0000158C  4CDF 7FFF                623          MOVEM.L (SP)+,D0-D7/A0-A6 ;double restore because of DF hack workaround
00001590  588F                     624          ADD.L   #4,SP       ;account for USP, it'll fix itself (it shouldn't be used)
00001592                           625                                  ;EASY68k simulator starts in supervisor mode
00001592  46DF                     626          MOVE    (SP)+,SR
00001594  588F                     627         ADD.L   #4,SP       ;skip saved stack
00001596  9FFC 00000086            628          SUB.L   #134,SP     ;find data again
0000159C  2E17                     629          MOVE.L  (SP),D7
0000159E  DFFC 0000008A            630          ADD.L   #138,SP     ;go back to original spot
000015A4  6000 FACA                631          BRA     SHELL
000015A8                           632  
000015A8                           633  MRA0:
000015A8  5289                     634          ADD.L   #1,A1
000015AA  0C19 0020                635          CMP.B   #$20,(A1)+
000015AE  6600 119C                636          BNE     ERRORSR
000015B2  2449                     637          MOVE.L  A1,A2
000015B4  264A                     638          MOVE.L  A2,A3
000015B6  4EB9 00001768            639          JSR     MRDFINDDATA
000015BC  538B                     640          SUB.L   #1,A3
000015BE  4EB9 00002798            641          JSR     ASCII_ADDRESS   ;convert data to hex
000015C4  2F05                     642          MOVE.L  D5,-(SP)        ;store it temporarily
000015C6  588F                     643          ADD.L   #4,SP       ;dont lose data
000015C8  4CDF 7FFF                644          MOVEM.L (SP)+,D0-D7/A0-A6
000015CC  4CDF 7FFF                645          MOVEM.L (SP)+,D0-D7/A0-A6 ;double restore because of DF hack workaround
000015D0  588F                     646          ADD.L   #4,SP       ;account for USP, it'll fix itself (it shouldn't be used)
000015D2                           647                                  ;EASY68k simulator starts in supervisor mode
000015D2  46DF                     648          MOVE    (SP)+,SR
000015D4  588F                     649          ADD.L   #4,SP       ;skip saved stack
000015D6  9FFC 00000086            650          SUB.L   #134,SP     ;find data again
000015DC  2057                     651          MOVE.L  (SP),A0
000015DE  DFFC 0000008A            652          ADD.L   #138,SP     ;go back to original spot
000015E4  6000 FA8A                653          BRA     SHELL
000015E8                           654  MRA1:
000015E8  5289                     655          ADD.L   #1,A1
000015EA  0C19 0020                656          CMP.B   #$20,(A1)+
000015EE  6600 115C                657          BNE     ERRORSR
000015F2  2449                     658          MOVE.L  A1,A2
000015F4  264A                     659          MOVE.L  A2,A3
000015F6  4EB9 00001768            660          JSR     MRDFINDDATA
000015FC  538B                     661          SUB.L   #1,A3
000015FE  4EB9 00002798            662          JSR     ASCII_ADDRESS   ;convert data to hex
00001604  2F05                     663          MOVE.L  D5,-(SP)        ;store it temporarily
00001606  588F                     664          ADD.L   #4,SP       ;dont lose data
00001608  4CDF 7FFF                665          MOVEM.L (SP)+,D0-D7/A0-A6
0000160C  4CDF 7FFF                666          MOVEM.L (SP)+,D0-D7/A0-A6 ;double restore because of DF hack workaround
00001610  588F                     667          ADD.L   #4,SP       ;account for USP, it'll fix itself (it shouldn't be used)
00001612                           668                                  ;EASY68k simulator starts in supervisor mode
00001612  46DF                     669          MOVE    (SP)+,SR
00001614  588F                     670         ADD.L   #4,SP       ;skip saved stack
00001616  9FFC 00000086            671          SUB.L   #134,SP     ;find data again
0000161C  2257                     672          MOVE.L  (SP),A1
0000161E  DFFC 0000008A            673          ADD.L   #138,SP     ;go back to original spot
00001624  6000 FA4A                674          BRA     SHELL
00001628                           675  
00001628                           676  MRA2:
00001628  5289                     677          ADD.L   #1,A1
0000162A  0C19 0020                678          CMP.B   #$20,(A1)+
0000162E  6600 111C                679          BNE     ERRORSR
00001632  2449                     680          MOVE.L  A1,A2
00001634  264A                     681          MOVE.L  A2,A3
00001636  4EB9 00001768            682          JSR     MRDFINDDATA
0000163C  538B                     683          SUB.L   #1,A3
0000163E  4EB9 00002798            684          JSR     ASCII_ADDRESS   ;convert data to hex
00001644  2F05                     685          MOVE.L  D5,-(SP)        ;store it temporarily
00001646  588F                     686          ADD.L   #4,SP       ;dont lose data
00001648  4CDF 7FFF                687          MOVEM.L (SP)+,D0-D7/A0-A6
0000164C  4CDF 7FFF                688          MOVEM.L (SP)+,D0-D7/A0-A6 ;double restore because of DF hack workaround
00001650  588F                     689          ADD.L   #4,SP       ;account for USP, it'll fix itself (it shouldn't be used)
00001652                           690                                  ;EASY68k simulator starts in supervisor mode
00001652  46DF                     691          MOVE    (SP)+,SR
00001654  588F                     692          ADD.L   #4,SP       ;skip saved stack
00001656  9FFC 00000086            693          SUB.L   #134,SP     ;find data again
0000165C  2457                     694          MOVE.L  (SP),A2
0000165E  DFFC 0000008A            695          ADD.L   #138,SP     ;go back to original spot
00001664  6000 FA0A                696          BRA     SHELL
00001668                           697          
00001668                           698  MRA3:
00001668  5289                     699          ADD.L   #1,A1
0000166A  0C19 0020                700          CMP.B   #$20,(A1)+
0000166E  6600 10DC                701          BNE     ERRORSR
00001672  2449                     702          MOVE.L  A1,A2
00001674  264A                     703          MOVE.L  A2,A3
00001676  4EB9 00001768            704          JSR     MRDFINDDATA
0000167C  538B                     705          SUB.L   #1,A3
0000167E  4EB9 00002798            706          JSR     ASCII_ADDRESS   ;convert data to hex
00001684  2F05                     707          MOVE.L  D5,-(SP)        ;store it temporarily
00001686  588F                     708          ADD.L   #4,SP       ;dont lose data
00001688  4CDF 7FFF                709          MOVEM.L (SP)+,D0-D7/A0-A6
0000168C  4CDF 7FFF                710          MOVEM.L (SP)+,D0-D7/A0-A6 ;double restore because of DF hack workaround
00001690  588F                     711          ADD.L   #4,SP       ;account for USP, it'll fix itself (it shouldn't be used)
00001692                           712                                  ;EASY68k simulator starts in supervisor mode
00001692  46DF                     713          MOVE    (SP)+,SR
00001694  588F                     714          ADD.L   #4,SP       ;skip saved stack
00001696  9FFC 00000086            715          SUB.L   #134,SP     ;find data again
0000169C  2657                     716          MOVE.L  (SP),A3
0000169E  DFFC 0000008A            717          ADD.L   #138,SP     ;go back to original spot
000016A4  6000 F9CA                718          BRA     SHELL
000016A8                           719  
000016A8                           720  MRA4:
000016A8  5289                     721          ADD.L   #1,A1
000016AA  0C19 0020                722          CMP.B   #$20,(A1)+
000016AE  6600 109C                723          BNE     ERRORSR
000016B2  2449                     724          MOVE.L  A1,A2
000016B4  264A                     725          MOVE.L  A2,A3
000016B6  4EB9 00001768            726          JSR     MRDFINDDATA
000016BC  538B                     727          SUB.L   #1,A3
000016BE  4EB9 00002798            728          JSR     ASCII_ADDRESS   ;convert data to hex
000016C4  2F05                     729          MOVE.L  D5,-(SP)        ;store it temporarily
000016C6  588F                     730          ADD.L   #4,SP       ;dont lose data
000016C8  4CDF 7FFF                731          MOVEM.L (SP)+,D0-D7/A0-A6
000016CC  4CDF 7FFF                732          MOVEM.L (SP)+,D0-D7/A0-A6 ;double restore because of DF hack workaround
000016D0  588F                     733          ADD.L   #4,SP       ;account for USP, it'll fix itself (it shouldn't be used)
000016D2                           734                                  ;EASY68k simulator starts in supervisor mode
000016D2  46DF                     735          MOVE    (SP)+,SR
000016D4  588F                     736          ADD.L   #4,SP       ;skip saved stack
000016D6  9FFC 00000086            737          SUB.L   #134,SP     ;find data again
000016DC  2857                     738          MOVE.L  (SP),A4
000016DE  DFFC 0000008A            739          ADD.L   #138,SP     ;go back to original spot
000016E4  6000 F98A                740          BRA     SHELL
000016E8                           741  
000016E8                           742  MRA5:
000016E8  5289                     743          ADD.L   #1,A1
000016EA  0C19 0020                744          CMP.B   #$20,(A1)+
000016EE  6600 105C                745          BNE     ERRORSR
000016F2  2449                     746          MOVE.L  A1,A2
000016F4  264A                     747          MOVE.L  A2,A3
000016F6  4EB9 00001768            748          JSR     MRDFINDDATA
000016FC  538B                     749          SUB.L   #1,A3
000016FE  4EB9 00002798            750          JSR     ASCII_ADDRESS   ;convert data to hex
00001704  2F05                     751          MOVE.L  D5,-(SP)        ;store it temporarily
00001706  588F                     752          ADD.L   #4,SP       ;dont lose data
00001708  4CDF 7FFF                753          MOVEM.L (SP)+,D0-D7/A0-A6
0000170C  4CDF 7FFF                754          MOVEM.L (SP)+,D0-D7/A0-A6 ;double restore because of DF hack workaround
00001710  588F                     755          ADD.L   #4,SP       ;account for USP, it'll fix itself (it shouldn't be used)
00001712                           756                                  ;EASY68k simulator starts in supervisor mode
00001712  46DF                     757          MOVE    (SP)+,SR
00001714  588F                     758         ADD.L   #4,SP       ;skip saved stack
00001716  9FFC 00000086            759          SUB.L   #134,SP     ;find data again
0000171C  2A57                     760          MOVE.L  (SP),A5
0000171E  DFFC 0000008A            761          ADD.L   #138,SP     ;go back to original spot
00001724  6000 F94A                762          BRA     SHELL
00001728                           763  
00001728                           764  MRA6:
00001728  5289                     765          ADD.L   #1,A1
0000172A  0C19 0020                766          CMP.B   #$20,(A1)+
0000172E  6600 101C                767          BNE     ERRORSR
00001732  2449                     768          MOVE.L  A1,A2
00001734  264A                     769          MOVE.L  A2,A3
00001736  4EB9 00001768            770          JSR     MRDFINDDATA
0000173C  538B                     771          SUB.L   #1,A3
0000173E  4EB9 00002798            772          JSR     ASCII_ADDRESS   ;convert data to hex
00001744  2F05                     773          MOVE.L  D5,-(SP)        ;store it temporarily
00001746  588F                     774          ADD.L   #4,SP       ;dont lose data
00001748  4CDF 7FFF                775          MOVEM.L (SP)+,D0-D7/A0-A6
0000174C  4CDF 7FFF                776          MOVEM.L (SP)+,D0-D7/A0-A6 ;double restore because of DF hack workaround
00001750  588F                     777          ADD.L   #4,SP       ;account for USP, it'll fix itself (it shouldn't be used)
00001752                           778                                  ;EASY68k simulator starts in supervisor mode
00001752  46DF                     779          MOVE    (SP)+,SR
00001754  588F                     780          ADD.L   #4,SP       ;skip saved stack
00001756  9FFC 00000086            781          SUB.L   #134,SP     ;find data again
0000175C  2C57                     782          MOVE.L  (SP),A6
0000175E  DFFC 0000008A            783          ADD.L   #138,SP     ;go back to original spot
00001764  6000 F90A                784          BRA     SHELL
00001768                           785  
00001768                           786  MRDFINDDATA:
00001768  0C1B 0000                787          CMP.B   #$00,(A3)+
0000176C  6700 0004                788          BEQ     GOBACK
00001770  60F6                     789          BRA     MRDFINDDATA
00001772  4E75                     790  GOBACK: RTS
00001774                           791          
00001774                           792  
00001774  6000 F980                793          BRA RESTORE
00001778                           794  *--------------------REQUIRED COMMAND DEFINITION START---------------------------------*
00001778                           795  *--------------------------------------------------------------------------------------*
00001778  43F8 3063                796  HELP:       LEA     HTXT,A1     ;list of commands test
0000177C  323C 0011                797              MOVE.W  #17,D1
00001780  103C 0000                798              MOVE.B  #0,D0
00001784  4E4F                     799              TRAP    #15
00001786  323C 0000                800              MOVE.W  #0,D1       ;newline
0000178A  4E4F                     801              TRAP    #15
0000178C                           802              
0000178C  43F8 3074                803              LEA     HTXT1,A1    ;mem display command
00001790  323C 004B                804              MOVE.W  #75,D1
00001794  103C 0000                805              MOVE.B  #0,D0
00001798  4E4F                     806              TRAP    #15
0000179A  43F8 30BF                807              LEA     HTXT1A,A1   ;mem display
0000179E  323C 003D                808              MOVE.W  #61,D1
000017A2  103C 0000                809              MOVE.B  #0,D0
000017A6  4E4F                     810              TRAP    #15
000017A8  43F8 30FC                811              LEA     HTXT1B,A1   ;mem display
000017AC  323C 0014                812              MOVE.W  #20,D1
000017B0  103C 0000                813              MOVE.B  #0,D0
000017B4  4E4F                     814              TRAP    #15
000017B6  323C 0000                815              MOVE.W  #0,D1       ;newline
000017BA  4E4F                     816              TRAP    #15
000017BC                           817              
000017BC  43F8 3110                818              LEA     HTXT2,A1    ;hxdec command text
000017C0  323C 004B                819              MOVE.W  #75,D1
000017C4  103C 0000                820              MOVE.B  #0,D0
000017C8  4E4F                     821              TRAP    #15
000017CA  123C 0000                822              MOVE.B  #0,D1       ;newline
000017CE  4E4F                     823              TRAP    #15
000017D0                           824              
000017D0  43F8 315B                825              LEA     HTXT3,A1    ;sort command text
000017D4  323C 0045                826              MOVE.W  #69,D1
000017D8  103C 0000                827              MOVE.B  #0,D0
000017DC  4E4F                     828              TRAP    #15
000017DE  43F8 31A0                829              LEA     HTXT3A,A1    ;sort command text continued
000017E2  323C 0039                830              MOVE.W  #57,D1
000017E6  103C 0000                831              MOVE.B  #0,D0
000017EA  4E4F                     832              TRAP    #15
000017EC  43F8 31D9                833              LEA     HTXT3B,A1    ;sort command text continued
000017F0  323C 0014                834              MOVE.W  #20,D1
000017F4  103C 0000                835              MOVE.B  #0,D0
000017F8  4E4F                     836              TRAP    #15
000017FA  43F8 31ED                837              LEA     HTXT3C,A1    ;sort command text continued
000017FE  323C 0015                838              MOVE.W  #21,D1
00001802  103C 0000                839              MOVE.B  #0,D0
00001806  4E4F                     840              TRAP    #15
00001808  43F8 3202                841              LEA     HTXT3D,A1    ;sort command text continued
0000180C  323C 001D                842              MOVE.W  #29,D1
00001810  103C 0000                843              MOVE.B  #0,D0
00001814  4E4F                     844              TRAP    #15
00001816  43F8 321F                845              LEA     HTXT3E,A1    ;sort command text continued
0000181A  323C 0033                846              MOVE.W  #51,D1
0000181E  103C 0000                847              MOVE.B  #0,D0
00001822  4E4F                     848              TRAP    #15
00001824  123C 0000                849              MOVE.B  #0,D1       ;newline
00001828  4E4F                     850              TRAP    #15
0000182A                           851              
0000182A  43F8 3252                852              LEA     HTXT4,A1    ;memory modify command text 
0000182E  323C 0047                853              MOVE.W  #71,D1
00001832  103C 0000                854              MOVE.B  #0,D0
00001836  4E4F                     855              TRAP    #15
00001838  43F8 3299                856              LEA     HTXT4A,A1    ;mem modify command text continued
0000183C  323C 0045                857              MOVE.W  #69,D1
00001840  103C 0000                858              MOVE.B  #0,D0
00001844  4E4F                     859              TRAP    #15
00001846  43F8 32DE                860              LEA     HTXT4B,A1    ;mem modify command text continued
0000184A  323C 001B                861              MOVE.W  #27,D1
0000184E  103C 0000                862              MOVE.B  #0,D0
00001852  4E4F                     863              TRAP    #15
00001854  43F8 32F9                864              LEA     HTXT4C,A1    ;mem modify command text continued
00001858  323C 001E                865              MOVE.W  #30,D1
0000185C  103C 0000                866              MOVE.B  #0,D0
00001860  4E4F                     867              TRAP    #15
00001862  43F8 3317                868              LEA     HTXT4D,A1    ;mem modify command text continued
00001866  323C 001F                869              MOVE.W  #31,D1
0000186A  103C 0000                870              MOVE.B  #0,D0
0000186E  4E4F                     871              TRAP    #15
00001870  43F8 3336                872              LEA     HTXT4E,A1    ;mem modify command text continued
00001874  323C 0024                873              MOVE.W  #36,D1
00001878  103C 0000                874              MOVE.B  #0,D0
0000187C  4E4F                     875              TRAP    #15
0000187E  123C 0000                876              MOVE.B  #0,D1
00001882  4E4F                     877              TRAP    #15         ;newline
00001884                           878              
00001884  43F8 335A                879              LEA     HTXT5,A1    ;memory set command text 
00001888  323C 0046                880              MOVE.W  #70,D1
0000188C  103C 0000                881              MOVE.B  #0,D0
00001890  4E4F                     882              TRAP    #15
00001892  43F8 33A0                883              LEA     HTXT5A,A1    ;memory set command text continued
00001896  323C 0009                884              MOVE.W  #9,D1
0000189A  103C 0000                885              MOVE.B  #0,D0
0000189E  4E4F                     886              TRAP    #15
000018A0  123C 0000                887              MOVE.B  #0,D1       ;newline
000018A4  4E4F                     888              TRAP    #15
000018A6                           889              
000018A6  43F8 33A9                890              LEA     HTXT6,A1    ;block fill command text
000018AA  323C 0045                891              MOVE.W  #69,D1
000018AE  103C 0000                892              MOVE.B  #0,D0
000018B2  4E4F                     893              TRAP    #15
000018B4  43F8 33EF                894              LEA     HTXT6A,A1    ;block fill command text
000018B8  323C 0048                895              MOVE.W  #72,D1
000018BC  103C 0000                896              MOVE.B  #0,D0
000018C0  4E4F                     897              TRAP    #15
000018C2  43F8 3437                898              LEA     HTXT6B,A1    ;block fill command text
000018C6  323C 0026                899              MOVE.W  #38,D1
000018CA  103C 0000                900              MOVE.B  #0,D0
000018CE  4E4F                     901              TRAP    #15
000018D0  123C 0000                902              MOVE.B  #0,D1
000018D4  4E4F                     903              TRAP    #15         ;newline
000018D6                           904              
000018D6                           905              
000018D6  43F8 345D                906              LEA     HTXT7,A1    ;block move command text
000018DA  323C 0044                907              MOVE.W  #68,D1
000018DE  103C 0000                908              MOVE.B  #0,D0
000018E2  4E4F                     909              TRAP    #15
000018E4  43F8 34A1                910              LEA     HTXT7A,A1    ;block move command text
000018E8  323C 0048                911              MOVE.W  #72,D1
000018EC  103C 0000                912              MOVE.B  #0,D0
000018F0  4E4F                     913              TRAP    #15
000018F2  43F8 34E9                914              LEA     HTXT7B,A1    ;block move command text
000018F6  323C 0018                915              MOVE.W  #24,D1
000018FA  103C 0000                916              MOVE.B  #0,D0
000018FE  4E4F                     917              TRAP    #15
00001900  123C 0000                918              MOVE.B  #0,D1       ;newline
00001904  4E4F                     919              TRAP    #15
00001906                           920              
00001906  43F8 3501                921              LEA     HTXT8,A1    ;block test command text
0000190A  323C 0047                922              MOVE.W  #71,D1
0000190E  103C 0000                923              MOVE.B  #0,D0
00001912  4E4F                     924              TRAP    #15
00001914  43F8 3548                925              LEA     HTXT8A,A1    ;block test command text
00001918  323C 0028                926              MOVE.W  #40,D1
0000191C  103C 0000                927              MOVE.B  #0,D0
00001920  4E4F                     928              TRAP    #15
00001922  123C 0000                929              MOVE.B  #0,D1       ;newline
00001926  4E4F                     930              TRAP    #15
00001928                           931              
00001928  43F8 3570                932              LEA     HTXT9,A1    ;block search command text
0000192C  323C 0046                933              MOVE.W  #70,D1
00001930  103C 0000                934              MOVE.B  #0,D0
00001934  4E4F                     935              TRAP    #15
00001936  43F8 35B8                936              LEA     HTXT9A,A1    ;block search command text
0000193A  323C 002D                937              MOVE.W  #45,D1
0000193E  103C 0000                938              MOVE.B  #0,D0
00001942  4E4F                     939              TRAP    #15
00001944  123C 0000                940              MOVE.B  #0,D1       ;newline
00001948  4E4F                     941              TRAP    #15
0000194A                           942              
0000194A  43F8 35E5                943              LEA     HTXT10,A1    ;go command text
0000194E  323C 003D                944              MOVE.W  #61,D1
00001952  103C 0000                945              MOVE.B  #0,D0
00001956  4E4F                     946              TRAP    #15
00001958  123C 0000                947              MOVE.B  #0,D1      ;newline
0000195C  4E4F                     948              TRAP    #15
0000195E                           949  
0000195E  43F8 3622                950              LEA     HTXT11,A1   ;df command text   
00001962  323C 0038                951              MOVE.W  #56,D1
00001966  103C 0000                952              MOVE.B  #0,D0
0000196A  4E4F                     953              TRAP    #15
0000196C  123C 0000                954              MOVE.B  #0,D1
00001970  4E4F                     955              TRAP    #15
00001972                           956              
00001972  43F8 365A                957              LEA     HTXT12,A1   ;help command text
00001976  323C 0042                958              MOVE.W  #66,D1
0000197A  103C 0000                959              MOVE.B  #0,D0
0000197E  4E4F                     960              TRAP    #15
00001980  123C 0000                961              MOVE.B  #0,D1       ;newline
00001984  4E4F                     962              TRAP    #15   
00001986                           963              
00001986  43F8 369C                964              LEA     HTXT13,A1   ;echo command text   
0000198A  323C 0034                965              MOVE.W  #52,D1
0000198E  103C 0000                966              MOVE.B  #0,D0
00001992  4E4F                     967              TRAP    #15
00001994  123C 0000                968              MOVE.B  #0,D1       ;newline
00001998  4E4F                     969              TRAP    #15
0000199A                           970              
0000199A  43F8 36CF                971              LEA     HTXT14,A1   ;modify register command text   
0000199E  323C 0047                972              MOVE.W  #71,D1
000019A2  103C 0000                973              MOVE.B  #0,D0
000019A6  4E4F                     974              TRAP    #15
000019A8  43F8 3716                975              LEA     HTXT15,A1   ;modify register command text   
000019AC  323C 003F                976              MOVE.W  #63,D1
000019B0  103C 0000                977              MOVE.B  #0,D0
000019B4  4E4F                     978              TRAP    #15
000019B6  123C 0000                979              MOVE.B  #0,D1       ;newline
000019BA  4E4F                     980              TRAP    #15
000019BC                           981   
000019BC  6000 F738                982              BRA     RESTORE  
000019C0                           983  *--------------------------------------------------------------------------------------*
000019C0                           984  *Fix ASCII String input? ask in lab*
000019C0  45F8 3000                985  MEMSET:     LEA     BUFFER,A2
000019C4  568A                     986              ADD.L   #3,A2
000019C6  264A                     987              MOVE.L  A2,A3   ;set up to find end
000019C8  0C1B 0000                988  FINDEND:    CMP.B   #$00,(A3)+
000019CC  6700 0004                989              BEQ     MEMCONT
000019D0  60F6                     990              BRA     FINDEND
000019D2  538B                     991  MEMCONT:    SUB.L  #1,A3   ;get rid of off by one erro
000019D4  121A                     992              MOVE.B  (A2)+,D1
000019D6  1412                     993              MOVE.B  (A2),D2
000019D8  1601                     994              MOVE.B  D1,D3       ;pass value to subroutine
000019DA  4EB9 0000275C            995              JSR     ASCII_TO_BCD           
000019E0  1203                     996              MOVE.B  D3,D1       ;get converted value
000019E2  1602                     997              MOVE.B  D2,D3       ;pass value
000019E4  4EB9 0000275C            998              JSR     ASCII_TO_BCD
000019EA  1403                     999              MOVE.B  D3,D2       ;get returned value
000019EC  1601                    1000              MOVE.B  D1,D3
000019EE  4EB9 0000277A           1001              JSR     BCD_TO_HEX
000019F4  1203                    1002              MOVE.B  D3,D1
000019F6  1602                    1003              MOVE.B  D2,D3
000019F8  4EB9 0000277A           1004              JSR     BCD_TO_HEX
000019FE  1403                    1005              MOVE.B  D3,D2
00001A00  E999                    1006              ROL.L   #4,D1       ;put data in correct place
00001A02  D441                    1007              ADD     D1,D2       ;get combined data input
00001A04  548A                    1008              ADD.L   #2,A2       ;go to start of address
00001A06  4EB9 00002798           1009              JSR     ASCII_ADDRESS  ;get address in workable form
00001A0C  2845                    1010              MOVE.L  D5,A4       ;load target address
00001A0E  1882                    1011              MOVE.B  D2,(A4)       ;put data in target address
00001A10  6000 F6E4               1012              BRA     RESTORE                 ;return to shell
00001A14                          1013  *--------------------------------------------------------------------------------------*
00001A14  45F8 3000               1014  MEMDISP:    LEA     BUFFER,A2
00001A18  7C01                    1015              MOVE.L  #1,D6       ;counter for how many times to loop
00001A1A  5A8A                    1016              ADD.L   #5,A2       ;get first address
00001A1C  264A                    1017              MOVE.L  A2,A3       
00001A1E  0C1B 0020               1018  FINDEND1:   CMP.B   #$20,(A3)+
00001A22  6700 0004               1019              BEQ     FINDNEXT
00001A26  60F6                    1020              BRA     FINDEND1  
00001A28  284B                    1021  FINDNEXT:   MOVE.L  A3,A4
00001A2A  2A4B                    1022              MOVE.L  A3,A5
00001A2C  538B                    1023              SUB.L   #1,A3   ;get rid of off by one error
00001A2E  0C1D 0000               1024  FINDEND2:   CMP.B   #$00,(A5)+
00001A32  6700 0004               1025              BEQ     MEMNEXT
00001A36  60F6                    1026              BRA     FINDEND2
00001A38  538D                    1027  MEMNEXT:    SUB.L   #1,A5   ;off by one error
00001A3A  4EB9 00002798           1028              JSR     ASCII_ADDRESS
00001A40  2C45                    1029              MOVE.L  D5,A6   ;put 1st address in A6
00001A42  244C                    1030              MOVE.L  A4,A2
00001A44  264D                    1031              MOVE.L  A5,A3
00001A46  4EB9 00002798           1032              JSR ASCII_ADDRESS
00001A4C  2A45                    1033              MOVE.L  D5,A5   ;second address in A5
00001A4E  204E                    1034              MOVE.L  A6,A0   ;for second run through
00001A50  224D                    1035              MOVE.L  A5,A1   ;see above comment
00001A52  D3FC 00000010           1036              ADD.L   #16,A1 ;16 byte offset
00001A58  48E7 0040               1037              MOVEM.L A1,-(SP)
00001A5C  BBCE                    1038  DISPLOOP:   CMP.L   A6,A5
00001A5E  6D00 0034               1039              BLT     SECONDLOOP
00001A62  260E                    1040              MOVE.L  A6,D3
00001A64  4EB9 000027D8           1041              JSR     HEXTOASCII
00001A6A  97CA                    1042              SUB.L   A2,A3
00001A6C  220B                    1043              MOVE.L  A3,D1   ;number of ascii values to display
00001A6E  224A                    1044              MOVE.L  A2,A1
00001A70  7001                    1045              MOVE.L  #1,D0
00001A72  4E4F                    1046              TRAP    #15
00001A74  43F8 3796               1047              LEA     SPACE,A1
00001A78  7201                    1048              MOVE.L #1,D1
00001A7A  4E4F                    1049              TRAP    #15
00001A7C  4283                    1050              CLR.L   D3
00001A7E  1616                    1051              MOVE.B  (A6),D3
00001A80  4EB9 000027D8           1052              JSR     HEXTOASCII
00001A86  97CA                    1053              SUB.L   A2,A3
00001A88  220B                    1054              MOVE.L  A3,D1
00001A8A  224A                    1055              MOVE.L  A2,A1
00001A8C  7000                    1056              MOVE.L  #0,D0
00001A8E  4E4F                    1057              TRAP    #15
00001A90  528E                    1058              ADD.L   #1,A6
00001A92  60C8                    1059              BRA     DISPLOOP
00001A94                          1060              
00001A94                          1061  SECONDLOOP: 
00001A94  103C 0000               1062              MOVE.B  #0,D0
00001A98  123C 0000               1063              MOVE.B  #0,D1
00001A9C  4E4F                    1064              TRAP    #15
00001A9E  4CDF 0200               1065              MOVEM.L (SP)+,A1
00001AA2  2C48                    1066              MOVE.L  A0,A6   ;reinit
00001AA4  2A49                    1067              MOVE.L  A1,A5
00001AA6  5386                    1068              SUBI.L  #1,D6
00001AA8  BCBC 00000000           1069              CMP.L   #$0,D6
00001AAE  67AC                    1070              BEQ     DISPLOOP
00001AB0  598F                    1071              SUB.L   #4,SP   ;off by long error on stack
00001AB2  6000 F642               1072              BRA     RESTORE
00001AB6                          1073              
00001AB6                          1074  *--------------------------------------------------------------------------------------*
00001AB6                          1075  
00001AB6  45F8 3000               1076  HXDC:   LEA BUFFER,A2   ;load buffer
00001ABA  5C8A                    1077          ADD.L   #6,A2   ; start of number
00001ABC  264A                    1078          MOVE.L  A2,A3   ;set up end pointer
00001ABE  7201                    1079          MOVE.L  #1,D1   ;set up 16's place
00001AC0  4282                    1080          CLR.L   D2      ;clear total
00001AC2  4283                    1081          CLR.L   D3      ;temp holder for number
00001AC4  4286                    1082          CLR.L   D6      ;Final Value in BCD
00001AC6  283C 00002710           1083          MOVE.L  #10000,D4    ;maximum 10's place of converted number
00001ACC  7A10                    1084          MOVE.L  #16,D5      ;Max number of rotates needed
00001ACE  4BF8 3A00               1085          LEA $3A00,A5
00001AD2  49F8 3A00               1086          LEA $3A00,A4   ;set up start pointer
00001AD6                          1087  FINDLASTNUM:    
00001AD6  0C1B 0000               1088          CMP.B #$00,(A3)+
00001ADA  6700 0004               1089          BEQ     CONVERTMINUS1
00001ADE  60F6                    1090          BRA     FINDLASTNUM
00001AE0                          1091  CONVERTMINUS1:   
00001AE0  538B                    1092               SUB.L   #1,A3 ; cure off by 1 error
00001AE2                          1093  CONVERT:
00001AE2  538B                    1094              SUB.L   #1,A3
00001AE4  B4CB                    1095              CMP   A3,A2
00001AE6  6E00 0028               1096              BGT   ENDCONVERT
00001AEA  0C13 0040               1097              CMP.B   #$40,(A3)
00001AEE  6E00 000A               1098              BGT     HIGHHEX
00001AF2  0413 0030               1099              SUBI.B  #$30,(A3)   ;get hex value
00001AF6  6000 0006               1100              BRA     COMPUTATION
00001AFA  0413 0037               1101  HIGHHEX:     SUBI.B  #$37,(A3)  ;get hex value
00001AFE                          1102  COMPUTATION:
00001AFE  1613                    1103              MOVE.B  (A3),D3 
00001B00  C6C1                    1104              MULU    D1,D3   ;get 16's place
00001B02                          1105             ; DIVU    #16,D3  ;get rid of off by 1 exponent error
00001B02  C2FC 0010               1106              MULU    #16,D1  ;inc 16's place counter
00001B06  1883                    1107              MOVE.B  D3,(A4)
00001B08  538C                    1108              SUB.L   #1,A4
00001B0A  D483                    1109              ADD.L   D3,D2   ;store it in total for debugging 
00001B0C  4283                    1110              CLR.L   D3      ;get rid of any numbers in there   
00001B0E  60D2                    1111              BRA     CONVERT     
00001B10                          1112  ENDCONVERT:                  ;must convert back to ascii for display
00001B10  4283                    1113              CLR.L   D3      ;Cleared for workability
00001B12  84C4                    1114              DIVU    D4,D2   ;get 10's place digit
00001B14  3602                    1115              MOVE.W  D2,D3   ;extract 10's place digit to D3
00001B16  EBBB                    1116              ROL.L   D5,D3   ;put it in its place
00001B18  4242                    1117              CLR.W   D2      ;get rid of whole number
00001B1A  4842                    1118              SWAP    D2      ;keep remainder
00001B1C  5985                    1119              SUBI.L  #4,D5   ;dec rotate counter
00001B1E  DC83                    1120              ADD.L   D3,D6   ;put it into it's place
00001B20  88FC 000A               1121              DIVU    #10,D4  ;go down a 10's place
00001B24  B87C 0000               1122              CMP.W   #0,D4   ;are we done
00001B28  6700 0004               1123              BEQ     OUTPUTNUM
00001B2C  60E2                    1124              BRA     ENDCONVERT
00001B2E                          1125              
00001B2E                          1126  OUTPUTNUM:
00001B2E  2606                    1127             MOVE.L   D6,D3   ;put into register for conversion to ASCII
00001B30  4EB9 000027D8           1128             JSR      HEXTOASCII
00001B36  224A                    1129             MOVEA.L  A2,A1   ;get start of number
00001B38  96CA                    1130             SUBA     A2,A3   ;get how many bytes to output
00001B3A  220B                    1131             MOVE.L   A3,D1   ;for Trap call
00001B3C  7000                    1132             MOVE.L   #0,D0   
00001B3E  4E4F                    1133             TRAP     #15
00001B40                          1134             
00001B40  6000 F5B4               1135             BRA RESTORE
00001B44                          1136  
00001B44                          1137  *--------------------------------------------------------------------------------------*
00001B44                          1138  
00001B44  5289                    1139  SORTW:  ADD.L   #1,A1       ;increment to check for semicolon/dash
00001B46  0C11 002D               1140          CMP.B   #$2D,(A1)   ;check for default
00001B4A  6700 001E               1141          BEQ     DEFAULTTEST
00001B4E  0C19 003B               1142          CMP.B   #$3B,(A1)+
00001B52  6600 0BF8               1143          BNE     ERRORSR
00001B56  0C11 0041               1144          CMP.B   #$41,(A1)   ;is it ascending?
00001B5A  6700 005C               1145          BEQ     ASCEND
00001B5E  0C11 0044               1146          CMP.B   #$44,(A1)   ;or descending?
00001B62  6600 0BE8               1147          BNE     ERRORSR
00001B66  6000 00AE               1148          BRA     DESCEND
00001B6A                          1149          
00001B6A                          1150  DEFAULTTEST:
00001B6A  5289                    1151                  ADD.L  #1,A1   ;check for paren
00001B6C  0C19 0028               1152          CMP.B   #$28,(A1)+  ;(
00001B70  6600 0BDA               1153          BNE     ERRORSR
00001B74  0C19 0064               1154          CMP.B   #$64,(A1)+  ;d
00001B78  6600 0BD2               1155          BNE     ERRORSR
00001B7C  0C19 0065               1156          CMP.B   #$65,(A1)+  ;e
00001B80  6600 0BCA               1157          BNE     ERRORSR
00001B84  0C19 0066               1158          CMP.B   #$66,(A1)+  ;f
00001B88  6600 0BC2               1159          BNE     ERRORSR
00001B8C  0C19 0061               1160          CMP.B   #$61,(A1)+  ;a
00001B90  6600 0BBA               1161          BNE     ERRORSR
00001B94  0C19 0075               1162          CMP.B   #$75,(A1)+  ;u
00001B98  6600 0BB2               1163          BNE     ERRORSR
00001B9C  0C19 006C               1164          CMP.B   #$6C,(A1)+  ;l
00001BA0  6600 0BAA               1165          BNE     ERRORSR     
00001BA4  0C19 0074               1166          CMP.B   #$74,(A1)+  ;t
00001BA8  6600 0BA2               1167          BNE     ERRORSR
00001BAC  0C11 0029               1168          CMP.B   #$29,(A1)  ;)
00001BB0  6600 0B9A               1169          BNE     ERRORSR
00001BB4  6000 0060               1170          BRA     DESCEND
00001BB8                          1171  
00001BB8                          1172          
00001BB8                          1173  ASCEND:
00001BB8  5289                    1174         ADD.L    #1,A1   ;inc
00001BBA  0C11 0020               1175         CMP.B    #$20,(A1)   ;check space
00001BBE  6600 0B8C               1176         BNE      ERRORSR
00001BC2  5289                    1177         ADD.L    #1,A1   ;start of 1st address
00001BC4  2449                    1178         MOVE.L   A1,A2
00001BC6  264A                    1179         MOVE.L   A2,A3
00001BC8                          1180  AGETFIRSTADDRESS:
00001BC8  0C13 0000               1181         CMP.B    #$00,(A3)
00001BCC  6700 0B7E               1182         BEQ      ERRORSR     ;incorrect syntax
00001BD0  0C1B 0020               1183         CMP.B    #$20,(A3)+  ;trying to find the end
00001BD4  6700 0004               1184         BEQ      AFADDCONV
00001BD8  60EE                    1185         BRA      AGETFIRSTADDRESS
00001BDA                          1186  AFADDCONV:
00001BDA  538B                    1187         SUB.L    #1,A3   ;off by one error
00001BDC  4EB9 00002798           1188         JSR ASCII_ADDRESS    ;D5 now has that address 
00001BE2  2845                    1189         MOVE.L D5,A4
00001BE4  528B                    1190         ADD.L    #1,A3   ;start of second address
00001BE6  244B                    1191         MOVE.L   A3,A2   ;setup for second address
00001BE8                          1192  AGETSECADDRESS:
00001BE8  0C1B 0000               1193         CMP.B    #$00,(A3)+  ;trying to find the end
00001BEC  6700 0004               1194         BEQ      ASADDCONV
00001BF0  60F6                    1195         BRA      AGETSECADDRESS
00001BF2                          1196  ASADDCONV:
00001BF2  538B                    1197          SUB.L   #1,A3   ;off by one
00001BF4  4EB9 00002798           1198          JSR     ASCII_ADDRESS
00001BFA  2A45                    1199          MOVE.L  D5,A5
00001BFC  2C4C                    1200          MOVEA.L  A4,A6  ;CLR A6
00001BFE                          1201          
00001BFE  284E                    1202  ARESETLOOP: MOVE.L  A6,A4    ;reset to top of loop
00001C00  B94C                    1203  ACMP:       CMP.W   (A4)+,(A4)+  ;check adjacent mem
00001C02  630A                    1204              BLS.S   ASWAP    
00001C04  558C                    1205              SUBQ.L  #2,A4
00001C06  BBCC                    1206              CMP.L   A4,A5   ;done?
00001C08  66F6                    1207              BNE     ACMP     ;nope
00001C0A  6000 0068               1208              BRA     DONEASCEND  ;yep
00001C0E  2024                    1209  ASWAP:       MOVE.L  -(A4),D0    ;start bubbling 
00001C10  4840                    1210              SWAP.W  D0
00001C12  2880                    1211              MOVE.L  D0,(A4)
00001C14  60E8                    1212              BRA     ARESETLOOP
00001C16                          1213  
00001C16                          1214  
00001C16                          1215  DESCEND:
00001C16  5289                    1216         ADD.L    #1,A1   ;inc
00001C18  0C11 0020               1217         CMP.B    #$20,(A1)   ;check space
00001C1C  6600 0B2E               1218         BNE      ERRORSR
00001C20  5289                    1219         ADD.L    #1,A1   ;start of 1st address
00001C22  2449                    1220         MOVE.L   A1,A2
00001C24  264A                    1221         MOVE.L   A2,A3
00001C26                          1222  DGETFIRSTADDRESS:
00001C26  0C13 0000               1223         CMP.B    #$00,(A3)
00001C2A  6700 0B20               1224         BEQ      ERRORSR     ;incorrect syntax
00001C2E  0C1B 0020               1225         CMP.B    #$20,(A3)+  ;trying to find the end
00001C32  6700 0004               1226         BEQ      DFADDCONV
00001C36  60EE                    1227         BRA      DGETFIRSTADDRESS
00001C38                          1228  DFADDCONV:
00001C38  538B                    1229         SUB.L    #1,A3   ;off by one error
00001C3A  4EB9 00002798           1230         JSR ASCII_ADDRESS    ;D5 now has that address 
00001C40  2845                    1231         MOVE.L D5,A4
00001C42  528B                    1232         ADD.L    #1,A3   ;start of second address
00001C44  244B                    1233         MOVE.L   A3,A2   ;setup for second address
00001C46                          1234  DGETSECADDRESS:
00001C46  0C1B 0000               1235         CMP.B    #$00,(A3)+  ;trying to find the end
00001C4A  6700 0004               1236         BEQ      DSADDCONV
00001C4E  60F6                    1237         BRA      DGETSECADDRESS
00001C50                          1238  DSADDCONV:
00001C50  538B                    1239          SUB.L   #1,A3   ;off by one
00001C52  4EB9 00002798           1240          JSR     ASCII_ADDRESS
00001C58  2A45                    1241          MOVE.L  D5,A5
00001C5A  2C4C                    1242          MOVEA.L  A4,A6  ;CLR A6
00001C5C                          1243          
00001C5C  284E                    1244  DRESETLOOP: MOVE.L  A6,A4    ;reset to top of loop
00001C5E  B94C                    1245  DCMP:       CMP.W   (A4)+,(A4)+  ;check adjacent mem
00001C60  620A                    1246              BHI.S   DSWAP    
00001C62  558C                    1247              SUBQ.L  #2,A4
00001C64  BBCC                    1248              CMP.L   A4,A5   ;done?
00001C66  66F6                    1249              BNE     DCMP     ;nope
00001C68  6000 000A               1250              BRA     DONEDESCEND  ;yep
00001C6C  2024                    1251  DSWAP:       MOVE.L  -(A4),D0    ;start bubbling 
00001C6E  4840                    1252              SWAP.W  D0
00001C70  2880                    1253              MOVE.L  D0,(A4)
00001C72  60E8                    1254              BRA     DRESETLOOP
00001C74                          1255  
00001C74                          1256  DONEASCEND:
00001C74                          1257  DONEDESCEND:
00001C74  6000 F480               1258              BRA RESTORE
00001C78                          1259  
00001C78                          1260  *--------------------------------------------------------------------------------------*
00001C78                          1261  
00001C78  4282                    1262  MM:    CLR.L    D2      ;used for storing values
00001C7A  4286                    1263         CLR.L    D6      
00001C7C                          1264  SIZECHECK:  
00001C7C  2649                    1265          MOVE.L  A1,A3   ;set up to find end ptr
00001C7E                          1266  ENDPTRMM:
00001C7E  0C1B 0000               1267          CMP.B   #$00,(A3)+
00001C82  66FA                    1268          BNE     ENDPTRMM
00001C84  538B                    1269          SUB.L   #1,A3   ;off by one error
00001C86  5289                    1270          ADD.L   #1,A1   ;inc pointer to start of specifier
00001C88  0C11 002D               1271          CMP.B   #$2D,(A1)   ;check for default
00001C8C  6700 0020               1272          BEQ     DEFAULT        
00001C90  0C11 003B               1273          CMP.B   #$3B,(A1)
00001C94  6600 0AB6               1274          BNE     ERRORSR
00001C98  5289                    1275          ADD.L   #1,A1   ;find out which size
00001C9A  0C11 0057               1276          CMP.B   #$57,(A1) ; word
00001C9E  6700 00FE               1277          BEQ     WORD
00001CA2  0C11 004C               1278          CMP.B   #$4C,(A1)   ;long
00001CA6  6700 01D0               1279          BEQ     LONG
00001CAA  6000 0AA0               1280          BRA     ERRORSR
00001CAE                          1281  
00001CAE                          1282  ***************************************************
00001CAE                          1283  
00001CAE                          1284  DEFAULT: 
00001CAE  5289                    1285          ADD.L  #1,A1   ;check for paren
00001CB0  0C19 0028               1286          CMP.B   #$28,(A1)+  ;(
00001CB4  6600 0A96               1287          BNE     ERRORSR
00001CB8  0C19 0064               1288          CMP.B   #$64,(A1)+  ;d
00001CBC  6600 0A8E               1289          BNE     ERRORSR
00001CC0  0C19 0065               1290          CMP.B   #$65,(A1)+  ;e
00001CC4  6600 0A86               1291          BNE     ERRORSR
00001CC8  0C19 0066               1292          CMP.B   #$66,(A1)+  ;f
00001CCC  6600 0A7E               1293          BNE     ERRORSR
00001CD0  0C19 0061               1294          CMP.B   #$61,(A1)+  ;a
00001CD4  6600 0A76               1295          BNE     ERRORSR
00001CD8  0C19 0075               1296          CMP.B   #$75,(A1)+  ;u
00001CDC  6600 0A6E               1297          BNE     ERRORSR
00001CE0  0C19 006C               1298          CMP.B   #$6C,(A1)+  ;l
00001CE4  6600 0A66               1299          BNE     ERRORSR     
00001CE8  0C19 0074               1300          CMP.B   #$74,(A1)+  ;t
00001CEC  6600 0A5E               1301          BNE     ERRORSR
00001CF0  0C19 0029               1302          CMP.B   #$29,(A1)+  ;)
00001CF4  6600 0A56               1303          BNE     ERRORSR
00001CF8                          1304          
00001CF8                          1305          
00001CF8  5289                    1306          ADD.L   #1,A1       ;set up for subroutine
00001CFA  3449                    1307          MOVE    A1,A2       ;set up for subroutine
00001CFC  48E7 4270               1308          MOVEM.L D1/D6/A1-A3,-(SP)
00001D00  4EB9 00002798           1309          JSR     ASCII_ADDRESS
00001D06  4CDF 0E42               1310          MOVEM.L (SP)+,D1/D6/A1-A3
00001D0A  2845                    1311          MOVE.L  D5,A4       ;set up address to modify
00001D0C                          1312         
00001D0C                          1313  MODIFYLOOP:
00001D0C                          1314          *-------Display Memory First-----*
00001D0C  260C                    1315          MOVE.L  A4,D3       ;set up for subroutine
00001D0E  4EB9 000027D8           1316          JSR     HEXTOASCII  ;convert new address to ascii for output
00001D14  96CA                    1317          SUBA    A2,A3       ;get num of bytes to produce
00001D16  7001                    1318          MOVE.L  #1,D0
00001D18  220B                    1319          MOVE.L  A3,D1
00001D1A  224A                    1320          MOVE.L  A2,A1
00001D1C  4E4F                    1321          TRAP    #15
00001D1E                          1322          
00001D1E                          1323          *add colon to denote containing data*
00001D1E  12BC 003A               1324          MOVE.B  #$3A,(A1)
00001D22  7201                    1325          MOVE.L  #1,D1   ;display only the colon
00001D24  7001                    1326          MOVE.L  #1,D0
00001D26  4E4F                    1327          TRAP    #15
00001D28                          1328          
00001D28  1614                    1329          MOVE.B  (A4),D3
00001D2A  4EB9 000027D8           1330          JSR     HEXTOASCII
00001D30  7202                    1331          MOVE.L  #2,D1
00001D32  97CA                    1332          SUB.L   A2,A3
00001D34  B6FC 0002               1333          CMP     #2,A3
00001D38  6700 0004               1334          BEQ     FORMATGOOD
00001D3C  538A                    1335          SUB.L   #1,A2
00001D3E                          1336  FORMATGOOD:
00001D3E  224A                    1337          MOVE.L  A2,A1
00001D40  103C 0001               1338          MOVE.B  #1,D0
00001D44  4E4F                    1339          TRAP    #15
00001D46                          1340          
00001D46  12BC 0020               1341          MOVE.B  #$20,(A1)
00001D4A  7201                    1342          MOVE.L  #1,D1   ;space between held data and input
00001D4C  7001                    1343          MOVE.L  #1,D0
00001D4E  4E4F                    1344          TRAP    #15
00001D50                          1345  
00001D50                          1346          
00001D50                          1347          *-----Enter Input-------*
00001D50  4283                    1348          CLR.L   D3
00001D52  7C04                    1349          MOVE.L  #4,D6
00001D54  43F8 3000               1350          LEA     BUFFER,A1   ;set up storage for command
00001D58  103C 0002               1351          MOVE.B  #2,D0       ;load input trap call
00001D5C  4E4F                    1352          TRAP    #15
00001D5E  0C11 002E               1353          CMP.B   #$2E,(A1)
00001D62  6700 022A               1354          BEQ     ENDLP
00001D66  0C11 0000               1355          CMP.B   #$00,(A1)
00001D6A  6700 002C               1356          BEQ     ENTER
00001D6E                          1357          
00001D6E                          1358  PARSELOOP:
00001D6E  0C11 0000               1359          CMP.B   #$00,(A1)
00001D72  6700 0022               1360          BEQ     ENDPARSE        
00001D76  0C11 0040               1361          CMP.B   #$40,(A1)
00001D7A  6E00 000A               1362          BGT     HIGHHEXMM
00001D7E  0411 0030               1363          SUBI.B  #$30,(A1)   ;get hex value
00001D82  6000 0006               1364          BRA     NEXTMMSTEP
00001D86  0411 0037               1365  HIGHHEXMM: SUBI.B  #$37,(A1)  ;get hex value
00001D8A                          1366  NEXTMMSTEP:
00001D8A  1411                    1367          MOVE.B  (A1),D2
00001D8C  EDBA                    1368          ROL.L   D6,D2
00001D8E  5986                    1369          SUBI.L  #4,D6
00001D90  5289                    1370          ADD.L   #1,A1
00001D92  D602                    1371          ADD.B   D2,D3   ;total byte stored in D3
00001D94  60D8                    1372          BRA     PARSELOOP
00001D96                          1373  ENDPARSE:
00001D96  1883                    1374          MOVE.B  D3,(A4)   ;commit memory change 
00001D98  528C                    1375  ENTER:  ADD.L   #1,A4   ;increment address
00001D9A  6000 FF70               1376          BRA     MODIFYLOOP
00001D9E                          1377          
00001D9E                          1378  ***************************************************
00001D9E                          1379  
00001D9E                          1380  WORD:
00001D9E                          1381              
00001D9E  5489                    1382          ADD.L   #2,A1       ;set up for subroutine
00001DA0  3449                    1383          MOVE    A1,A2       ;set up for subroutine
00001DA2  48E7 4270               1384          MOVEM.L D1/D6/A1-A3,-(SP)
00001DA6  4EB9 00002798           1385          JSR     ASCII_ADDRESS
00001DAC  4CDF 0E42               1386          MOVEM.L (SP)+,D1/D6/A1-A3
00001DB0  2845                    1387          MOVE.L  D5,A4       ;set up address to modify
00001DB2                          1388         
00001DB2                          1389  MODIFYLOOPW:
00001DB2                          1390          *-------Display Memory First-----*
00001DB2  200C                    1391          MOVE.L  A4,D0
00001DB4  80FC 0002               1392          DIVU    #2,D0
00001DB8  4840                    1393          SWAP    D0      ;check if it's an odd address
00001DBA  B07C 0000               1394          CMP.W   #$00,D0
00001DBE  6600 098C               1395          BNE     ERRORSR
00001DC2  260C                    1396          MOVE.L  A4,D3       ;set up for subroutine
00001DC4  2A4C                    1397          MOVE.L  A4,A5       ;next byte of memory may not be needed
00001DC6  528D                    1398          ADD.L   #1,A5
00001DC8  4EB9 000027D8           1399          JSR     HEXTOASCII  ;convert new address to ascii for output
00001DCE  96CA                    1400          SUBA    A2,A3       ;get num of bytes to produce
00001DD0  7001                    1401          MOVE.L  #1,D0
00001DD2  220B                    1402          MOVE.L  A3,D1
00001DD4  224A                    1403          MOVE.L  A2,A1
00001DD6  4E4F                    1404          TRAP    #15
00001DD8                          1405          
00001DD8                          1406          *add colon to denote containing data*
00001DD8  12BC 003A               1407          MOVE.B  #$3A,(A1)
00001DDC  7201                    1408          MOVE.L  #1,D1   ;display only the colon
00001DDE  7001                    1409          MOVE.L  #1,D0
00001DE0  4E4F                    1410          TRAP    #15
00001DE2                          1411          
00001DE2  1614                    1412          MOVE.B  (A4),D3
00001DE4  4EB9 000027D8           1413          JSR     HEXTOASCII
00001DEA  7202                    1414          MOVE.L  #2,D1
00001DEC  97CA                    1415          SUB.L   A2,A3
00001DEE  B6FC 0002               1416          CMP     #2,A3
00001DF2  6700 0004               1417          BEQ     FORMATGOOD1
00001DF6  538A                    1418          SUB.L   #1,A2     
00001DF8                          1419  FORMATGOOD1:
00001DF8                          1420  
00001DF8  224A                    1421          MOVE.L  A2,A1
00001DFA  103C 0001               1422          MOVE.B  #1,D0
00001DFE  4E4F                    1423          TRAP    #15
00001E00                          1424          
00001E00  1615                    1425          MOVE.B  (A5),D3
00001E02  4EB9 000027D8           1426          JSR     HEXTOASCII
00001E08  7202                    1427          MOVE.L  #2,D1
00001E0A  97CA                    1428          SUB.L   A2,A3
00001E0C  B6FC 0002               1429          CMP     #2,A3
00001E10  6700 0004               1430          BEQ     FORMATGOOD2
00001E14  538A                    1431          SUB.L   #1,A2     
00001E16                          1432  FORMATGOOD2:
00001E16                          1433  
00001E16  224A                    1434          MOVE.L  A2,A1
00001E18  103C 0001               1435          MOVE.B  #1,D0
00001E1C  4E4F                    1436          TRAP    #15
00001E1E                          1437  
00001E1E                          1438          
00001E1E  12BC 0020               1439          MOVE.B  #$20,(A1)
00001E22  7201                    1440          MOVE.L  #1,D1   ;space between held data and input
00001E24  7001                    1441          MOVE.L  #1,D0
00001E26  4E4F                    1442          TRAP    #15
00001E28                          1443  
00001E28                          1444          
00001E28                          1445          *-----Enter Input-------*
00001E28  4283                    1446          CLR.L   D3
00001E2A  7C0C                    1447          MOVE.L  #12,D6
00001E2C  43F8 3000               1448          LEA     BUFFER,A1   ;set up storage for command
00001E30  103C 0002               1449          MOVE.B  #2,D0       ;load input trap call
00001E34  4E4F                    1450          TRAP    #15
00001E36  0C11 002E               1451          CMP.B   #$2E,(A1)
00001E3A  6700 0152               1452          BEQ     ENDLP
00001E3E  0C11 0000               1453          CMP.B   #$00,(A1)
00001E42  6700 002E               1454          BEQ     ENTERW
00001E46                          1455          
00001E46                          1456  PARSELOOPW:
00001E46  0C11 0000               1457          CMP.B   #$00,(A1)
00001E4A  6700 0024               1458          BEQ     ENDPARSEW        
00001E4E  0C11 0040               1459          CMP.B   #$40,(A1)
00001E52  6E00 000A               1460          BGT     HIGHHEXMMW
00001E56  0411 0030               1461          SUBI.B  #$30,(A1)   ;get hex value
00001E5A  6000 0006               1462          BRA     NEXTMMSTEPW
00001E5E  0411 0037               1463  HIGHHEXMMW: SUBI.B  #$37,(A1)  ;get hex value
00001E62                          1464  NEXTMMSTEPW:
00001E62  1411                    1465          MOVE.B  (A1),D2
00001E64  EDBA                    1466          ROL.L   D6,D2
00001E66  5986                    1467          SUBI.L  #4,D6
00001E68  5289                    1468          ADD.L   #1,A1
00001E6A  D682                    1469          ADD.L   D2,D3   ;total byte stored in D3
00001E6C  4282                    1470          CLR.L   D2      ;clear for next rotate
00001E6E  60D6                    1471          BRA     PARSELOOPW
00001E70                          1472  ENDPARSEW:
00001E70                          1473          
00001E70  3883                    1474          MOVE.W  D3,(A4)   ;commit memory change 
00001E72  548C                    1475  ENTERW:  ADD.L   #2,A4   ;increment address
00001E74  6000 FF3C               1476          BRA     MODIFYLOOPW
00001E78                          1477  
00001E78                          1478  ***************************************************
00001E78                          1479  
00001E78                          1480  LONG:  
00001E78  5489                    1481          ADD.L   #2,A1       ;set up for subroutine
00001E7A  3449                    1482          MOVE    A1,A2       ;set up for subroutine
00001E7C  48E7 4270               1483          MOVEM.L D1/D6/A1-A3,-(SP)
00001E80  4EB9 00002798           1484          JSR     ASCII_ADDRESS
00001E86  4CDF 0E42               1485          MOVEM.L (SP)+,D1/D6/A1-A3
00001E8A  2845                    1486          MOVE.L  D5,A4       ;set up address to modify
00001E8C                          1487         
00001E8C                          1488  MODIFYLOOPL:
00001E8C                          1489          *-------Display Memory First-----*
00001E8C  200C                    1490          MOVE.L  A4,D0
00001E8E  80FC 0002               1491          DIVU    #2,D0
00001E92  4840                    1492          SWAP    D0      ;check if it's an odd address
00001E94  B07C 0000               1493          CMP.W   #$00,D0
00001E98  6600 08B2               1494          BNE     ERRORSR
00001E9C  260C                    1495          MOVE.L  A4,D3       ;set up for subroutine
00001E9E  2A4C                    1496          MOVE.L  A4,A5       ;next byte of memory may not be needed
00001EA0  528D                    1497          ADD.L   #1,A5
00001EA2  4EB9 000027D8           1498          JSR     HEXTOASCII  ;convert new address to ascii for output
00001EA8  96CA                    1499          SUBA    A2,A3       ;get num of bytes to produce
00001EAA  7001                    1500          MOVE.L  #1,D0
00001EAC  220B                    1501          MOVE.L  A3,D1
00001EAE  224A                    1502          MOVE.L  A2,A1
00001EB0  4E4F                    1503          TRAP    #15
00001EB2                          1504          
00001EB2                          1505          *add colon to denote containing data*
00001EB2  12BC 003A               1506          MOVE.B  #$3A,(A1)
00001EB6  7201                    1507          MOVE.L  #1,D1   ;display only the colon
00001EB8  7001                    1508          MOVE.L  #1,D0
00001EBA  4E4F                    1509          TRAP    #15
00001EBC                          1510          
00001EBC  1614                    1511          MOVE.B  (A4),D3
00001EBE  4EB9 000027D8           1512          JSR     HEXTOASCII
00001EC4  7202                    1513          MOVE.L  #2,D1
00001EC6  97CA                    1514          SUB.L   A2,A3
00001EC8  B6FC 0002               1515          CMP     #2,A3
00001ECC  6700 0004               1516          BEQ     FORMATGOOD3
00001ED0  538A                    1517          SUB.L   #1,A2     
00001ED2                          1518  FORMATGOOD3:
00001ED2                          1519  
00001ED2  224A                    1520          MOVE.L  A2,A1
00001ED4  103C 0001               1521          MOVE.B  #1,D0
00001ED8  4E4F                    1522          TRAP    #15
00001EDA                          1523          
00001EDA  161D                    1524          MOVE.B  (A5)+,D3
00001EDC  4EB9 000027D8           1525          JSR     HEXTOASCII
00001EE2  7202                    1526          MOVE.L  #2,D1
00001EE4  97CA                    1527          SUB.L   A2,A3
00001EE6  B6FC 0002               1528          CMP     #2,A3
00001EEA  6700 0004               1529          BEQ     FORMATGOOD4
00001EEE  538A                    1530          SUB.L   #1,A2     
00001EF0                          1531  FORMATGOOD4:
00001EF0                          1532  
00001EF0  224A                    1533          MOVE.L  A2,A1
00001EF2  103C 0001               1534          MOVE.B  #1,D0
00001EF6  4E4F                    1535          TRAP    #15
00001EF8                          1536          
00001EF8  161D                    1537          MOVE.B  (A5)+,D3
00001EFA  4EB9 000027D8           1538          JSR     HEXTOASCII
00001F00  7202                    1539          MOVE.L  #2,D1
00001F02  97CA                    1540          SUB.L   A2,A3
00001F04  B6FC 0002               1541          CMP     #2,A3
00001F08  6700 0004               1542          BEQ     FORMATGOOD5
00001F0C  538A                    1543          SUB.L   #1,A2     
00001F0E                          1544  FORMATGOOD5:
00001F0E                          1545  
00001F0E  224A                    1546          MOVE.L  A2,A1
00001F10  103C 0001               1547          MOVE.B  #1,D0
00001F14  4E4F                    1548          TRAP    #15
00001F16  161D                    1549          MOVE.B  (A5)+,D3
00001F18  4EB9 000027D8           1550          JSR     HEXTOASCII
00001F1E  7202                    1551          MOVE.L  #2,D1
00001F20  97CA                    1552          SUB.L   A2,A3
00001F22  B6FC 0002               1553          CMP     #2,A3
00001F26  6700 0004               1554          BEQ     FORMATGOOD6
00001F2A  538A                    1555          SUB.L   #1,A2     
00001F2C                          1556  FORMATGOOD6:
00001F2C                          1557  
00001F2C  224A                    1558          MOVE.L  A2,A1
00001F2E  103C 0001               1559          MOVE.B  #1,D0
00001F32  4E4F                    1560          TRAP    #15
00001F34                          1561     
00001F34  12BC 0020               1562          MOVE.B  #$20,(A1)
00001F38  7201                    1563          MOVE.L  #1,D1   ;space between held data and input
00001F3A  7001                    1564          MOVE.L  #1,D0
00001F3C  4E4F                    1565          TRAP    #15
00001F3E                          1566  
00001F3E                          1567          
00001F3E                          1568          *-----Enter Input-------*
00001F3E  4283                    1569          CLR.L   D3
00001F40  7C1C                    1570          MOVE.L  #28,D6
00001F42  43F8 3000               1571          LEA     BUFFER,A1   ;set up storage for command
00001F46  103C 0002               1572          MOVE.B  #2,D0       ;load input trap call
00001F4A  4E4F                    1573          TRAP    #15
00001F4C  0C11 002E               1574          CMP.B   #$2E,(A1)
00001F50  6700 003C               1575          BEQ     ENDLP
00001F54  0C11 0000               1576          CMP.B   #$00,(A1)
00001F58  6700 002E               1577          BEQ     ENTERL
00001F5C                          1578          
00001F5C                          1579  PARSELOOPL:
00001F5C  0C11 0000               1580          CMP.B   #$00,(A1)
00001F60  6700 0024               1581          BEQ     ENDPARSEL        
00001F64  0C11 0040               1582          CMP.B   #$40,(A1)
00001F68  6E00 000A               1583          BGT     HIGHHEXMML
00001F6C  0411 0030               1584          SUBI.B  #$30,(A1)   ;get hex value
00001F70  6000 0006               1585          BRA     NEXTMMSTEPL
00001F74  0411 0037               1586  HIGHHEXMML: SUBI.B  #$37,(A1)  ;get hex value
00001F78                          1587  NEXTMMSTEPL:
00001F78  1411                    1588          MOVE.B  (A1),D2
00001F7A  EDBA                    1589          ROL.L   D6,D2
00001F7C  5986                    1590          SUBI.L  #4,D6
00001F7E  5289                    1591          ADD.L   #1,A1
00001F80  D682                    1592          ADD.L   D2,D3   ;total byte stored in D3
00001F82  4282                    1593          CLR.L   D2      ;clear for next rotate
00001F84  60D6                    1594          BRA     PARSELOOPL
00001F86                          1595  ENDPARSEL:
00001F86  2883                    1596          MOVE.L  D3,(A4)   ;commit memory change 
00001F88  588C                    1597  ENTERL:  ADD.L   #4,A4   ;increment address
00001F8A  6000 FF00               1598          BRA     MODIFYLOOPL
00001F8E                          1599  
00001F8E                          1600  
00001F8E  6000 F166               1601  ENDLP:  BRA RESTORE
00001F92                          1602          
00001F92                          1603          
00001F92                          1604  *--------------------------------------------------------------------------------------*
00001F92                          1605  
00001F92                          1606  BF:    
00001F92  5289                    1607         ADD.L    #1,A1   ;first byte of data
00001F94  2649                    1608         MOVE.L   A1,A3   ;for end ptr
00001F96                          1609  BFGETENDDATA:
00001F96  0C1B 0020               1610          CMP.B   #$20,(A3)+
00001F9A  6700 0004               1611          BEQ     BFNEXTADDR
00001F9E  60F6                    1612          BRA     BFGETENDDATA
00001FA0                          1613  BFNEXTADDR:
00001FA0  2449                    1614          MOVE.L  A1,A2   ;for subroutine
00001FA2  538B                    1615          SUB.L   #1,A3   ;off by one error
00001FA4  4EB9 00002798           1616          JSR     ASCII_ADDRESS
00001FAA  2F05                    1617          MOVE.L  D5,-(SP)    ;save data on the stack
00001FAC                          1618          
00001FAC  528B                    1619          ADD.L   #1,A3   ;inc end ptr to first byte of address
00001FAE  244B                    1620          MOVE.L  A3,A2   ;set start ptr
00001FB0                          1621  BFGETENDADDRONE:
00001FB0  0C1B 0020               1622          CMP.B   #$20,(A3)+
00001FB4  6700 0004               1623          BEQ     BFNEXTADDRTWO
00001FB8  60F6                    1624          BRA     BFGETENDADDRONE
00001FBA                          1625          
00001FBA                          1626  BFNEXTADDRTWO:
00001FBA  538B                    1627          SUB.L   #1,A3   ;off by one error
00001FBC  4EB9 00002798           1628          JSR     ASCII_ADDRESS   ;convert address to hex
00001FC2  2A45                    1629          MOVE.L  D5,A5       ;store address 1 in A5
00001FC4  8AFC 0002               1630          DIVU    #2,D5
00001FC8  4845                    1631          SWAP    D5
00001FCA  BA7C 0000               1632          CMP.W   #$00,D5
00001FCE  6600 077C               1633          BNE     ERRORSR
00001FD2                          1634          
00001FD2  528B                    1635          ADD.L   #1,A3   ;inc end ptr to first byte of address
00001FD4  244B                    1636          MOVE.L  A3,A2   ;set start ptr
00001FD6                          1637  BFGETLASTEND:
00001FD6  0C1B 0000               1638          CMP.B   #$00,(A3)+
00001FDA  6700 0004               1639          BEQ     STOREDATA
00001FDE  60F6                    1640          BRA     BFGETLASTEND
00001FE0                          1641          
00001FE0                          1642  STOREDATA:
00001FE0  538B                    1643          SUB.L   #1,A3   ;off by one error
00001FE2  4EB9 00002798           1644          JSR     ASCII_ADDRESS
00001FE8  2C45                    1645          MOVE.L  D5,A6   ;end address in A6
00001FEA  8AFC 0002               1646          DIVU    #2,D5
00001FEE  4845                    1647          SWAP    D5
00001FF0  BA7C 0000               1648          CMP.W   #$00,D5
00001FF4  6600 0756               1649          BNE     ERRORSR
00001FF8  2A1F                    1650          MOVE.L  (SP)+,D5
00001FFA                          1651          
00001FFA                          1652  DATALOOP:
00001FFA  BDCD                    1653          CMP.L   A5,A6
00001FFC  6D00 0006               1654          BLT     ENDBF
00002000  3AC5                    1655          MOVE.W  D5,(A5)+
00002002  60F6                    1656          BRA     DATALOOP
00002004                          1657  
00002004  6000 F0F0               1658  ENDBF:  BRA RESTORE
00002008                          1659  *--------------------------------------------------------------------------------------*
00002008                          1660  
00002008  5289                    1661  BMOV:   ADD.L   #1,A1   ;get to start of first address
0000200A  2449                    1662          MOVE.L  A1,A2   ;set up start ptr
0000200C  264A                    1663          MOVE.L  A2,A3   ;set up end ptr
0000200E                          1664          
0000200E                          1665  FIRSTADDRESS:
0000200E  0C1B 0020               1666          CMP.B #$20,(A3)+
00002012  6700 0004               1667          BEQ     COMPUTEFIRSTADD
00002016  60F6                    1668          BRA     FIRSTADDRESS
00002018                          1669          
00002018                          1670  COMPUTEFIRSTADD:
00002018  538B                    1671          SUB.L   #1,A3   ;off by one error
0000201A  4EB9 00002798           1672          JSR     ASCII_ADDRESS
00002020  2045                    1673          MOVE.L  D5,A0   ; save 1st address
00002022                          1674          
00002022  528B                    1675          ADD.L   #1,A3
00002024  244B                    1676          MOVE.L  A3,A2
00002026                          1677  SECONDADDRESS:
00002026  0C1B 0020               1678          CMP.B   #$20,(A3)+
0000202A  6700 0004               1679          BEQ     COMPUTESECONDADDRESS
0000202E  60F6                    1680          BRA     SECONDADDRESS
00002030                          1681          
00002030                          1682  COMPUTESECONDADDRESS:
00002030  538B                    1683          SUB.L   #1,A3   ;off by one error
00002032  4EB9 00002798           1684          JSR     ASCII_ADDRESS
00002038  2845                    1685          MOVE.L  D5,A4   ;save 2nd address
0000203A                          1686  
0000203A  528B                    1687          ADD.L   #1,A3
0000203C  244B                    1688          MOVE.L  A3,A2
0000203E                          1689  THIRDADDRESS:
0000203E  0C1B 0020               1690          CMP.B   #$20,(A3)+
00002042  6700 0004               1691          BEQ     COMPUTETHIRDADDRESS
00002046  60F6                    1692          BRA     THIRDADDRESS
00002048                          1693          
00002048                          1694  COMPUTETHIRDADDRESS:
00002048  538B                    1695          SUB.L   #1,A3
0000204A  4EB9 00002798           1696          JSR     ASCII_ADDRESS
00002050  2A45                    1697          MOVE.L  D5,A5   ;save 3rd address
00002052                          1698          
00002052  528B                    1699          ADD.L   #1,A3
00002054  244B                    1700          MOVE.L  A3,A2
00002056                          1701  FOURTHADDRESS:
00002056  0C1B 0000               1702          CMP.B   #$00,(A3)+
0000205A  6700 0004               1703          BEQ     COMPUTEFOURTHADDRESS
0000205E  60F6                    1704          BRA     FOURTHADDRESS
00002060                          1705          
00002060                          1706  COMPUTEFOURTHADDRESS:
00002060  538B                    1707          SUB.L   #1,A3
00002062  4EB9 00002798           1708          JSR     ASCII_ADDRESS
00002068  2C45                    1709          MOVE.L  D5,A6   ;save 3rd address
0000206A                          1710          
0000206A                          1711          
0000206A                          1712  
0000206A                          1713          *Check for matching dimensions*
0000206A  2008                    1714          MOVE.L  A0,D0
0000206C  220C                    1715          MOVE.L  A4,D1
0000206E  2A0D                    1716          MOVE.L  A5,D5
00002070  2C0E                    1717          MOVE.L  A6,D6
00002072  9280                    1718          SUB.L   D0,D1
00002074  9C85                    1719          SUB.L   D5,D6
00002076  BC81                    1720          CMP.L   D1,D6
00002078  6600 06D2               1721          BNE     ERRORSR
0000207C  B9C8                    1722          CMP.L   A0,A4
0000207E  6D00 06CC               1723          BLT     ERRORSR
00002082  BDCD                    1724          CMP.L   A5,A6
00002084  6D00 06C6               1725          BLT     ERRORSR
00002088                          1726  
00002088                          1727  DATATRANSFER:
00002088  B9C8                    1728          CMP.L   A0,A4
0000208A  6D00 0006               1729          BLT     BMOVDONE
0000208E  1AD8                    1730          MOVE.B  (A0)+,(A5)+
00002090  60F6                    1731          BRA     DATATRANSFER
00002092                          1732          
00002092                          1733  
00002092                          1734  
00002092                          1735  BMOVDONE:
00002092  6000 F062               1736          BRA RESTORE
00002096                          1737  
00002096                          1738  *--------------------------------------------------------------------------------------*
00002096                          1739  
00002096                          1740  BTST:   
00002096  5289                    1741         ADD.L    #1,A1   ;first byte of data
00002098  2649                    1742         MOVE.L   A1,A3   ;for end ptr
0000209A                          1743  BTSTGETENDDATA:
0000209A  0C1B 0020               1744          CMP.B   #$20,(A3)+
0000209E  6700 0004               1745          BEQ     BTSTNEXTADDR
000020A2  60F6                    1746          BRA     BTSTGETENDDATA
000020A4                          1747  BTSTNEXTADDR:
000020A4  2449                    1748          MOVE.L  A1,A2   ;for subroutine
000020A6  538B                    1749          SUB.L   #1,A3   ;off by one error
000020A8  4EB9 00002798           1750          JSR     ASCII_ADDRESS
000020AE  2F05                    1751          MOVE.L  D5,-(SP)    ;save data on the stack
000020B0                          1752          
000020B0  528B                    1753          ADD.L   #1,A3   ;inc end ptr to first byte of address
000020B2  244B                    1754          MOVE.L  A3,A2   ;set start ptr
000020B4                          1755  BTSTGETENDADDRONE:
000020B4  0C1B 0020               1756          CMP.B   #$20,(A3)+
000020B8  6700 0004               1757          BEQ     BTSTNEXTADDRTWO
000020BC  60F6                    1758          BRA     BTSTGETENDADDRONE
000020BE                          1759          
000020BE                          1760  BTSTNEXTADDRTWO:
000020BE  538B                    1761          SUB.L   #1,A3   ;off by one error
000020C0  4EB9 00002798           1762          JSR     ASCII_ADDRESS   ;convert address to hex
000020C6  2A45                    1763          MOVE.L  D5,A5       ;store address 1 in A5
000020C8  2845                    1764          MOVE.L  D5,A4       ;for second run through
000020CA                          1765                
000020CA  528B                    1766          ADD.L   #1,A3   ;inc end ptr to first byte of address
000020CC  244B                    1767          MOVE.L  A3,A2   ;set start ptr
000020CE                          1768  BTSTGETLASTEND:
000020CE  0C1B 0000               1769          CMP.B   #$00,(A3)+
000020D2  6700 0004               1770          BEQ     STOREDATABTST
000020D6  60F6                    1771          BRA     BTSTGETLASTEND
000020D8                          1772  
000020D8                          1773  
000020D8                          1774  STOREDATABTST:
000020D8  538B                    1775          SUB.L   #1,A3   ;off by one error
000020DA  4EB9 00002798           1776          JSR     ASCII_ADDRESS
000020E0  2C45                    1777          MOVE.L  D5,A6   ;end address in A6
000020E2  2A1F                    1778          MOVE.L  (SP)+,D5
000020E4                          1779          
000020E4                          1780  BTSTDATALOOP:
000020E4  BDCD                    1781          CMP.L   A5,A6
000020E6  6D00 0006               1782          BLT     READ
000020EA  1AC5                    1783          MOVE.B  D5,(A5)+
000020EC  60F6                    1784          BRA     BTSTDATALOOP
000020EE                          1785  
000020EE                          1786  
000020EE                          1787  READ:
000020EE  BDCC                    1788          CMP.L   A4,A6
000020F0  6D00 006C               1789          BLT     COMPLETE
000020F4  BA1C                    1790          CMP.B   (A4)+,D5
000020F6  6600 0004               1791          BNE     FAIL
000020FA  60F2                    1792          BRA     READ
000020FC                          1793          
000020FC                          1794  FAIL:
000020FC  43F8 37D1               1795          LEA     BTST4,A1
00002100  720B                    1796          MOVE.L  #11,D1
00002102  7000                    1797          MOVE.L  #0,D0
00002104  4E4F                    1798          TRAP    #15
00002106                          1799          
00002106  43F8 379A               1800          LEA     BTST1,A1
0000210A  7001                    1801          MOVE.L  #1,D0
0000210C  7214                    1802          MOVE.L  #20,D1
0000210E  4E4F                    1803          TRAP    #15
00002110                          1804          
00002110  1605                    1805          MOVE.B  D5,D3   ;for subroutine
00002112  4EB9 000027D8           1806          JSR     HEXTOASCII
00002118  224A                    1807          MOVE.L     A2,A1
0000211A  7000                    1808          MOVE.L  #0,D0
0000211C  97CA                    1809          SUBA.L  A2,A3   ;number of bytes
0000211E  220B                    1810          MOVE.L  A3,D1
00002120  4E4F                    1811          TRAP    #15
00002122                          1812          
00002122                          1813          
00002122  43F8 37AE               1814          LEA     BTST2,A1
00002126  7001                    1815          MOVE.L  #1,D0
00002128  7211                    1816          MOVE.L  #17,D1
0000212A  4E4F                    1817          TRAP    #15
0000212C                          1818          
0000212C                          1819          
0000212C  538C                    1820          SUB.L   #1,A4   ;go back to address that failed
0000212E  1614                    1821          MOVE.B  (A4),D3
00002130  4EB9 000027D8           1822          JSR     HEXTOASCII  ;convert for output
00002136  224A                    1823          MOVE.L     A2,A1
00002138  7000                    1824          MOVE.L  #0,D0
0000213A  97CA                    1825          SUBA.L  A2,A3   ;number of bytes
0000213C  220B                    1826          MOVE.L  A3,D1
0000213E  4E4F                    1827          TRAP    #15
00002140                          1828          
00002140  43F8 37DC               1829          LEA     BTST5,A1
00002144  721B                    1830          MOVE.L  #27,D1
00002146  103C 0001               1831          MOVE.B  #1,D0
0000214A  4E4F                    1832          TRAP    #15
0000214C  260C                    1833          MOVE.L  A4,D3
0000214E  4EB9 000027D8           1834          JSR     HEXTOASCII
00002154  224A                    1835          MOVE.L     A2,A1
00002156  7000                    1836          MOVE.L  #0,D0
00002158  97CA                    1837          SUBA.L  A2,A3   ;number of bytes
0000215A  220B                    1838          MOVE.L  A3,D1
0000215C  4E4F                    1839          TRAP    #15
0000215E                          1840  
0000215E                          1841  
0000215E                          1842          
0000215E                          1843  COMPLETE:
0000215E                          1844  
0000215E  43F8 37BF               1845          LEA     BTST3,A1
00002162  7212                    1846          MOVE.L  #18,D1
00002164  7000                    1847          MOVE.L  #0,D0
00002166  4E4F                    1848          TRAP    #15
00002168  6000 EF8C               1849          BRA RESTORE
0000216C                          1850  
0000216C                          1851  *--------------------------------------------------------------------------------------*
0000216C                          1852  
0000216C                          1853  BSCH:   
0000216C  5289                    1854          ADD.L   #1,A1   ;start of data
0000216E  2449                    1855          MOVE.L  A1,A2   ;set up bac ptr
00002170                          1856          
00002170                          1857  BSCHENDDATA:
00002170  0C1A 0020               1858          CMP.B   #$20,(A2)+
00002174  6700 0004               1859          BEQ     BSCHFIRSTADD
00002178  60F6                    1860          BRA     BSCHENDDATA
0000217A                          1861  
0000217A                          1862  
0000217A                          1863  BSCHFIRSTADD:
0000217A  538A                    1864          SUB.L   #1,A2
0000217C  264A                    1865          MOVE.L  A2,A3
0000217E  2449                    1866          MOVE.L  A1,A2
00002180  4EB9 00002798           1867          JSR     ASCII_ADDRESS
00002186  97C9                    1868          SUB.L   A1,A3   ;see how many bytes
00002188  2C0B                    1869          MOVE.L  A3,D6   ;store byte/word/long in D6   
0000218A  528A                    1870          ADD.L   #1,A2   ;set up for start of next address     
0000218C  264A                    1871          MOVE.L  A2,A3   ;set up for end ptr
0000218E  2F05                    1872          MOVE.L  D5,-(SP)    ;save data to stack
00002190                          1873          
00002190                          1874          
00002190                          1875  BSCHFADDEND:
00002190  0C1B 0020               1876          CMP.B   #$20,(A3)+
00002194  6700 0004               1877          BEQ     BSCHSECONDADD
00002198  60F6                    1878          BRA     BSCHFADDEND
0000219A                          1879          
0000219A                          1880          
0000219A                          1881  BSCHSECONDADD:
0000219A  538B                    1882          SUB.L   #1,A3   ;off by one
0000219C  4EB9 00002798           1883          JSR     ASCII_ADDRESS
000021A2  2A45                    1884          MOVE.L  D5,A5   ;first address destination
000021A4  528B                    1885          ADD.L   #1,A3   ;start it at next address
000021A6  244B                    1886          MOVE.L  A3,A2   ; set up for next address
000021A8                          1887          
000021A8                          1888          
000021A8                          1889  BSCHSECONDFIND:
000021A8  0C1B 0000               1890          CMP.B   #$00,(A3)+
000021AC  6700 0004               1891          BEQ     TESTOP
000021B0  60F6                    1892          BRA     BSCHSECONDFIND
000021B2                          1893          
000021B2                          1894          
000021B2                          1895  TESTOP: 
000021B2  538B                    1896          SUB.L   #1,A3   ;off by one
000021B4  4EB9 00002798           1897          JSR     ASCII_ADDRESS
000021BA  2C45                    1898          MOVE.L  D5,A6   ;end address at A6
000021BC  2A1F                    1899          MOVE.L  (SP)+,D5    ;restore data
000021BE  BC3C 0002               1900          CMP.B   #2,D6
000021C2  6700 0016               1901          BEQ     BYTEBSCH
000021C6  BC3C 0004               1902          CMP.B   #4,D6
000021CA  6700 001C               1903          BEQ     WORDBSCH
000021CE  BC3C 0008               1904          CMP.B   #8,D6
000021D2  6700 0022               1905          BEQ     LONGBSCH
000021D6  6000 0574               1906          BRA     ERRORSR
000021DA                          1907          
000021DA                          1908  BYTEBSCH:
000021DA  BDCD                    1909          CMP.L   A5,A6
000021DC  6D00 0070               1910          BLT     ENDBSCH
000021E0  BA1D                    1911          CMP.B   (A5)+,D5
000021E2  6700 0020               1912          BEQ     FOUNDB
000021E6  60F2                    1913          BRA     BYTEBSCH
000021E8                          1914  
000021E8                          1915  WORDBSCH:
000021E8  BDCD                    1916          CMP.L   A5,A6
000021EA  6D00 0062               1917          BLT     ENDBSCH
000021EE  BA5D                    1918          CMP.W   (A5)+,D5
000021F0  6700 001A               1919          BEQ     FOUNDW
000021F4  60F2                    1920          BRA     WORDBSCH
000021F6                          1921  
000021F6                          1922  LONGBSCH:
000021F6  BDCD                    1923          CMP.L   A5,A6
000021F8  6D00 0054               1924          BLT     ENDBSCH
000021FC  BA9D                    1925          CMP.L   (A5)+,D5
000021FE  6700 0014               1926          BEQ     FOUNDL
00002202  60F2                    1927          BRA     LONGBSCH
00002204                          1928  
00002204                          1929  
00002204                          1930  
00002204                          1931  FOUNDB:
00002204  538D                    1932          SUB.L   #1,A5
00002206  1615                    1933          MOVE.B  (A5),D3
00002208  6000 000E               1934          BRA     SUCCESSTEXT
0000220C                          1935  FOUNDW:
0000220C  558D                    1936          SUB.L   #2,A5
0000220E  3615                    1937          MOVE.W  (A5),D3
00002210  6000 0006               1938          BRA     SUCCESSTEXT
00002214                          1939  FOUNDL:
00002214  598D                    1940          SUB.L   #4,A5
00002216  2615                    1941          MOVE.L  (A5),D3
00002218                          1942          
00002218                          1943  SUCCESSTEXT:
00002218  43F8 37F7               1944          LEA BSCH1,A1
0000221C  7206                    1945          MOVE.L  #6,D1
0000221E  7001                    1946          MOVE.L  #1,D0
00002220  4E4F                    1947          TRAP    #15
00002222                          1948  
00002222  4EB9 000027D8           1949          JSR     HEXTOASCII
00002228  224A                    1950          MOVE.L  A2,A1
0000222A  97CA                    1951          SUB.L   A2,A3
0000222C  220B                    1952          MOVE.L  A3,D1   ;how many bytes
0000222E  7000                    1953          MOVE.L  #0,D0
00002230  4E4F                    1954          TRAP    #15
00002232                          1955          
00002232  43F8 37FD               1956          LEA BSCH2,A1
00002236  7212                    1957          MOVE.L  #18,D1
00002238  7001                    1958          MOVE.L  #1,D0
0000223A  4E4F                    1959          TRAP    #15
0000223C                          1960          
0000223C  260D                    1961          MOVE.L  A5,D3
0000223E  4EB9 000027D8           1962          JSR     HEXTOASCII
00002244  224A                    1963          MOVE.L  A2,A1
00002246  97CA                    1964          SUB.L   A2,A3
00002248  220B                    1965          MOVE.L  A3,D1   ;how many bytes
0000224A  7000                    1966          MOVE.L  #0,D0
0000224C  4E4F                    1967          TRAP    #15
0000224E                          1968  
0000224E                          1969          
0000224E                          1970  ENDBSCH:        
0000224E  6000 EEA6               1971          BRA RESTORE
00002252                          1972  
00002252                          1973  *--------------------------------------------------------------------------------------*
00002252                          1974  
00002252                          1975  GO:    
00002252  2449                    1976          MOVE.L  A1,A2   ;setup for hex conversion
00002254  264A                    1977          MOVE.L  A2,A3   
00002256                          1978  GGETEND:
00002256  0C1B 0000               1979          CMP.B   #$00,(A3)+
0000225A  6700 0004               1980          BEQ     EXECUTE
0000225E  60F6                    1981          BRA     GGETEND
00002260                          1982          
00002260                          1983  EXECUTE:
00002260  538B                    1984          SUB.L   #1,A3   ;off by one error
00002262  4EB9 00002798           1985          JSR     ASCII_ADDRESS
00002268  2045                    1986          MOVE.L  D5,A0   
0000226A  4E90                    1987          JSR     (A0)    ;go to program
0000226C                          1988          **NOTE: THE PROGRAM MUST HAVE RTS OR CONTROL WILL NOT BE RETURNED BACK TO MONITOR441!!!**
0000226C  6000 EE88               1989          BRA RESTORE
00002270                          1990  
00002270                          1991  *--------------------------------------------------------------------------------------*
00002270                          1992  
00002270                          1993  DF:    *Registers have already been saved to STACK, just need to pop them off first*
00002270                          1994          *Stack looks like this*
00002270                          1995          
00002270                          1996          *-------------*
00002270                          1997          *|D0-D7/A0-A6|*
00002270                          1998          *|     USP   |*
00002270                          1999          *|     SR    |*
00002270                          2000          *|     SSP   |*
00002270                          2001          *|     PC    |*
00002270                          2002          *-------------*
00002270                          2003          *I should've used loops for efficiency but runtime is not a design constraint*
00002270                          2004          *Maybe fix this in the future?*
00002270                          2005          
00002270                          2006            *----------D0-----------*
00002270  43F8 3820               2007         LEA      RD0,A1
00002274  7204                    2008         MOVE.L   #4,D1
00002276  7001                    2009         MOVE.L   #1,D0
00002278  4E4F                    2010         TRAP     #15
0000227A  261F                    2011         MOVE.L   (SP)+,D3    
0000227C  4EB9 000027D8           2012         JSR      HEXTOASCII
00002282  224A                    2013         MOVE.L   A2,A1
00002284  95CB                    2014         SUB.L    A3,A2
00002286  240A                    2015         MOVE.L   A2,D2
00002288  B4BC FFFFFFF8           2016         CMP.L    #-8,D2
0000228E  6700 0006               2017         BEQ      D0DONTWORRY
00002292                          2018  D0ACCOUNTFORZEROS:
00002292  5082                    2019          ADDI.L  #8,D2
00002294  93C2                    2020          SUB.L   D2,A1
00002296                          2021  D0DONTWORRY:
00002296  7000                    2022         MOVE.L   #0,D0
00002298  7208                    2023         MOVE.L   #8,D1
0000229A  4E4F                    2024         TRAP     #15
0000229C                          2025         
0000229C                          2026             *----------D1-----------*
0000229C  43F8 3824               2027         LEA      RD1,A1
000022A0  7204                    2028         MOVE.L   #4,D1
000022A2  7001                    2029         MOVE.L   #1,D0
000022A4  4E4F                    2030         TRAP     #15
000022A6  261F                    2031         MOVE.L   (SP)+,D3    
000022A8  4EB9 000027D8           2032         JSR      HEXTOASCII
000022AE  224A                    2033         MOVE.L   A2,A1
000022B0  95CB                    2034         SUB.L    A3,A2
000022B2  240A                    2035         MOVE.L   A2,D2
000022B4  B4BC FFFFFFF8           2036         CMP.L    #-8,D2
000022BA  6700 0006               2037         BEQ      D1DONTWORRY
000022BE                          2038  D1ACCOUNTFORZEROS:
000022BE  5082                    2039          ADDI.L  #8,D2
000022C0  93C2                    2040          SUB.L   D2,A1
000022C2                          2041  D1DONTWORRY:
000022C2  7000                    2042         MOVE.L   #0,D0
000022C4  7208                    2043         MOVE.L   #8,D1
000022C6  4E4F                    2044         TRAP     #15
000022C8                          2045         
000022C8                          2046             *----------D2-----------*
000022C8  43F8 3828               2047         LEA      RD2,A1
000022CC  7204                    2048         MOVE.L   #4,D1
000022CE  7001                    2049         MOVE.L   #1,D0
000022D0  4E4F                    2050         TRAP     #15
000022D2  261F                    2051         MOVE.L   (SP)+,D3   
000022D4  4EB9 000027D8           2052         JSR      HEXTOASCII
000022DA  224A                    2053         MOVE.L   A2,A1
000022DC  95CB                    2054         SUB.L    A3,A2
000022DE  240A                    2055         MOVE.L   A2,D2
000022E0  B4BC FFFFFFF8           2056         CMP.L    #-8,D2
000022E6  6700 0006               2057         BEQ      D2DONTWORRY
000022EA                          2058  D2ACCOUNTFORZEROS:
000022EA  5082                    2059          ADDI.L  #8,D2
000022EC  93C2                    2060          SUB.L   D2,A1
000022EE                          2061  D2DONTWORRY:
000022EE  7000                    2062         MOVE.L   #0,D0
000022F0  7208                    2063         MOVE.L   #8,D1
000022F2  4E4F                    2064         TRAP     #15
000022F4                          2065         
000022F4                          2066              *----------D3-----------*
000022F4  43F8 382C               2067         LEA      RD3,A1
000022F8  7204                    2068         MOVE.L   #4,D1
000022FA  7001                    2069         MOVE.L   #1,D0
000022FC  4E4F                    2070         TRAP     #15   
000022FE  261F                    2071         MOVE.L   (SP)+,D3  
00002300  4EB9 000027D8           2072         JSR      HEXTOASCII
00002306  224A                    2073         MOVE.L   A2,A1
00002308  95CB                    2074         SUB.L    A3,A2
0000230A  240A                    2075         MOVE.L   A2,D2
0000230C  B4BC FFFFFFF8           2076         CMP.L    #-8,D2
00002312  6700 0006               2077         BEQ      D3DONTWORRY
00002316                          2078  D3ACCOUNTFORZEROS:
00002316  5082                    2079          ADDI.L  #8,D2
00002318  93C2                    2080          SUB.L   D2,A1
0000231A                          2081  D3DONTWORRY:
0000231A  7000                    2082         MOVE.L   #0,D0
0000231C  7208                    2083         MOVE.L   #8,D1
0000231E  4E4F                    2084         TRAP     #15
00002320                          2085         
00002320                          2086              *----------D4-----------*
00002320  43F8 3830               2087         LEA      RD4,A1
00002324  7204                    2088         MOVE.L   #4,D1
00002326  7001                    2089         MOVE.L   #1,D0
00002328  4E4F                    2090         TRAP     #15
0000232A  261F                    2091         MOVE.L   (SP)+,D3    
0000232C  4EB9 000027D8           2092         JSR      HEXTOASCII
00002332  224A                    2093         MOVE.L   A2,A1
00002334  95CB                    2094         SUB.L    A3,A2
00002336  240A                    2095         MOVE.L   A2,D2
00002338  B4BC FFFFFFF8           2096         CMP.L    #-8,D2
0000233E  6700 0006               2097         BEQ      D4DONTWORRY
00002342                          2098  D4ACCOUNTFORZEROS:
00002342  5082                    2099          ADDI.L  #8,D2
00002344  93C2                    2100          SUB.L   D2,A1
00002346                          2101  D4DONTWORRY:
00002346  7000                    2102         MOVE.L   #0,D0
00002348  7208                    2103         MOVE.L   #8,D1
0000234A  4E4F                    2104         TRAP     #15
0000234C                          2105         
0000234C                          2106         *----------D5-----------*
0000234C  43F8 3834               2107         LEA      RD5,A1
00002350  7204                    2108         MOVE.L   #4,D1
00002352  7001                    2109         MOVE.L   #1,D0
00002354  4E4F                    2110         TRAP     #15
00002356  261F                    2111         MOVE.L   (SP)+,D3    
00002358  4EB9 000027D8           2112         JSR      HEXTOASCII
0000235E  224A                    2113         MOVE.L   A2,A1
00002360  95CB                    2114         SUB.L    A3,A2
00002362  240A                    2115         MOVE.L   A2,D2
00002364  B4BC FFFFFFF8           2116         CMP.L    #-8,D2
0000236A  6700 0006               2117         BEQ      D5DONTWORRY
0000236E                          2118  D5ACCOUNTFORZEROS:
0000236E  5082                    2119          ADDI.L  #8,D2
00002370  93C2                    2120          SUB.L   D2,A1
00002372                          2121  D5DONTWORRY:
00002372  7000                    2122         MOVE.L   #0,D0
00002374  7208                    2123         MOVE.L   #8,D1
00002376  4E4F                    2124         TRAP     #15
00002378                          2125  
00002378                          2126          *----------D6-----------*
00002378  43F8 3838               2127         LEA      RD6,A1
0000237C  7204                    2128         MOVE.L   #4,D1
0000237E  7001                    2129         MOVE.L   #1,D0
00002380  4E4F                    2130         TRAP     #15
00002382  261F                    2131         MOVE.L   (SP)+,D3    
00002384  4EB9 000027D8           2132         JSR      HEXTOASCII
0000238A  224A                    2133         MOVE.L   A2,A1
0000238C  95CB                    2134         SUB.L    A3,A2
0000238E  240A                    2135         MOVE.L   A2,D2
00002390  B4BC FFFFFFF8           2136         CMP.L    #-8,D2
00002396  6700 0006               2137         BEQ      D6DONTWORRY
0000239A                          2138  D6ACCOUNTFORZEROS:
0000239A  5082                    2139          ADDI.L  #8,D2
0000239C  93C2                    2140          SUB.L   D2,A1
0000239E                          2141  D6DONTWORRY:
0000239E  7000                    2142         MOVE.L   #0,D0
000023A0  7208                    2143         MOVE.L   #8,D1
000023A2  4E4F                    2144         TRAP     #15
000023A4                          2145         
000023A4                          2146           *----------D7-----------*
000023A4  43F8 383C               2147         LEA      RD7,A1
000023A8  7204                    2148         MOVE.L   #4,D1
000023AA  7001                    2149         MOVE.L   #1,D0
000023AC  4E4F                    2150         TRAP     #15
000023AE  261F                    2151         MOVE.L   (SP)+,D3    
000023B0  4EB9 000027D8           2152         JSR      HEXTOASCII
000023B6  224A                    2153         MOVE.L   A2,A1
000023B8  95CB                    2154         SUB.L    A3,A2
000023BA  240A                    2155         MOVE.L   A2,D2
000023BC  B4BC FFFFFFF8           2156         CMP.L    #-8,D2
000023C2  6700 0006               2157         BEQ      D7DONTWORRY
000023C6                          2158  D7ACCOUNTFORZEROS:
000023C6  5082                    2159          ADDI.L  #8,D2
000023C8  93C2                    2160          SUB.L   D2,A1
000023CA                          2161  D7DONTWORRY:
000023CA  7000                    2162         MOVE.L   #0,D0
000023CC  7208                    2163         MOVE.L   #8,D1
000023CE  4E4F                    2164         TRAP     #15
000023D0                          2165  
000023D0                          2166     *----------A0-----------*
000023D0  43F8 3840               2167         LEA      RA0,A1
000023D4  7204                    2168         MOVE.L   #4,D1
000023D6  7001                    2169         MOVE.L   #1,D0
000023D8  4E4F                    2170         TRAP     #15
000023DA  261F                    2171         MOVE.L   (SP)+,D3    
000023DC  4EB9 000027D8           2172         JSR      HEXTOASCII
000023E2  224A                    2173         MOVE.L   A2,A1
000023E4  95CB                    2174         SUB.L    A3,A2
000023E6  240A                    2175         MOVE.L   A2,D2
000023E8  B4BC FFFFFFF8           2176         CMP.L    #-8,D2
000023EE  6700 0006               2177         BEQ      A0DONTWORRY
000023F2                          2178  A0ACCOUNTFORZEROS:
000023F2  5082                    2179          ADDI.L  #8,D2
000023F4  93C2                    2180          SUB.L   D2,A1
000023F6                          2181  A0DONTWORRY:
000023F6  7000                    2182         MOVE.L   #0,D0
000023F8  7208                    2183         MOVE.L   #8,D1
000023FA  4E4F                    2184         TRAP     #15
000023FC                          2185         
000023FC                          2186            *----------A1-----------*
000023FC  43F8 3844               2187         LEA      RA1,A1
00002400  7204                    2188         MOVE.L   #4,D1
00002402  7001                    2189         MOVE.L   #1,D0
00002404  4E4F                    2190         TRAP     #15
00002406  261F                    2191         MOVE.L   (SP)+,D3    
00002408  4EB9 000027D8           2192         JSR      HEXTOASCII
0000240E  224A                    2193         MOVE.L   A2,A1
00002410  95CB                    2194         SUB.L    A3,A2
00002412  240A                    2195         MOVE.L   A2,D2
00002414  B4BC FFFFFFF8           2196         CMP.L    #-8,D2
0000241A  6700 0006               2197         BEQ      A1DONTWORRY
0000241E                          2198  A1ACCOUNTFORZEROS:
0000241E  5082                    2199          ADDI.L  #8,D2
00002420  93C2                    2200          SUB.L   D2,A1
00002422                          2201  A1DONTWORRY:
00002422  7000                    2202         MOVE.L   #0,D0
00002424  7208                    2203         MOVE.L   #8,D1
00002426  4E4F                    2204         TRAP     #15
00002428                          2205         
00002428                          2206          *----------A2-----------*
00002428  43F8 3848               2207         LEA      RA2,A1
0000242C  7204                    2208         MOVE.L   #4,D1
0000242E  7001                    2209         MOVE.L   #1,D0
00002430  4E4F                    2210         TRAP     #15
00002432  261F                    2211         MOVE.L   (SP)+,D3    
00002434  4EB9 000027D8           2212         JSR      HEXTOASCII
0000243A  224A                    2213         MOVE.L   A2,A1
0000243C  95CB                    2214         SUB.L    A3,A2
0000243E  240A                    2215         MOVE.L   A2,D2
00002440  B4BC FFFFFFF8           2216         CMP.L    #-8,D2
00002446  6700 0006               2217         BEQ      A2DONTWORRY
0000244A                          2218  A2ACCOUNTFORZEROS:
0000244A  5082                    2219          ADDI.L  #8,D2
0000244C  93C2                    2220          SUB.L   D2,A1
0000244E                          2221  A2DONTWORRY:
0000244E  7000                    2222         MOVE.L   #0,D0
00002450  7208                    2223         MOVE.L   #8,D1
00002452  4E4F                    2224         TRAP     #15
00002454                          2225         
00002454                          2226           *----------A3-----------*
00002454  43F8 384C               2227         LEA      RA3,A1
00002458  7204                    2228         MOVE.L   #4,D1
0000245A  7001                    2229         MOVE.L   #1,D0
0000245C  4E4F                    2230         TRAP     #15
0000245E  261F                    2231         MOVE.L   (SP)+,D3    
00002460  4EB9 000027D8           2232         JSR      HEXTOASCII
00002466  224A                    2233         MOVE.L   A2,A1
00002468  95CB                    2234         SUB.L    A3,A2
0000246A  240A                    2235         MOVE.L   A2,D2
0000246C  B4BC FFFFFFF8           2236         CMP.L    #-8,D2
00002472  6700 0006               2237         BEQ      A3DONTWORRY
00002476                          2238  A3ACCOUNTFORZEROS:
00002476  5082                    2239          ADDI.L  #8,D2
00002478  93C2                    2240          SUB.L   D2,A1
0000247A                          2241  A3DONTWORRY:
0000247A  7000                    2242         MOVE.L   #0,D0
0000247C  7208                    2243         MOVE.L   #8,D1
0000247E  4E4F                    2244         TRAP     #15
00002480                          2245         
00002480                          2246          *----------A4-----------*
00002480  43F8 384C               2247         LEA      RA3,A1
00002484  7204                    2248         MOVE.L   #4,D1
00002486  7001                    2249         MOVE.L   #1,D0
00002488  4E4F                    2250         TRAP     #15
0000248A  261F                    2251         MOVE.L   (SP)+,D3    
0000248C  4EB9 000027D8           2252         JSR      HEXTOASCII
00002492  224A                    2253         MOVE.L   A2,A1
00002494  95CB                    2254         SUB.L    A3,A2
00002496  240A                    2255         MOVE.L   A2,D2
00002498  B4BC FFFFFFF8           2256         CMP.L    #-8,D2
0000249E  6700 0006               2257         BEQ      A4DONTWORRY
000024A2                          2258  A4ACCOUNTFORZEROS:
000024A2  5082                    2259          ADDI.L  #8,D2
000024A4  93C2                    2260          SUB.L   D2,A1
000024A6                          2261  A4DONTWORRY:
000024A6  7000                    2262         MOVE.L   #0,D0
000024A8  7208                    2263         MOVE.L   #8,D1
000024AA  4E4F                    2264         TRAP     #15
000024AC                          2265         
000024AC                          2266         *----------A5-----------*
000024AC  43F8 384C               2267         LEA      RA3,A1
000024B0  7204                    2268         MOVE.L   #4,D1
000024B2  7001                    2269         MOVE.L   #1,D0
000024B4  4E4F                    2270         TRAP     #15
000024B6  261F                    2271         MOVE.L   (SP)+,D3    
000024B8  4EB9 000027D8           2272         JSR      HEXTOASCII
000024BE  224A                    2273         MOVE.L   A2,A1
000024C0  95CB                    2274         SUB.L    A3,A2
000024C2  240A                    2275         MOVE.L   A2,D2
000024C4  B4BC FFFFFFF8           2276         CMP.L    #-8,D2
000024CA  6700 0006               2277         BEQ      A5DONTWORRY
000024CE                          2278  A5ACCOUNTFORZEROS:
000024CE  5082                    2279          ADDI.L  #8,D2
000024D0  93C2                    2280          SUB.L   D2,A1
000024D2                          2281  A5DONTWORRY:
000024D2  7000                    2282         MOVE.L   #0,D0
000024D4  7208                    2283         MOVE.L   #8,D1
000024D6  4E4F                    2284         TRAP     #15
000024D8                          2285         
000024D8                          2286         *----------A6-----------*
000024D8  43F8 384C               2287         LEA      RA3,A1
000024DC  7204                    2288         MOVE.L   #4,D1
000024DE  7001                    2289         MOVE.L   #1,D0
000024E0  4E4F                    2290         TRAP     #15
000024E2  261F                    2291         MOVE.L   (SP)+,D3    
000024E4  4EB9 000027D8           2292         JSR      HEXTOASCII
000024EA  224A                    2293         MOVE.L   A2,A1
000024EC  95CB                    2294         SUB.L    A3,A2
000024EE  240A                    2295         MOVE.L   A2,D2
000024F0  B4BC FFFFFFF8           2296         CMP.L    #-8,D2
000024F6  6700 0006               2297         BEQ      A6DONTWORRY
000024FA                          2298  A6ACCOUNTFORZEROS:
000024FA  5082                    2299          ADDI.L  #8,D2
000024FC  93C2                    2300          SUB.L   D2,A1
000024FE                          2301  A6DONTWORRY:
000024FE  7000                    2302         MOVE.L   #0,D0
00002500  7208                    2303         MOVE.L   #8,D1
00002502  4E4F                    2304         TRAP     #15
00002504                          2305       *-----HACK---*
00002504  DFFC 0000003C           2306       ADD.L  #60,SP  ;should put stack in correct place
0000250A                          2307       
0000250A                          2308                *----------USP-----------*
0000250A  43F8 3863               2309         LEA      RUS,A1
0000250E  7204                    2310         MOVE.L   #4,D1
00002510  7001                    2311         MOVE.L   #1,D0
00002512  4E4F                    2312         TRAP     #15
00002514  261F                    2313         MOVE.L   (SP)+,D3    
00002516  4EB9 000027D8           2314         JSR      HEXTOASCII
0000251C  224A                    2315         MOVE.L   A2,A1
0000251E  95CB                    2316         SUB.L    A3,A2
00002520  240A                    2317         MOVE.L   A2,D2
00002522  B4BC FFFFFFF8           2318         CMP.L    #-8,D2
00002528  6700 0006               2319         BEQ      USPDONTWORRY
0000252C                          2320  USPACCOUNTFORZEROS:
0000252C  5082                    2321          ADDI.L  #8,D2
0000252E  93C2                    2322          SUB.L   D2,A1
00002530                          2323  USPDONTWORRY:
00002530  7000                    2324         MOVE.L   #0,D0
00002532  7208                    2325         MOVE.L   #8,D1
00002534  4E4F                    2326         TRAP     #15
00002536                          2327  
00002536                          2328                *----------SR-----------*
00002536  43F8 386B               2329         LEA      RSR,A1
0000253A  7204                    2330         MOVE.L   #4,D1
0000253C  7001                    2331         MOVE.L   #1,D0
0000253E  4E4F                    2332         TRAP     #15
00002540  361F                    2333         MOVE.W   (SP)+,D3
00002542  3E03                    2334         MOVE.W   D3,D7   ;temp storage to restore before return    
00002544  4EB9 000027D8           2335         JSR      HEXTOASCII
0000254A  224A                    2336         MOVE.L   A2,A1
0000254C  95CB                    2337         SUB.L    A3,A2
0000254E  240A                    2338         MOVE.L   A2,D2
00002550  B4BC FFFFFFFC           2339         CMP.L    #-4,D2
00002556  6700 0006               2340         BEQ      SRDONTWORRY
0000255A                          2341  SRACCOUNTFORZEROS:
0000255A  5882                    2342          ADDI.L  #4,D2
0000255C  93C2                    2343          SUB.L   D2,A1
0000255E                          2344  SRDONTWORRY:
0000255E  7000                    2345         MOVE.L   #0,D0
00002560  7204                    2346         MOVE.L   #4,D1
00002562  4E4F                    2347         TRAP     #15
00002564                          2348         
00002564                          2349      *----------SS/A7-----------*
00002564  43F8 385C               2350         LEA      RSS,A1
00002568  7207                    2351         MOVE.L   #7,D1
0000256A  7001                    2352         MOVE.L   #1,D0
0000256C  4E4F                    2353         TRAP     #15
0000256E  261F                    2354         MOVE.L   (SP)+,D3    
00002570  4EB9 000027D8           2355         JSR      HEXTOASCII
00002576  224A                    2356         MOVE.L   A2,A1
00002578  95CB                    2357         SUB.L    A3,A2
0000257A  240A                    2358         MOVE.L   A2,D2
0000257C  B4BC FFFFFFF8           2359         CMP.L    #-8,D2
00002582  6700 0006               2360         BEQ      SSDONTWORRY
00002586                          2361  SSACCOUNTFORZEROS:
00002586  5082                    2362          ADDI.L  #8,D2
00002588  93C2                    2363          SUB.L   D2,A1
0000258A                          2364  SSDONTWORRY:
0000258A  7000                    2365         MOVE.L   #0,D0
0000258C  7208                    2366         MOVE.L   #8,D1
0000258E  4E4F                    2367         TRAP     #15
00002590                          2368         
00002590                          2369      *----------PC-----------*
00002590  43F8 3867               2370         LEA      RPC,A1
00002594  7204                    2371         MOVE.L   #4,D1
00002596  7001                    2372         MOVE.L   #1,D0
00002598  4E4F                    2373         TRAP     #15
0000259A  261F                    2374         MOVE.L   (SP)+,D3    
0000259C  4EB9 000027D8           2375         JSR      HEXTOASCII
000025A2  224A                    2376         MOVE.L   A2,A1
000025A4  95CB                    2377         SUB.L    A3,A2
000025A6  240A                    2378         MOVE.L   A2,D2
000025A8  B4BC FFFFFFF8           2379         CMP.L    #-8,D2
000025AE  6700 0006               2380         BEQ      PCDONTWORRY
000025B2                          2381  PCACCOUNTFORZEROS:
000025B2  5082                    2382          ADDI.L  #8,D2
000025B4  93C2                    2383          SUB.L   D2,A1
000025B6                          2384  PCDONTWORRY:
000025B6  7000                    2385         MOVE.L   #0,D0
000025B8  7208                    2386         MOVE.L   #8,D1
000025BA  4E4F                    2387         TRAP     #15       
000025BC                          2388         
000025BC                          2389     *---DF HACK RESTORE---*
000025BC  3F07                    2390     MOVE.W   D7,-(SP)
000025BE  DFFC FFFFFFB8           2391     ADD.L    #-72,SP
000025C4  4CDF 7FFF               2392     MOVEM.L  (SP)+,D0-D7/A0-A6
000025C8  DFFC 0000000C           2393     ADD.L    #12,SP  ;go back to original value
000025CE  46DF                    2394     MOVE.W   (SP)+,SR
000025D0                          2395          
000025D0  6000 EA9E               2396         BRA SHELL
000025D4                          2397  
000025D4                          2398  *--------------------------------------------------------------------------------------*
000025D4                          2399  
000025D4                          2400  
000025D4                          2401  ************************************EXCEPTIONS!*****************************************
000025D4                          2402  *--------------------------------------------------------------------------------------*
000025D4                          2403  
000025D4                          2404  BERR:
000025D4  48E7 C070               2405          MOVEM.L A1-A3/D0-D1,-(SP)
000025D8  43F8 386F               2406          LEA     BERR_TEXT,A1
000025DC  700D                    2407          MOVE.L  #13,D0
000025DE  4E4F                    2408          TRAP    #15
000025E0  43F8 3960               2409          LEA     SSW,A1
000025E4  700E                    2410          MOVE.L  #14,D0
000025E6  4E4F                    2411          TRAP    #15
000025E8  362F 0014               2412          MOVE.W  (20,SP),D3
000025EC  4EB9 000027D8           2413          JSR     HEXTOASCII
000025F2  598B                    2414          SUB.L   #4,A3
000025F4  224B                    2415          MOVEA.L A3,A1
000025F6  7204                    2416          MOVE.L  #4,D1
000025F8  7000                    2417          MOVE.L  #0,D0
000025FA  4E4F                    2418          TRAP    #15
000025FC  43F8 3966               2419          LEA     BA,A1
00002600  700E                    2420          MOVE.L  #14,D0
00002602  4E4F                    2421          TRAP    #15
00002604  262F 0016               2422          MOVE.L  (22,SP),D3
00002608  4EB9 000027D8           2423          JSR     HEXTOASCII
0000260E  518B                    2424          SUB.L   #8,A3
00002610  224B                    2425          MOVEA.L A3,A1
00002612  7208                    2426          MOVE.L  #8,D1
00002614  7000                    2427          MOVE.L  #0,D0
00002616  4E4F                    2428          TRAP    #15
00002618  43F8 396B               2429          LEA     IR,A1
0000261C  700E                    2430          MOVE.L  #14,D0
0000261E  4E4F                    2431          TRAP    #15
00002620  362F 001A               2432          MOVE.W  (26,SP),D3
00002624  4EB9 000027D8           2433          JSR     HEXTOASCII
0000262A  598B                    2434          SUB.L   #4,A3
0000262C  224B                    2435          MOVEA.L A3,A1
0000262E  7204                    2436          MOVE.L  #4,D1
00002630  7000                    2437          MOVE.L  #0,D0
00002632  4E4F                    2438          TRAP    #15
00002634  4CDF 0E03               2439          MOVEM.L (SP)+,A1-A3/D0-D1
00002638  2E7C 01000000           2440          MOVE.L  #$01000000,SP   ;reset stack
0000263E  6000 EA30               2441          BRA     SHELL
00002642                          2442  
00002642                          2443  AERR:
00002642  48E7 C070               2444          MOVEM.L A1-A3/D0-D1,-(SP)
00002646  43F8 3887               2445          LEA     AERR_TEXT,A1
0000264A  700D                    2446          MOVE.L  #13,D0
0000264C  4E4F                    2447          TRAP    #15
0000264E  43F8 3960               2448          LEA     SSW,A1
00002652  700E                    2449          MOVE.L  #14,D0
00002654  4E4F                    2450          TRAP    #15
00002656  362F 0014               2451          MOVE.W  (20,SP),D3
0000265A  4EB9 000027D8           2452          JSR     HEXTOASCII
00002660  598B                    2453          SUB.L   #4,A3
00002662  224B                    2454          MOVEA.L A3,A1
00002664  7204                    2455          MOVE.L  #4,D1
00002666  7000                    2456          MOVE.L  #0,D0
00002668  4E4F                    2457          TRAP    #15
0000266A  43F8 3966               2458          LEA     BA,A1
0000266E  700E                    2459          MOVE.L  #14,D0
00002670  4E4F                    2460          TRAP    #15
00002672  262F 0016               2461          MOVE.L  (22,SP),D3
00002676  4EB9 000027D8           2462          JSR     HEXTOASCII
0000267C  518B                    2463          SUB.L   #8,A3
0000267E  224B                    2464          MOVEA.L A3,A1
00002680  7208                    2465          MOVE.L  #8,D1
00002682  7000                    2466          MOVE.L  #0,D0
00002684  4E4F                    2467          TRAP    #15
00002686  43F8 396B               2468          LEA     IR,A1
0000268A  700E                    2469          MOVE.L  #14,D0
0000268C  4E4F                    2470          TRAP    #15
0000268E  362F 001A               2471          MOVE.W  (26,SP),D3
00002692  4EB9 000027D8           2472          JSR     HEXTOASCII
00002698  598B                    2473          SUB.L   #4,A3
0000269A  224B                    2474          MOVEA.L A3,A1
0000269C  7204                    2475          MOVE.L  #4,D1
0000269E  7000                    2476          MOVE.L  #0,D0
000026A0  4E4F                    2477          TRAP    #15
000026A2  4CDF 0E03               2478          MOVEM.L (SP)+,A1-A3/D0-D1
000026A6  2E7C 01000000           2479          MOVE.L  #$01000000,SP   ;reset stack
000026AC  6000 E9C2               2480          BRA     SHELL
000026B0                          2481  
000026B0                          2482  IERR:
000026B0  48E7 8040               2483      MOVEM.L A1/D0,-(SP)
000026B4  43F8 38A4               2484      LEA IERR_TEXT,A1
000026B8  700D                    2485      MOVE.L #13,D0
000026BA  4E4F                    2486      TRAP #15
000026BC  4CDF 0201               2487      MOVEM.L (SP)+,A1/D0
000026C0  2E7C 01000000           2488      MOVE.L #$01000000,SP
000026C6  6000 E9A8               2489      BRA SHELL
000026CA                          2490  
000026CA                          2491  PERR:
000026CA  48E7 8040               2492      MOVEM.L A1/D0,-(SP)
000026CE  43F8 38CD               2493      LEA PERR_TEXT,A1
000026D2  700D                    2494      MOVE.L #13,D0
000026D4  4E4F                    2495      TRAP #15
000026D6  4CDF 0201               2496      MOVEM.L (SP)+,A1/D0
000026DA  2E7C 01000000           2497      MOVE.L #$01000000,SP
000026E0  6000 E98E               2498      BRA SHELL
000026E4                          2499      
000026E4                          2500  ZERR:
000026E4  48E7 8040               2501      MOVEM.L A1/D0,-(SP)
000026E8  43F8 38EB               2502      LEA ZERR_TEXT,A1
000026EC  700D                    2503      MOVE.L #13,D0
000026EE  4E4F                    2504      TRAP #15
000026F0  4CDF 0201               2505      MOVEM.L (SP)+,A1/D0
000026F4  2E7C 01000000           2506      MOVE.L #$01000000,SP
000026FA  6000 E974               2507      BRA SHELL
000026FE                          2508  
000026FE                          2509  ALERR:
000026FE  48E7 8040               2510      MOVEM.L A1/D0,-(SP)
00002702  43F8 390E               2511      LEA ALERR_TEXT,A1
00002706  700D                    2512      MOVE.L #13,D0
00002708  4E4F                    2513      TRAP #15
0000270A  4CDF 0201               2514      MOVEM.L (SP)+,A1/D0
0000270E  2E7C 01000000           2515      MOVE.L #$01000000,SP
00002714  6000 E95A               2516      BRA SHELL
00002718                          2517      
00002718                          2518  FLERR:
00002718  48E7 8040               2519      MOVEM.L A1/D0,-(SP)
0000271C  43F8 392A               2520      LEA FLERR_TEXT,A1
00002720  700D                    2521      MOVE.L #13,D0
00002722  4E4F                    2522      TRAP #15
00002724  4CDF 0201               2523      MOVEM.L (SP)+,A1/D0
00002728  2E7C 01000000           2524      MOVE.L #$01000000,SP
0000272E  6000 E940               2525      BRA SHELL
00002732                          2526      
00002732                          2527  CHKERR:
00002732  48E7 8040               2528      MOVEM.L A1/D0,-(SP)
00002736  43F8 3946               2529      LEA CHKERR_TEXT,A1
0000273A  700D                    2530      MOVE.L #13,D0
0000273C  4E4F                    2531      TRAP #15
0000273E  4CDF 0201               2532      MOVEM.L (SP)+,A1/D0
00002742  2E7C 01000000           2533      MOVE.L #$01000000,SP
00002748  6000 E926               2534      BRA SHELL
0000274C                          2535  
0000274C                          2536  
0000274C                          2537  
0000274C                          2538  ****************************COMMON SUBROUTINES NEEDED**********************************
0000274C                          2539  
0000274C                          2540  
0000274C                          2541  *--------------------------------------------------------------------------------------*
0000274C  43F8 3755               2542  ERRORSR:        LEA   ERROR,A1    ;load message
00002750  323C 002C               2543                  MOVE.W  #44,D1
00002754  7000                    2544                  MOVE.L  #0,D0
00002756  4E4F                    2545                  TRAP    #15
00002758  6000 E99C               2546                  BRA     RESTORE
0000275C                          2547  *--------------------------------------------------------------------------------------*
0000275C                          2548  ASCII_TO_BCD:   *Number passed via D3 byte size only(to be expected)*
0000275C  B67C 0046               2549                  CMP #$46,D3
00002760  6EEA                    2550                  BGT ERRORSR
00002762  B67C 0040               2551                  CMP #$40,D3
00002766  6E00 000A               2552                  BGT UPPER
0000276A  0483 00000030           2553                  SUBI.L  #$30,D3
00002770  4E75                    2554                  RTS
00002772  0483 00000031           2555  UPPER:          SUBI.L  #$31,D3 ;If ASCII number is A-F
00002778  4E75                    2556                  RTS
0000277A                          2557  *--------------------------------------------------------------------------------------*
0000277A                          2558  
0000277A                          2559  BCD_TO_HEX:     *Number passed via D3 accepts BYTE ONLY*
0000277A  2803                    2560                  MOVE.L  D3,D4   
0000277C  2A03                    2561                  MOVE.L  D3,D5
0000277E  0284 000000F0           2562                  ANDI.L  #240,D4 ;upper byte
00002784  0285 0000000F           2563                  ANDI.L  #15,D5  ;lower byte
0000278A  E89C                    2564                  ROR.L   #4,D4   ;get bits into correct place
0000278C  C8FC 000A               2565                  MULU    #10,D4  ;multiply by its tens place
00002790  4283                    2566                  CLR.L   D3
00002792  D684                    2567                  ADD.L   D4,D3
00002794  D685                    2568                  ADD.L   D5,D3
00002796  4E75                    2569                  RTS
00002798                          2570  *--------------------------------------------------------------------------------------*                
00002798                          2571  ASCII_ADDRESS:   *Address to be converted from ascii to hex passed through A2 and A3*
00002798                          2572                   *Returned in D5                                                    *
00002798  4283                    2573                  CLR.L   D3
0000279A  4285                    2574                  CLR.L   D5
0000279C  220A                    2575                  MOVE.L   A2,D1
0000279E  200B                    2576                  MOVE.L   A3,D0
000027A0  9081                    2577                  SUB.L   D1,D0   ;store the difference in D0
000027A2  7800                    2578                  MOVE.L  #0,D4   ;set up 10's place counter
000027A4  5380                    2579                  SUBI.L  #1,D0
000027A6  B07C 0000               2580  PLACECOUNTER:   CMP     #0,D0
000027AA  6700 0008               2581                  BEQ     CONVERTADDRESS
000027AE  5884                    2582                  ADDI.L  #4,D4
000027B0  5380                    2583                  SUBI.L  #1,D0
000027B2  60F2                    2584                  BRA     PLACECOUNTER
000027B4  B6CA                    2585  CONVERTADDRESS  CMP     A2,A3
000027B6  6700 001E               2586                  BEQ     ADDRESSDONE
000027BA  4283                    2587                  CLR.L   D3
000027BC  161A                    2588                  MOVE.B  (A2)+,D3
000027BE  48E7 EC30               2589                  MOVEM.L A2-A3/D0-D2/D4-D5,-(SP)   ;so regs dont get destroyed
000027C2  4EB8 275C               2590                  JSR     ASCII_TO_BCD
000027C6  4EB8 277A               2591                  JSR     BCD_TO_HEX
000027CA  4CDF 0C37               2592                  MOVEM.L (SP)+,A2-A3/D0-D2/D4-D5
000027CE  E9BB                    2593                  ROL.L     D4,D3
000027D0  5984                    2594                  SUBI.L  #4,D4
000027D2  DA83                    2595                  ADD.L     D3,D5   ;get total
000027D4  60DE                    2596                  BRA     CONVERTADDRESS
000027D6  4E75                    2597  ADDRESSDONE     RTS
000027D8                          2598  
000027D8                          2599  *--------------------------------------------------------------------------------------*
000027D8                          2600  HEXTOASCII: *Result returned in address buffer from A2 to A3, HEX number passed*
000027D8                          2601              *through D3*
000027D8  4284                    2602              CLR.L   D4
000027DA  4285                    2603              CLR.L   D5
000027DC  247C 00003A00           2604              MOVE.L  #$3A00,A2
000027E2  267C 00003A32           2605              MOVE.L  #$3A32,A3
000027E8                          2606  KEEP_CONVERTING:
000027E8  1803                    2607              MOVE.B  D3,D4  
000027EA  1A03                    2608              MOVE.B  D3,D5 
000027EC  E08B                    2609              LSR.L   #8,D3   ;prepare for next byte
000027EE  0284 0000000F           2610              ANDI.L  #15,D4   ;get lower byte
000027F4  0285 000000F0           2611              ANDI.L  #240,D5 ;get upper byte'
000027FA  E85D                    2612              ROR     #4,D5   ;move D5 into position
000027FC  B83C 0009               2613              CMP.B     #$9,D4
00002800  6E00 000C               2614              BGT     A_TO_F
00002804  0684 00000030           2615              ADDI.L  #$30,D4
0000280A  6000 0008               2616              BRA     NEXTHEX
0000280E  0684 00000037           2617  A_TO_F:     ADDI.L  #$37,D4
00002814  BA3C 0009               2618  NEXTHEX:    CMP.B     #$9,D5
00002818  6E00 000C               2619              BGT     A_TO_F2
0000281C  0685 00000030           2620              ADDI.L  #$30,D5
00002822  6000 0008               2621              BRA     PUTBUFFER
00002826  0685 00000037           2622  A_TO_F2:    ADDI.L  #$37,D5
0000282C  1704                    2623  PUTBUFFER:  MOVE.B  D4,-(A3)
0000282E  1705                    2624              MOVE.B  D5,-(A3)
00002830  B6CA                    2625              CMP      A2,A3
00002832  66B4                    2626              BNE      KEEP_CONVERTING
00002834  0C12 0030               2627  RID_ZEROS:  CMP.B   #$30,(A2)
00002838  6700 0006               2628              BEQ     ADD
0000283C  6000 0006               2629              BRA     HEXASCIIDONE
00002840  528A                    2630  ADD:        ADD.L   #1,A2   ;increment to find start of string
00002842  60F0                    2631              BRA     RID_ZEROS
00002844                          2632  HEXASCIIDONE:   
00002844  267C 00003A32           2633              MOVE.L  #$3A32,A3    ;end of original number
0000284A  B7CA                    2634              CMP.L   A2,A3
0000284C  6700 0006               2635              BEQ     ZEROS
00002850  6000 0004               2636              BRA     NOTZEROS
00002854  518A                    2637  ZEROS       SUB.L   #8,A2               
00002856  4E75                    2638  NOTZEROS    RTS
00002858                          2639  *--------------------------------------------------------------------------------------*
00002858  43F8 3781               2640  UNKNOWNCMD:     LEA   ERROR1,A1    ;load message
0000285C  323C 0015               2641                  MOVE.W  #21,D1
00002860  7000                    2642                  MOVE.L  #0,D0
00002862  4E4F                    2643                  TRAP    #15
00002864  6000 E890               2644                  BRA     RESTORE
00002868                          2645  
00002868                          2646  
00002868                          2647  NEXT:   ;for debugging single commands
00002868                          2648              
00002868                          2649              
00002868                          2650              
00002868                          2651              
00002868                          2652  
00002868                          2653  
00002868                          2654         END    START        

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
A0ACCOUNTFORZEROS   23F2
A0DONTWORRY         23F6
A1ACCOUNTFORZEROS   241E
A1DONTWORRY         2422
A2ACCOUNTFORZEROS   244A
A2DONTWORRY         244E
A3ACCOUNTFORZEROS   2476
A3DONTWORRY         247A
A4ACCOUNTFORZEROS   24A2
A4DONTWORRY         24A6
A5ACCOUNTFORZEROS   24CE
A5DONTWORRY         24D2
A6ACCOUNTFORZEROS   24FA
A6DONTWORRY         24FE
ACMP                1C00
ADD                 2840
ADDRESSDONE         27D6
AERR                2642
AERR_TEXT           3887
AFADDCONV           1BDA
AGETFIRSTADDRESS    1BC8
AGETSECADDRESS      1BE8
ALERR               26FE
ALERR_TEXT          390E
ARESETLOOP          1BFE
ASADDCONV           1BF2
ASCEND              1BB8
ASCII_ADDRESS       2798
ASCII_TO_BCD        275C
ASWAP               1C0E
A_TO_F              280E
A_TO_F2             2826
BA                  3966
BCD_TO_HEX          277A
BERR                25D4
BERR_TEXT           386F
BF                  1F92
BFGETENDADDRONE     1FB0
BFGETENDDATA        1F96
BFGETLASTEND        1FD6
BFNEXTADDR          1FA0
BFNEXTADDRTWO       1FBA
BFTEST              11C0
BLCKTEST            1134
BMOV                2008
BMOVDONE            2092
BMOVTEST            119E
BSCH                216C
BSCH1               37F7
BSCH2               37FD
BSCH3               380F
BSCHENDDATA         2170
BSCHFADDEND         2190
BSCHFIRSTADD        217A
BSCHSECONDADD       219A
BSCHSECONDFIND      21A8
BSCHTEST            115A
BTST                2096
BTST1               379A
BTST2               37AE
BTST3               37BF
BTST4               37D1
BTST5               37DC
BTSTDATALOOP        20E4
BTSTGETENDADDRONE   20B4
BTSTGETENDDATA      209A
BTSTGETLASTEND      20CE
BTSTNEXTADDR        20A4
BTSTNEXTADDRTWO     20BE
BTSTTEST            117C
BUFFER              3000
BYTEBSCH            21DA
CHKERR              2732
CHKERR_TEXT         3946
COMPLETE            215E
COMPUTATION         1AFE
COMPUTEFIRSTADD     2018
COMPUTEFOURTHADDRESS  2060
COMPUTESECONDADDRESS  2030
COMPUTETHIRDADDRESS  2048
CONVERT             1AE2
CONVERTADDRESS      27B4
CONVERTMINUS1       1AE0
D0ACCOUNTFORZEROS   2292
D0DONTWORRY         2296
D1ACCOUNTFORZEROS   22BE
D1DONTWORRY         22C2
D2ACCOUNTFORZEROS   22EA
D2DONTWORRY         22EE
D3ACCOUNTFORZEROS   2316
D3DONTWORRY         231A
D4ACCOUNTFORZEROS   2342
D4DONTWORRY         2346
D5ACCOUNTFORZEROS   236E
D5DONTWORRY         2372
D6ACCOUNTFORZEROS   239A
D6DONTWORRY         239E
D7ACCOUNTFORZEROS   23C6
D7DONTWORRY         23CA
DATALOOP            1FFA
DATATRANSFER        2088
DCMP                1C5E
DEBUG               3797
DEFAULT             1CAE
DEFAULTTEST         1B6A
DESCEND             1C16
DF                  2270
DFADDCONV           1C38
DFTST               11CE
DGETFIRSTADDRESS    1C26
DGETSECADDRESS      1C46
DISPLOOP            1A5C
DONEASCEND          1C74
DONEDESCEND         1C74
DRESETLOOP          1C5C
DSADDCONV           1C50
DSWAP               1C6C
ECHO                130A
ECHOTEST            110E
EEND                130C
EFOUND              1316
ENDBF               2004
ENDBSCH             224E
ENDCONVERT          1B10
ENDLP               1F8E
ENDPARSE            1D96
ENDPARSEL           1F86
ENDPARSEW           1E70
ENDPTRMM            1C7E
ENTER               1D98
ENTERL              1F88
ENTERW              1E72
ERROR               3755
ERROR1              3781
ERRORSR             274C
EXECUTE             2260
FAIL                20FC
FINDEND             19C8
FINDEND1            1A1E
FINDEND2            1A2E
FINDLASTNUM         1AD6
FINDNEXT            1A28
FIRSTADDRESS        200E
FLERR               2718
FLERR_TEXT          392A
FONT                1090000
FORMATGOOD          1D3E
FORMATGOOD1         1DF8
FORMATGOOD2         1E16
FORMATGOOD3         1ED2
FORMATGOOD4         1EF0
FORMATGOOD5         1F0E
FORMATGOOD6         1F2C
FOUNDB              2204
FOUNDL              2214
FOUNDW              220C
FOURTHADDRESS       2056
GGETEND             2256
GO                  2252
GOBACK              1772
GOTST               121C
GREEN               FF00
HELP                1778
HELPORHXDC          1234
HELPTST             124A
HEXASCIIDONE        2844
HEXTOASCII          27D8
HIGHHEX             1AFA
HIGHHEXMM           1D86
HIGHHEXMML          1F74
HIGHHEXMMW          1E5E
HTXT                3063
HTXT1               3074
HTXT10              35E5
HTXT11              3622
HTXT12              365A
HTXT13              369C
HTXT14              36CF
HTXT15              3716
HTXT1A              30BF
HTXT1B              30FC
HTXT2               3110
HTXT3               315B
HTXT3A              31A0
HTXT3B              31D9
HTXT3C              31ED
HTXT3D              3202
HTXT3E              321F
HTXT4               3252
HTXT4A              3299
HTXT4B              32DE
HTXT4C              32F9
HTXT4D              3317
HTXT4E              3336
HTXT5               335A
HTXT5A              33A0
HTXT6               33A9
HTXT6A              33EF
HTXT6B              3437
HTXT7               345D
HTXT7A              34A1
HTXT7B              34E9
HTXT8               3501
HTXT8A              3548
HTXT9               3570
HTXT9A              35B8
HXDC                1AB6
HXDCTEST            12C8
IERR                26B0
IERR_TEXT           38A4
IR                  396B
KEEP_CONVERTING     27E8
LONG                1E78
LONGBSCH            21F6
MDSPCTEST           1298
MEMCONT             19D2
MEMDISP             1A14
MEMNEXT             1A38
MEMSET              19C0
MEMTEST             126C
MM                  1C78
MMSPCTEST           12BA
MODIFYLOOP          1D0C
MODIFYLOOPL         1E8C
MODIFYLOOPW         1DB2
MODIFYREGS          1324
MODIFYREGTEST       12F4
MRA                 136A
MRA0                15A8
MRA1                15E8
MRA2                1628
MRA3                1668
MRA4                16A8
MRA5                16E8
MRA6                1728
MRD                 1324
MRD0                13A8
MRD1                13E8
MRD2                1428
MRD3                1468
MRD4                14A8
MRD5                14E8
MRD6                1528
MRD7                1568
MRDFINDDATA         1768
MSSPCTEST           128A
NEXT                2868
NEXTHEX             2814
NEXTMMSTEP          1D8A
NEXTMMSTEPL         1F78
NEXTMMSTEPW         1E62
NOTZEROS            2856
OUTPUTBUFF          3050
OUTPUTNUM           1B2E
PARSELOOP           1D6E
PARSELOOPL          1F5C
PARSELOOPW          1E46
PCACCOUNTFORZEROS   25B2
PCDONTWORRY         25B6
PERR                26CA
PERR_TEXT           38CD
PLACECOUNTER        27A6
PROMPT              3058
PUTBUFFER           282C
RA0                 3840
RA1                 3844
RA2                 3848
RA3                 384C
RA4                 3850
RA5                 3854
RA6                 3858
RD0                 3820
RD1                 3824
RD2                 3828
RD3                 382C
RD4                 3830
RD5                 3834
RD6                 3838
RD7                 383C
READ                20EE
RESTORE             10F6
RID_ZEROS           2834
RPC                 3867
RSR                 386B
RSS                 385C
RUS                 3863
SECONDADDRESS       2026
SECONDLOOP          1A94
SHELL               1070
SIZECHECK           1C7C
SORTTEST            11E6
SORTW               1B44
SPACE               3796
SRACCOUNTFORZEROS   255A
SRDONTWORRY         255E
SSACCOUNTFORZEROS   2586
SSDONTWORRY         258A
SSW                 3960
START               1000
STOREDATA           1FE0
STOREDATABTST       20D8
SUCCESSTEXT         2218
TESTOP              21B2
THIRDADDRESS        203E
UNKNOWNCMD          2858
UPPER               2772
USPACCOUNTFORZEROS  252C
USPDONTWORRY        2530
WORD                1D9E
WORDBSCH            21E8
ZEROS               2854
ZERR                26E4
ZERR_TEXT           38EB

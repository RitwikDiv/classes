00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.02
Created On: 4/27/2015 9:59:50 AM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :  Monitor Project
00000000                             3  * Written by :  Adam Sumner 
00000000                             4  * Date       :  4/28/2015
00000000                             5  * Description:  Monitor Final Project
00000000                             6  *-----------------------------------------------------------
00000000                             7  
00000000                             8  
00000000                             9  *---------------DISCLAIMER!-------------------------*
00000000                            10  *Subroutines are not as optimized as they should be!*
00000000                            11  *Things such as checking for spaces, getting addresses, etc. *
00000000                            12  *can easily be their own subroutines to save code space!*
00000000                            13  *Luckily code size is not a huge concern*
00000000                            14  *This is why there are no plans to optimize in the future*
00000000                            15  
00000000                            16  
00000000                            17  
00003000                            18      ORG    $3000
00003000                            19      
00003000                            20  BUFFER        DS.B      80              ;space for command storage 
00003050                            21  OUTPUTBUFF    DS.B      8               ;to output numbers easily
00003058= 4D 4F 4E 49 54 4F ...     22  PROMPT        DC.B      'MONITOR441>'   ;prompt definition
00003063                            23  
00003063                            24  *Help text*
00003063= 4C 69 73 74 20 6F ...     25  HTXT          DC.B      'List of Commands:'
00003074= 4D 44 53 50 20 3C ...     26  HTXT1         DC.B      'MDSP <address1> <address2> - Memory Display: Outputs the address and memory' 
000030BF= 63 6F 6E 74 65 6E ...     27  HTXT1A        DC.B      'contents from <address1> to <address2> amd from <address1> to' 
000030FC= 3C 61 64 64 72 65 ...     28  HTXT1B        DC.B      '<address2 + 16bytes>'
00003110= 48 58 44 45 43 20 ...     29  HTXT2         DC.B      'HXDEC <num> - Conversion: Converts a hexadecimal number to a decimal number'
0000315B= 53 4F 52 54 57 20 ...     30  HTXT3         DC.B      'SORTW <option> <address1> <address2> - Sort: Sorts a block of memory.'
000031A0= 3C 6F 70 74 69 6F ...     31  HTXT3A        DC.B      '<option> specifies the order in which the list is sorted:'
000031D9= 3B 41 20 2D 20 41 ...     32  HTXT3B        DC.B      ';A - Ascending Order'
000031ED= 3B 44 20 2D 20 44 ...     33  HTXT3C        DC.B      ';D - Descending Order'
00003202= 2D 28 64 65 66 61 ...     34  HTXT3D        DC.B      '-(default) - Descending Order'
0000321F= 53 6F 72 74 73 20 ...     35  HTXT3E        DC.B      'Sorts block of memory from <address1> to <address2>'
00003252= 4D 4D 20 3C 6F 70 ...     36  HTXT4         DC.B      'MM <option> <address> - Memory Modify: Display memory and, as required,'
00003299= 6D 6F 64 69 66 79 ...     37  HTXT4A        DC.B      'modify data or enter new data. <option> specifies the number of bytes'
000032DE= 64 69 73 70 6C 61 ...     38  HTXT4B        DC.B      'displayed for each address:'
000032F9= 2D 28 64 65 66 61 ...     39  HTXT4C        DC.B      '-(default) - Displays one byte'
00003317= 3B 57 20 2D 20 44 ...     40  HTXT4D        DC.B      ';W - Displays one word(2 bytes)'
00003336= 3B 4C 20 2D 20 44 ...     41  HTXT4E        DC.B      ';L - Displays one long word(4 bytes)'
0000335A= 4D 53 20 3C 64 61 ...     42  HTXT5         DC.B      'MS <data> <address> - Memory Set: Alters memory by setting <data> into' 
000033A0= 3C 61 64 64 72 65 ...     43  HTXT5A        DC.B      '<address>'
000033A9= 42 46 20 3C 64 61 ...     44  HTXT6         DC.B      'BF <data> <address1> <address2> - Block Fill: Fills memory starting at' 
000033EF= 3C 61 64 64 72 65 ...     45  HTXT6A        DC.B      '<address1> to <address2>. Both must be even addresses. This command only'
00003437= 77 6F 72 6B 73 20 ...     46  HTXT6B        DC.B      'works with a word-sized <data> pattern'
0000345D= 42 4D 4F 56 20 3C ...     47  HTXT7         DC.B      'BMOV <address1> <address2> <address3> <address4> - Block Move: Moves' 
000034A1= 61 20 64 75 70 6C ...     48  HTXT7A        DC.B      'a duplicate block of memory from <address1> to <address2> into the block'
000034E9= 3C 61 64 64 72 65 ...     49  HTXT7B        DC.B      '<address3> to <address4>'
00003501= 42 54 53 54 20 3C ...     50  HTXT8         DC.B      'BTST <data> <address1> <address2> - Block Test: Tests a block of memory'
00003548= 66 72 6F 6D 20 3C ...     51  HTXT8A        DC.B      'from <address1> to <address2> for <data>'
00003570= 42 53 43 48 20 3C ...     52  HTXT9         DC.B      'BSCH <data> <address1> <address2> - Block Search: Searches for <data> in'
000035B8= 69 6E 20 6D 65 6D ...     53  HTXT9A        DC.B      'in memory block from <address1> to <address2>'
000035E5= 47 4F 20 3C 61 64 ...     54  HTXT10        DC.B      'GO <address> - Execute Program: Executes program at <address>'
00003622= 44 46 20 2D 20 44 ...     55  HTXT11        DC.B      'DF - Display Formatted Registers: Displays all registers'
0000365A= 48 45 4C 50 20 2D ...     56  HTXT12        DC.B      'HELP - Help: Displays all available commands and their description'
0000369C= 45 43 48 4F 20 3C ...     57  HTXT13        DC.B      'ECHO <data> - Echo: Displays <data> to the terminal'
000036CF= 2E 3C 52 65 67 69 ...     58  HTXT14        DC.B      '.<Register Type><Register Number> <data>- Modify Register: Modifies the'
00003716= 63 6F 6E 74 65 6E ...     59  HTXT15        DC.B      'contents of register <Register Type><Register Number> to <data>'
00003755                            60  
00003755                            61  *Error Message*
00003755= 45 52 52 4F 52 3A ...     62  ERROR         DC.B      'ERROR: TRY COMMAND AGAIN WITH CORRECT SYNTAX'
00003781= 45 52 52 4F 52 3A ...     63  ERROR1        DC.B      'ERROR: UNKOWN COMMAND'
00003796                            64  *Space*
00003796= 20                        65  SPACE         DC.B      ' '
00003797                            66  
00003797                            67  *Debugger Print Statement*
00003797= 57 49 4E                  68  DEBUG         DC.B      'WIN'      
0000379A                            69  
0000379A                            70  *BTST Text*
0000379A= 4E 75 6D 62 65 72 ...     71  BTST1         DC.B      'Number written was: '
000037AE= 4E 75 6D 62 65 72 ...     72  BTST2         DC.B      'Number read was: '
000037BF= 42 6C 6F 63 6B 20 ...     73  BTST3         DC.B      'Block Test PASSES!'
000037D1= 46 41 49 4C 55 52 ...     74  BTST4         DC.B      'FAILURE!!!!'  
000037DC= 45 72 72 6F 72 20 ...     75  BTST5         DC.B      'Error Occurred at address: '      
000037F7                            76  
000037F7                            77  *BSCH Text*
000037F7= 44 61 74 61 3A 20         78  BSCH1         DC.B      'Data: '
000037FD= 46 6F 75 6E 64 20 ...     79  BSCH2         DC.B      'Found at address: '
0000380F= 50 61 74 74 65 72 ...     80  BSCH3         DC.B      'Pattern not found'
00003820                            81  
00003820                            82  *DF Text*
00003820= 44 30 3A 20               83  RD0            DC.B      'D0: '
00003824= 44 31 3A 20               84  RD1            DC.B      'D1: '
00003828= 44 32 3A 20               85  RD2            DC.B      'D2: '
0000382C= 44 33 3A 20               86  RD3            DC.B      'D3: '
00003830= 44 34 3A 20               87  RD4            DC.B      'D4: '
00003834= 44 35 3A 20               88  RD5            DC.B      'D5: '
00003838= 44 36 3A 20               89  RD6            DC.B      'D6: '
0000383C= 44 37 3A 20               90  RD7            DC.B      'D7: '
00003840                            91  
00003840= 41 30 3A 20               92  RA0            DC.B      'A0: '
00003844= 41 31 3A 20               93  RA1            DC.B      'A1: '
00003848= 41 32 3A 20               94  RA2            DC.B      'A2: '
0000384C= 41 33 3A 20               95  RA3            DC.B      'A3: '
00003850= 41 34 3A 20               96  RA4            DC.B      'A4: '
00003854= 41 35 3A 20               97  RA5            DC.B      'A5: '
00003858= 41 36 3A 20               98  RA6            DC.B      'A6: '
0000385C                            99  
0000385C= 53 53 2F 41 37 3A 20     100  RSS            DC.B      'SS/A7: '
00003863= 55 53 3A 20              101  RUS            DC.B      'US: '
00003867= 50 43 3A 20              102  RPC            DC.B      'PC: '
0000386B= 53 52 3A 20              103  RSR            DC.B      'SR: '
0000386F                           104  
0000386F                           105  *Exception Messages*
0000386F= 41 20 42 75 73 20 ...    106  BERR_TEXT      DC.B 'A Bus Error Occured! :(',0
00003887= 41 6E 20 41 64 64 ...    107  AERR_TEXT      DC.B 'An Address Error Occured! :(',0
000038A4= 41 6E 20 49 6C 6C ...    108  IERR_TEXT      DC.B 'An Illegal Instruction Error Occured! :(',0
000038CD= 41 20 50 72 69 76 ...    109  PERR_TEXT      DC.B 'A Privilege Error Occured! :(',0
000038EB= 41 20 44 69 76 69 ...    110  ZERR_TEXT      DC.B 'A Divide by Zero Error Occured! :(',0
0000390E= 41 6E 20 41 20 4C ...    111  ALERR_TEXT      DC.B 'An A Line Error Occured! :(',0
0000392A= 41 6E 20 46 20 4C ...    112  FLERR_TEXT      DC.B 'An F Line Error Occured! :(',0
00003946= 41 20 43 68 65 63 ...    113  CHKERR_TEXT      DC.B 'A Check Error Occured! :(',0
00003960                           114  
00003960= 53 53 57 3A 20 00        115  SSW            DC.B 'SSW: ',0
00003966= 42 41 3A 20 00           116  BA             DC.B 'BA: ',0
0000396B= 49 52 3A 20 00           117  IR             DC.B 'IR: ',0
00003970                           118  
00003970                           119  *Color definition for Font*
00003970  =01090000                120  FONT        EQU     $01090000  
00003970  =0000FF00                121  GREEN       EQU     $0000FF00
00003970                           122  
00001000                           123      ORG     $1000
00001000                           124  START:  
00001000  48E7 E040                125          MOVEM.L D0-D2/A1,-(SP)
00001004                           126          *Makes it look like a REAL terminal*
00001004  223C 0000FF00            127          MOVE.L  #GREEN,D1
0000100A  243C 01090000            128          MOVE.L  #FONT,D2
00001010  103C 0015                129          MOVE.B  #21,D0
00001014  4E4F                     130          TRAP    #15
00001016  4281                     131          CLR.L   D1
00001018  4282                     132          CLR.L   D2
0000101A  4200                     133          CLR.B   D0
0000101C                           134          *Load custom exceptions*
0000101C  43F9 0000253C            135          LEA BERR,A1 ;init exception handlers
00001022  21C9 0008                136          MOVE.L A1,$8
00001026  43F9 000025AA            137          LEA AERR,A1
0000102C  21C9 000C                138          MOVE.L A1,$C
00001030  43F9 00002618            139          LEA IERR,A1
00001036  21C9 0010                140          MOVE.L A1,$10
0000103A  43F9 0000264C            141          LEA ZERR,A1
00001040  21C9 0014                142          MOVE.L A1,$14
00001044  43F9 0000269A            143          LEA CHKERR,A1
0000104A  21C9 0018                144          MOVE.L  A1,$18
0000104E  43F9 00002632            145          LEA PERR,A1
00001054  21C9 0020                146          MOVE.L A1,$20
00001058  43F9 00002666            147          LEA ALERR,A1
0000105E  21C9 0028                148          MOVE.L A1,$28
00001062  43F9 00002680            149          LEA FLERR,A1
00001068  21C9 002C                150          MOVE.L A1,$2C
0000106C  4CDF 0207                151          MOVEM.L (SP)+,D0-D2/A1  ;restore any preset values
00001070                           152  
00001070                           153  *--------------------------------------------------------------------------------------*
00001070                           154  SHELL:       
00001070  4878 1070                155              PEA     *           ;save PC on Stack for DF
00001074  588F                     156              ADD.L   #4,SP       ;get original value of stack pointer
00001076  2F4F FFF8                157              MOVE.L  SP,-8(SP)   ;save it
0000107A  DFFC FFFFFFF8            158              ADD.L   #-8,SP      ;update Stack position
00001080  40E7                     159              MOVE    SR,-(SP)    ;save Status register for use with DF
00001082  2F0E                     160              MOVE.L  A6,-(SP)    ;temp save
00001084  4E6E                     161              MOVE    USP,A6      ;for use with DF command
00001086  2F0E                     162              MOVE.L  A6,-(SP)    ;store USP to STACK
00001088  588F                     163              ADD.L   #4,SP       
0000108A  2C57                     164              MOVE.L  (SP),A6    ;restore original value
0000108C  2F67 0004                165              MOVE.L  -(SP),4(SP)  ;move correct value to correct stack position
00001090  588F                     166              ADD.L   #4,SP       ;point stack to CORRECT PLACE
00001092                           167              
00001092                           168  
00001092  48E7 FFFE                169              MOVEM.L D0-D7/A0-A6,-(SP)  ;save initial values of registers
00001096  48E7 FFFE                170              MOVEM.L D0-D7/A0-A6,-(SP)  ;unorthodox implementation to save registers when using DF command
0000109A                           171               
0000109A                           172                
0000109A  43F8 3058                173              LEA  PROMPT,A1      ;Load message            
0000109E  323C 000B                174              MOVE.W  #11,D1      ;load n bytes
000010A2  103C 0001                175              MOVE.B  #1,D0       ;set up trap call
000010A6  4E4F                     176              TRAP    #15
000010A8  43F8 3000                177              LEA     BUFFER,A1   ;set up storage for command
000010AC  103C 0002                178              MOVE.B  #2,D0       ;load input trap call
000010B0  4E4F                     179              TRAP    #15
000010B2  0C11 0048                180              CMP.B   #$48,(A1)   ;check for help/hxdc
000010B6  6700 017C                181              BEQ     HELPORHXDC
000010BA  0C11 004D                182              CMP.B   #$4D,(A1)   ;check for memory command
000010BE  6700 01AC                183              BEQ     MEMTEST
000010C2  0C11 0047                184              CMP.B   #$47,(A1)   ;check for go
000010C6  6700 0154                185              BEQ     GOTST
000010CA  0C11 0044                186              CMP.B   #$44,(A1)   ;check for df
000010CE  6700 00FE                187              BEQ     DFTST
000010D2  0C11 0042                188              CMP.B   #$42,(A1)   ;check for blck command
000010D6  6700 005C                189              BEQ     BLCKTEST
000010DA  0C11 0053                190              CMP.B   #$53,(A1)   ;check for sort command
000010DE  6700 0106                191              BEQ     SORTTEST
000010E2  0C11 0045                192              CMP.B   #$45,(A1)   ;check for echo command
000010E6  6700 0026                193              BEQ     ECHOTEST
000010EA  0C11 002E                194              CMP.B   #$2E,(A1)   ;check for modify register command
000010EE  6700 0204                195              BEQ     MODIFYREGTEST
000010F2  6000 16CC                196              BRA     UNKNOWNCMD
000010F6  4CDF 7FFF                197  RESTORE:    MOVEM.L (SP)+,D0-D7/A0-A6
000010FA  4CDF 7FFF                198              MOVEM.L (SP)+,D0-D7/A0-A6 ;double restore because of DF hack workaround
000010FE  588F                     199              ADD.L   #4,SP       ;account for USP, it'll fix itself (it shouldn't be used)
00001100                           200                                  ;EASY68k simulator starts in supervisor mode
00001100  46DF                     201              MOVE    (SP)+,SR
00001102  201F                     202              MOVE.L  (SP)+,D0    ;save stack cuz it'll get destroyed
00001104  588F                     203              ADD.L   #4,SP       ;get rid of PC, itll fix itself
00001106  2E40                     204              MOVE.L  D0,SP
00001108  4280                     205              CLR.L   D0          ;no longer needed
0000110A                           206  
0000110A  6000 FF64                207              BRA     SHELL
0000110E                           208  *--------------------------------------------------------------------------------------*
0000110E                           209  
0000110E  5289                     210  ECHOTEST:   ADD.L   #1,A1
00001110  0C19 0043                211              CMP.B   #$43,(A1)+   ;C?
00001114  6600 16AA                212              BNE     UNKNOWNCMD
00001118  0C19 0048                213              CMP.B   #$48,(A1)+   ;H?
0000111C  6600 16A2                214              BNE     UNKNOWNCMD
00001120  0C19 004F                215              CMP.B   #$4F,(A1)+   ;O?
00001124  6600 169A                216              BNE     UNKNOWNCMD
00001128  0C19 0020                217              CMP.B   #$20,(A1)+   ;SPACE?
0000112C  6700 01DC                218              BEQ     ECHO
00001130  6000 1582                219              BRA     ERRORSR
00001134                           220  *--------------------------------------------------------------------------------------*
00001134                           221  
00001134                           222  
00001134                           223  *--------------------------------------------------------------------------------------*
00001134                           224  
00001134  5289                     225  BLCKTEST:   ADD.L   #1,A1
00001136  0C11 0046                226              CMP.B   #$46,(A1)   ;BF?
0000113A  6700 0084                227              BEQ     BFTEST
0000113E  0C11 004D                228              CMP.B   #$4D,(A1)   ;BMOV?
00001142  6700 005A                229              BEQ     BMOVTEST
00001146  0C11 0054                230              CMP.B   #$54,(A1)   ;BTST?
0000114A  6700 0030                231              BEQ     BTSTTEST
0000114E  0C11 0053                232              CMP.B   #$53,(A1)   ;BSCH?
00001152  6700 0006                233              BEQ     BSCHTEST
00001156  6000 1668                234              BRA     UNKNOWNCMD
0000115A                           235  *--------------------------------------------------------------------------------------*
0000115A                           236  
0000115A  5289                     237  BSCHTEST:   ADD.L   #1,A1
0000115C  0C11 0043                238              CMP.B   #$43,(A1)
00001160  6600 165E                239              BNE     UNKNOWNCMD
00001164  5289                     240              ADD.L   #1,A1
00001166  0C11 0048                241              CMP.B   #$48,(A1)
0000116A  6600 1654                242              BNE     UNKNOWNCMD
0000116E  5289                     243              ADD.L   #1,A1
00001170  0C11 0020                244              CMP.B   #$20,(A1)
00001174  6600 153E                245              BNE     ERRORSR
00001178  6000 0F5A                246              BRA     BSCH
0000117C                           247                        
0000117C                           248  *--------------------------------------------------------------------------------------*
0000117C                           249  
0000117C                           250  BTSTTEST:   
0000117C  5289                     251              ADD.L   #1,A1
0000117E  0C11 0053                252              CMP.B   #$53,(A1)
00001182  6600 163C                253              BNE     UNKNOWNCMD
00001186  5289                     254              ADD.L   #1,A1
00001188  0C11 0054                255              CMP.B   #$54,(A1)
0000118C  6600 1632                256              BNE     UNKNOWNCMD
00001190  5289                     257              ADD.L   #1,A1
00001192  0C11 0020                258              CMP.B   #$20,(A1)
00001196  6600 151C                259              BNE     ERRORSR
0000119A  6000 0E62                260              BRA     BTST
0000119E                           261  
0000119E                           262  *--------------------------------------------------------------------------------------*
0000119E                           263  
0000119E  5289                     264  BMOVTEST:   ADD.L   #1,A1
000011A0  0C11 004F                265              CMP.B   #$4F,(A1)
000011A4  6600 161A                266              BNE     UNKNOWNCMD
000011A8  5289                     267              ADD.L   #1,A1
000011AA  0C11 0056                268              CMP.B   #$56,(A1)
000011AE  6600 1610                269              BNE     UNKNOWNCMD
000011B2  5289                     270              ADD.L   #1,A1
000011B4  0C11 0020                271              CMP.B   #$20,(A1)
000011B8  6600 14FA                272              BNE     ERRORSR
000011BC  6000 0DB2                273              BRA     BMOV
000011C0                           274  *--------------------------------------------------------------------------------------*
000011C0  5289                     275  BFTEST:     ADD.L   #1,A1
000011C2  0C11 0020                276              CMP.B   #$20,(A1)
000011C6  6600 14EC                277              BNE     ERRORSR
000011CA  6000 0D2E                278              BRA     BF
000011CE                           279  *--------------------------------------------------------------------------------------*
000011CE                           280  
000011CE  5289                     281  DFTST:      ADD.L   #1,A1
000011D0  0C11 0046                282              CMP.B   #$46,(A1)
000011D4  6600 15EA                283              BNE     UNKNOWNCMD
000011D8  5289                     284              ADD.L   #1,A1
000011DA  0C11 0000                285              CMP.B   #$00,(A1)
000011DE  6600 14D4                286              BNE     ERRORSR
000011E2  6000 0FF4                287              BRA     DF
000011E6                           288  *--------------------------------------------------------------------------------------*
000011E6                           289  
000011E6  5289                     290  SORTTEST:    ADD.L   #1,A1
000011E8  0C11 004F                291              CMP.B   #$4F,(A1)   ;O?
000011EC  6600 15D2                292              BNE     UNKNOWNCMD
000011F0  5289                     293               ADD.L   #1,A1
000011F2  0C11 0052                294              CMP.B   #$52,(A1)   ;R?
000011F6  6600 15C8                295              BNE     UNKNOWNCMD
000011FA  5289                     296              ADD.L   #1,A1
000011FC  0C11 0054                297              CMP.B   #$54,(A1)   ;T?
00001200  6600 15BE                298              BNE     UNKNOWNCMD
00001204  5289                     299              ADD.L   #1,A1
00001206  0C11 0057                300              CMP.B   #$57,(A1)   ;W?
0000120A  6600 15B4                301              BNE     UNKNOWNCMD
0000120E  5289                     302              ADD.L   #1,A1
00001210  0C11 0020                303              CMP.B   #$20,(A1)
00001214  6600 149E                304              BNE     ERRORSR
00001218                           305  
00001218  6000 092A                306              BRA     SORTW
0000121C                           307  *--------------------------------------------------------------------------------------*
0000121C                           308  
0000121C  5289                     309  GOTST:      ADD.L   #1,A1
0000121E  0C11 004F                310              CMP.B   #$4F,(A1)
00001222  6600 159C                311              BNE     UNKNOWNCMD
00001226  5289                     312              ADD.L   #1,A1
00001228  0C19 0020                313              CMP.B   #$20,(A1)+
0000122C  6600 1486                314              BNE     ERRORSR
00001230  6000 0F88                315              BRA     GO
00001234                           316  *--------------------------------------------------------------------------------------*
00001234                           317  
00001234  5289                     318  HELPORHXDC: ADD.L   #1,A1
00001236  0C11 0045                319              CMP.B   #$45,(A1)   ;is it help?
0000123A  6700 000E                320              BEQ     HELPTST
0000123E  0C11 0058                321              CMP.B   #$58,(A1)   ;or is it hxdc
00001242  6700 0084                322              BEQ     HXDCTEST
00001246  6000 1578                323              BRA     UNKNOWNCMD     
0000124A                           324  *--------------------------------------------------------------------------------------*
0000124A                           325  
0000124A                           326  HELPTST:   
0000124A  5289                     327             ADD.L   #1,A1   ; check next char
0000124C  0C11 004C                328             CMP.B    #$4C,(A1) ;check for L
00001250  6600 156E                329             BNE      UNKNOWNCMD
00001254  5289                     330             ADD.L   #1,A1
00001256  0C11 0050                331             CMP.B    #$50,(A1)   ;check for P
0000125A  6600 1564                332             BNE      UNKNOWNCMD
0000125E  5289                     333             ADD.L   #1,A1   ;check for anything else
00001260  0C11 0000                334             CMP.B    #$00,(A1)
00001264  6600 144E                335             BNE      ERRORSR
00001268  6000 050E                336             BRA      HELP
0000126C                           337              
0000126C                           338  
0000126C                           339   
0000126C                           340  *--------------------------------------------------------------------------------------*
0000126C                           341              
0000126C  5289                     342  MEMTEST:    ADD.L   #1,A1
0000126E  0C11 0053                343              CMP.B   #$53,(A1)
00001272  6700 0016                344              BEQ     MSSPCTEST
00001276  0C11 0044                345              CMP.B   #$44,(A1)
0000127A  6700 001C                346              BEQ     MDSPCTEST
0000127E  0C11 004D                347              CMP.B   #$4D,(A1)
00001282  6700 0036                348              BEQ     MMSPCTEST
00001286  6000 1538                349              BRA     UNKNOWNCMD
0000128A                           350              
0000128A  5289                     351  MSSPCTEST   ADD.L   #1,A1
0000128C  0C11 0020                352              CMP.B   #$20,(A1)
00001290  6700 072E                353              BEQ     MEMSET
00001294  6000 141E                354              BRA     ERRORSR
00001298                           355              
00001298                           356  MDSPCTEST:  
00001298  5289                     357              ADD.L   #1,A1
0000129A  0C11 0053                358              CMP.B   #$53,(A1)
0000129E  6600 1414                359              BNE     ERRORSR
000012A2  5289                     360              ADD.L   #1,A1
000012A4  0C11 0050                361              CMP.B   #$50,(A1)
000012A8  6600 1516                362              BNE     UNKNOWNCMD
000012AC  5289                     363              ADD.L   #1,A1
000012AE  0C11 0020                364              CMP.B   #$20,(A1)
000012B2  6700 0760                365              BEQ     MEMDISP          
000012B6  6000 13FC                366              BRA     ERRORSR
000012BA                           367             
000012BA  5289                     368  MMSPCTEST:  ADD.L   #1,A1
000012BC  0C11 0020                369              CMP.B   #$20,(A1)
000012C0  6700 0968                370              BEQ     MM          
000012C4  6000 13EE                371              BRA     ERRORSR
000012C8                           372  *--------------------------------------------------------------------------------------*
000012C8                           373  HXDCTEST:   
000012C8  5289                     374              ADD.L   #1,A1
000012CA  0C11 0044                375              CMP.B   #$44,(A1)
000012CE  6600 14F0                376              BNE    UNKNOWNCMD
000012D2  5289                     377              ADD.L   #1,A1
000012D4  0C11 0045                378              CMP.B   #$45,(A1)
000012D8  6600 14E6                379              BNE     UNKNOWNCMD
000012DC  5289                     380              ADD.L   #1,A1
000012DE  0C11 0043                381              CMP.B   #$43,(A1)
000012E2  6600 14DC                382              BNE     UNKNOWNCMD
000012E6  5289                     383              ADD.L   #1,A1
000012E8  0C11 0020                384              CMP.B   #$20,(A1)
000012EC  6600 13C6                385              BNE     ERRORSR
000012F0  6000 07C4                386              BRA     HXDC
000012F4                           387  *--------------------------------------------------------------------------------------*
000012F4                           388  MODIFYREGTEST:
000012F4  5289                     389              ADD.L   #1,A1
000012F6  0C11 0044                390              CMP.B   #$44,(A1)
000012FA  6700 0028                391              BEQ     MRD
000012FE  0C11 0041                392              CMP.B   #$41,(A1)
00001302  6700 0066                393              BEQ     MRA
00001306  6000 14B8                394              BRA     UNKNOWNCMD
0000130A                           395              
0000130A                           396  *----------------------------USER DEFINED COMMANDS---------------------------------*
0000130A                           397  *--------------------------------------------------------------------------------------*
0000130A                           398  ECHO: *What terminal DOESN'T have echo?*
0000130A                           399  
0000130A  2449                     400          MOVE.L  A1,A2   ;setup to find end of string
0000130C  0C1A 0000                401  EEND:   CMP.B   #$00,(A2)+
00001310  6700 0004                402          BEQ     EFOUND
00001314  60F6                     403          BRA     EEND
00001316                           404  EFOUND:
00001316  538A                     405          SUB.L   #1,A2   ;off by one
00001318  95C9                     406          SUB.L   A1,A2   ;find out how many bytes
0000131A  220A                     407          MOVE.L  A2,D1   ;place it for trap function
0000131C  7000                     408          MOVE.L  #0,D0
0000131E  4E4F                     409          TRAP    #15
00001320                           410          
00001320  6000 FDD4                411          BRA RESTORE
00001324                           412  *--------------------------------------------------------------------------------------*
00001324                           413  MODIFYREGS:
00001324                           414  
00001324                           415  MRD:
00001324  5289                     416          ADD.L   #1,A1   ;inc
00001326  0C11 0030                417          CMP.B   #$30,(A1)
0000132A  6700 007C                418          BEQ     MRD0
0000132E  0C11 0031                419          CMP.B   #$31,(A1)
00001332  6700 00B4                420          BEQ     MRD1
00001336  0C11 0032                421          CMP.B   #$32,(A1)
0000133A  6700 00EC                422          BEQ     MRD2
0000133E  0C11 0033                423          CMP.B   #$33,(A1)
00001342  6700 0124                424          BEQ     MRD3
00001346  0C11 0034                425          CMP.B   #$34,(A1)
0000134A  6700 015C                426          BEQ     MRD4
0000134E  0C11 0035                427          CMP.B   #$35,(A1)
00001352  6700 0194                428          BEQ     MRD5
00001356  0C11 0036                429          CMP.B   #$36,(A1)
0000135A  6700 01CC                430          BEQ     MRD6
0000135E  0C11 0037                431          CMP.B   #$37,(A1)
00001362  6700 0204                432          BEQ     MRD7
00001366  6000 134C                433          BRA     ERRORSR
0000136A                           434  
0000136A                           435  MRA:
0000136A  5289                     436          ADD.L   #1,A1   ;inc
0000136C  0C11 0030                437          CMP.B   #$30,(A1)
00001370  6700 0236                438          BEQ     MRA0
00001374  0C11 0031                439          CMP.B   #$31,(A1)
00001378  6700 026E                440          BEQ     MRA1
0000137C  0C11 0032                441          CMP.B   #$32,(A1)
00001380  6700 02A6                442          BEQ     MRA2
00001384  0C11 0033                443          CMP.B   #$33,(A1)
00001388  6700 02DE                444          BEQ     MRA3
0000138C  0C11 0034                445          CMP.B   #$34,(A1)
00001390  6700 0316                446          BEQ     MRA4
00001394  0C11 0035                447          CMP.B   #$35,(A1)
00001398  6700 034E                448          BEQ     MRA5
0000139C  0C11 0036                449          CMP.B   #$36,(A1)
000013A0  6700 0386                450          BEQ     MRA6
000013A4  6000 130E                451          BRA     ERRORSR
000013A8                           452               
000013A8                           453  
000013A8                           454  
000013A8                           455          
000013A8                           456          
000013A8                           457  MRD0: 
000013A8  5289                     458          ADD.L   #1,A1
000013AA  0C19 0020                459          CMP.B   #$20,(A1)+
000013AE  6600 1304                460          BNE     ERRORSR
000013B2  2449                     461          MOVE.L  A1,A2
000013B4  264A                     462          MOVE.L  A2,A3
000013B6  4EB9 00001768            463          JSR     MRDFINDDATA
000013BC  538B                     464          SUB.L   #1,A3
000013BE  4EB9 00002700            465          JSR     ASCII_ADDRESS   ;convert data to hex
000013C4  2F05                     466          MOVE.L  D5,-(SP)        ;store it temporarily
000013C6  588F                     467          ADD.L   #4,SP       ;dont lose data
000013C8  4CDF 7FFF                468          MOVEM.L (SP)+,D0-D7/A0-A6
000013CC  4CDF 7FFF                469          MOVEM.L (SP)+,D0-D7/A0-A6 ;double restore because of DF hack workaround
000013D0  588F                     470          ADD.L   #4,SP       ;account for USP, it'll fix itself (it shouldn't be used)
000013D2                           471                                  ;EASY68k simulator starts in supervisor mode
000013D2  46DF                     472          MOVE    (SP)+,SR
000013D4  588F                     473          ADD.L   #4,SP       ;skip saved stack
000013D6  9FFC 00000086            474          SUB.L   #134,SP     ;find data again
000013DC  2017                     475          MOVE.L  (SP),D0
000013DE  DFFC 0000008A            476          ADD.L   #138,SP     ;go back to original spot
000013E4  6000 FC8A                477          BRA     SHELL
000013E8                           478               
000013E8                           479  MRD1:
000013E8  5289                     480          ADD.L   #1,A1
000013EA  0C19 0020                481          CMP.B   #$20,(A1)+
000013EE  6600 12C4                482          BNE     ERRORSR
000013F2  2449                     483          MOVE.L  A1,A2
000013F4  264A                     484          MOVE.L  A2,A3
000013F6  4EB9 00001768            485          JSR     MRDFINDDATA
000013FC  538B                     486          SUB.L   #1,A3
000013FE  4EB9 00002700            487          JSR     ASCII_ADDRESS   ;convert data to hex
00001404  2F05                     488          MOVE.L  D5,-(SP)        ;store it temporarily
00001406  588F                     489          ADD.L   #4,SP       ;dont lose data
00001408  4CDF 7FFF                490          MOVEM.L (SP)+,D0-D7/A0-A6
0000140C  4CDF 7FFF                491          MOVEM.L (SP)+,D0-D7/A0-A6 ;double restore because of DF hack workaround
00001410  588F                     492          ADD.L   #4,SP       ;account for USP, it'll fix itself (it shouldn't be used)
00001412                           493                                  ;EASY68k simulator starts in supervisor mode
00001412  46DF                     494          MOVE    (SP)+,SR
00001414  588F                     495          ADD.L   #4,SP       ;skip saved stack
00001416  9FFC 00000086            496          SUB.L   #134,SP     ;find data again
0000141C  2217                     497          MOVE.L  (SP),D1
0000141E  DFFC 0000008A            498          ADD.L   #138,SP     ;go back to original spot
00001424  6000 FC4A                499          BRA     SHELL
00001428                           500  
00001428                           501  MRD2:
00001428  5289                     502          ADD.L   #1,A1
0000142A  0C19 0020                503          CMP.B   #$20,(A1)+
0000142E  6600 1284                504          BNE     ERRORSR
00001432  2449                     505          MOVE.L  A1,A2
00001434  264A                     506          MOVE.L  A2,A3
00001436  4EB9 00001768            507          JSR     MRDFINDDATA
0000143C  538B                     508          SUB.L   #1,A3
0000143E  4EB9 00002700            509          JSR     ASCII_ADDRESS   ;convert data to hex
00001444  2F05                     510          MOVE.L  D5,-(SP)        ;store it temporarily
00001446  588F                     511          ADD.L   #4,SP       ;dont lose data
00001448  4CDF 7FFF                512          MOVEM.L (SP)+,D0-D7/A0-A6
0000144C  4CDF 7FFF                513          MOVEM.L (SP)+,D0-D7/A0-A6 ;double restore because of DF hack workaround
00001450  588F                     514          ADD.L   #4,SP       ;account for USP, it'll fix itself (it shouldn't be used)
00001452                           515                                  ;EASY68k simulator starts in supervisor mode
00001452  46DF                     516          MOVE    (SP)+,SR
00001454  588F                     517          ADD.L   #4,SP       ;skip saved stack
00001456  9FFC 00000086            518          SUB.L   #134,SP     ;find data again
0000145C  2417                     519          MOVE.L  (SP),D2
0000145E  DFFC 0000008A            520          ADD.L   #138,SP     ;go back to original spot
00001464  6000 FC0A                521          BRA     SHELL
00001468                           522  
00001468                           523  MRD3:
00001468  5289                     524          ADD.L   #1,A1
0000146A  0C19 0020                525          CMP.B   #$20,(A1)+
0000146E  6600 1244                526          BNE     ERRORSR
00001472  2449                     527          MOVE.L  A1,A2
00001474  264A                     528          MOVE.L  A2,A3
00001476  4EB9 00001768            529          JSR     MRDFINDDATA
0000147C  538B                     530          SUB.L   #1,A3
0000147E  4EB9 00002700            531          JSR     ASCII_ADDRESS   ;convert data to hex
00001484  2F05                     532          MOVE.L  D5,-(SP)        ;store it temporarily
00001486  588F                     533          ADD.L   #4,SP       ;dont lose data
00001488  4CDF 7FFF                534          MOVEM.L (SP)+,D0-D7/A0-A6
0000148C  4CDF 7FFF                535          MOVEM.L (SP)+,D0-D7/A0-A6 ;double restore because of DF hack workaround
00001490  588F                     536          ADD.L   #4,SP       ;account for USP, it'll fix itself (it shouldn't be used)
00001492                           537                                  ;EASY68k simulator starts in supervisor mode
00001492  46DF                     538          MOVE    (SP)+,SR
00001494  588F                     539          ADD.L   #4,SP       ;skip saved stack
00001496  9FFC 00000086            540          SUB.L   #134,SP     ;find data again
0000149C  2617                     541          MOVE.L  (SP),D3
0000149E  DFFC 0000008A            542          ADD.L   #138,SP     ;go back to original spot
000014A4  6000 FBCA                543          BRA     SHELL
000014A8                           544  
000014A8                           545  MRD4:
000014A8  5289                     546          ADD.L   #1,A1
000014AA  0C19 0020                547          CMP.B   #$20,(A1)+
000014AE  6600 1204                548          BNE     ERRORSR
000014B2  2449                     549          MOVE.L  A1,A2
000014B4  264A                     550          MOVE.L  A2,A3
000014B6  4EB9 00001768            551          JSR     MRDFINDDATA
000014BC  538B                     552          SUB.L   #1,A3
000014BE  4EB9 00002700            553          JSR     ASCII_ADDRESS   ;convert data to hex
000014C4  2F05                     554          MOVE.L  D5,-(SP)        ;store it temporarily
000014C6  588F                     555          ADD.L   #4,SP       ;dont lose data
000014C8  4CDF 7FFF                556          MOVEM.L (SP)+,D0-D7/A0-A6
000014CC  4CDF 7FFF                557          MOVEM.L (SP)+,D0-D7/A0-A6 ;double restore because of DF hack workaround
000014D0  588F                     558          ADD.L   #4,SP       ;account for USP, it'll fix itself (it shouldn't be used)
000014D2                           559                                  ;EASY68k simulator starts in supervisor mode
000014D2  46DF                     560          MOVE    (SP)+,SR
000014D4  588F                     561          ADD.L   #4,SP       ;skip saved stack
000014D6  9FFC 00000086            562          SUB.L   #134,SP     ;find data again
000014DC  2817                     563          MOVE.L  (SP),D4
000014DE  DFFC 0000008A            564          ADD.L   #138,SP     ;go back to original spot
000014E4  6000 FB8A                565          BRA     SHELL
000014E8                           566  
000014E8                           567  MRD5:
000014E8  5289                     568          ADD.L   #1,A1
000014EA  0C19 0020                569          CMP.B   #$20,(A1)+
000014EE  6600 11C4                570          BNE     ERRORSR
000014F2  2449                     571          MOVE.L  A1,A2
000014F4  264A                     572          MOVE.L  A2,A3
000014F6  4EB9 00001768            573          JSR     MRDFINDDATA
000014FC  538B                     574          SUB.L   #1,A3
000014FE  4EB9 00002700            575          JSR     ASCII_ADDRESS   ;convert data to hex
00001504  2F05                     576          MOVE.L  D5,-(SP)        ;store it temporarily
00001506  588F                     577          ADD.L   #4,SP       ;dont lose data
00001508  4CDF 7FFF                578          MOVEM.L (SP)+,D0-D7/A0-A6
0000150C  4CDF 7FFF                579          MOVEM.L (SP)+,D0-D7/A0-A6 ;double restore because of DF hack workaround
00001510  588F                     580          ADD.L   #4,SP       ;account for USP, it'll fix itself (it shouldn't be used)
00001512                           581                                  ;EASY68k simulator starts in supervisor mode
00001512  46DF                     582          MOVE    (SP)+,SR
00001514  588F                     583          ADD.L   #4,SP       ;skip saved stack
00001516  9FFC 00000086            584          SUB.L   #134,SP     ;find data again
0000151C  2A17                     585          MOVE.L  (SP),D5
0000151E  DFFC 0000008A            586          ADD.L   #138,SP     ;go back to original spot
00001524  6000 FB4A                587          BRA     SHELL
00001528                           588  
00001528                           589  MRD6:
00001528  5289                     590          ADD.L   #1,A1
0000152A  0C19 0020                591          CMP.B   #$20,(A1)+
0000152E  6600 1184                592          BNE     ERRORSR
00001532  2449                     593          MOVE.L  A1,A2
00001534  264A                     594          MOVE.L  A2,A3
00001536  4EB9 00001768            595          JSR     MRDFINDDATA
0000153C  538B                     596          SUB.L   #1,A3
0000153E  4EB9 00002700            597          JSR     ASCII_ADDRESS   ;convert data to hex
00001544  2F05                     598          MOVE.L  D5,-(SP)        ;store it temporarily
00001546  588F                     599          ADD.L   #4,SP       ;dont lose data
00001548  4CDF 7FFF                600          MOVEM.L (SP)+,D0-D7/A0-A6
0000154C  4CDF 7FFF                601          MOVEM.L (SP)+,D0-D7/A0-A6 ;double restore because of DF hack workaround
00001550  588F                     602          ADD.L   #4,SP       ;account for USP, it'll fix itself (it shouldn't be used)
00001552                           603                                  ;EASY68k simulator starts in supervisor mode
00001552  46DF                     604          MOVE    (SP)+,SR
00001554  588F                     605          ADD.L   #4,SP       ;skip saved stack
00001556  9FFC 00000086            606          SUB.L   #134,SP     ;find data again
0000155C  2C17                     607          MOVE.L  (SP),D6
0000155E  DFFC 0000008A            608          ADD.L   #138,SP     ;go back to original spot
00001564  6000 FB0A                609          BRA     SHELL
00001568                           610  
00001568                           611  MRD7:
00001568  5289                     612          ADD.L   #1,A1
0000156A  0C19 0020                613          CMP.B   #$20,(A1)+
0000156E  6600 1144                614          BNE     ERRORSR
00001572  2449                     615          MOVE.L  A1,A2
00001574  264A                     616          MOVE.L  A2,A3
00001576  4EB9 00001768            617          JSR     MRDFINDDATA
0000157C  538B                     618          SUB.L   #1,A3
0000157E  4EB9 00002700            619          JSR     ASCII_ADDRESS   ;convert data to hex
00001584  2F05                     620          MOVE.L  D5,-(SP)        ;store it temporarily
00001586  588F                     621          ADD.L   #4,SP       ;dont lose data
00001588  4CDF 7FFF                622          MOVEM.L (SP)+,D0-D7/A0-A6
0000158C  4CDF 7FFF                623          MOVEM.L (SP)+,D0-D7/A0-A6 ;double restore because of DF hack workaround
00001590  588F                     624          ADD.L   #4,SP       ;account for USP, it'll fix itself (it shouldn't be used)
00001592                           625                                  ;EASY68k simulator starts in supervisor mode
00001592  46DF                     626          MOVE    (SP)+,SR
00001594  588F                     627         ADD.L   #4,SP       ;skip saved stack
00001596  9FFC 00000086            628          SUB.L   #134,SP     ;find data again
0000159C  2E17                     629          MOVE.L  (SP),D7
0000159E  DFFC 0000008A            630          ADD.L   #138,SP     ;go back to original spot
000015A4  6000 FACA                631          BRA     SHELL
000015A8                           632  
000015A8                           633  MRA0:
000015A8  5289                     634          ADD.L   #1,A1
000015AA  0C19 0020                635          CMP.B   #$20,(A1)+
000015AE  6600 1104                636          BNE     ERRORSR
000015B2  2449                     637          MOVE.L  A1,A2
000015B4  264A                     638          MOVE.L  A2,A3
000015B6  4EB9 00001768            639          JSR     MRDFINDDATA
000015BC  538B                     640          SUB.L   #1,A3
000015BE  4EB9 00002700            641          JSR     ASCII_ADDRESS   ;convert data to hex
000015C4  2F05                     642          MOVE.L  D5,-(SP)        ;store it temporarily
000015C6  588F                     643          ADD.L   #4,SP       ;dont lose data
000015C8  4CDF 7FFF                644          MOVEM.L (SP)+,D0-D7/A0-A6
000015CC  4CDF 7FFF                645          MOVEM.L (SP)+,D0-D7/A0-A6 ;double restore because of DF hack workaround
000015D0  588F                     646          ADD.L   #4,SP       ;account for USP, it'll fix itself (it shouldn't be used)
000015D2                           647                                  ;EASY68k simulator starts in supervisor mode
000015D2  46DF                     648          MOVE    (SP)+,SR
000015D4  588F                     649          ADD.L   #4,SP       ;skip saved stack
000015D6  9FFC 00000086            650          SUB.L   #134,SP     ;find data again
000015DC  2057                     651          MOVE.L  (SP),A0
000015DE  DFFC 0000008A            652          ADD.L   #138,SP     ;go back to original spot
000015E4  6000 FA8A                653          BRA     SHELL
000015E8                           654  MRA1:
000015E8  5289                     655          ADD.L   #1,A1
000015EA  0C19 0020                656          CMP.B   #$20,(A1)+
000015EE  6600 10C4                657          BNE     ERRORSR
000015F2  2449                     658          MOVE.L  A1,A2
000015F4  264A                     659          MOVE.L  A2,A3
000015F6  4EB9 00001768            660          JSR     MRDFINDDATA
000015FC  538B                     661          SUB.L   #1,A3
000015FE  4EB9 00002700            662          JSR     ASCII_ADDRESS   ;convert data to hex
00001604  2F05                     663          MOVE.L  D5,-(SP)        ;store it temporarily
00001606  588F                     664          ADD.L   #4,SP       ;dont lose data
00001608  4CDF 7FFF                665          MOVEM.L (SP)+,D0-D7/A0-A6
0000160C  4CDF 7FFF                666          MOVEM.L (SP)+,D0-D7/A0-A6 ;double restore because of DF hack workaround
00001610  588F                     667          ADD.L   #4,SP       ;account for USP, it'll fix itself (it shouldn't be used)
00001612                           668                                  ;EASY68k simulator starts in supervisor mode
00001612  46DF                     669          MOVE    (SP)+,SR
00001614  588F                     670         ADD.L   #4,SP       ;skip saved stack
00001616  9FFC 00000086            671          SUB.L   #134,SP     ;find data again
0000161C  2257                     672          MOVE.L  (SP),A1
0000161E  DFFC 0000008A            673          ADD.L   #138,SP     ;go back to original spot
00001624  6000 FA4A                674          BRA     SHELL
00001628                           675  
00001628                           676  MRA2:
00001628  5289                     677          ADD.L   #1,A1
0000162A  0C19 0020                678          CMP.B   #$20,(A1)+
0000162E  6600 1084                679          BNE     ERRORSR
00001632  2449                     680          MOVE.L  A1,A2
00001634  264A                     681          MOVE.L  A2,A3
00001636  4EB9 00001768            682          JSR     MRDFINDDATA
0000163C  538B                     683          SUB.L   #1,A3
0000163E  4EB9 00002700            684          JSR     ASCII_ADDRESS   ;convert data to hex
00001644  2F05                     685          MOVE.L  D5,-(SP)        ;store it temporarily
00001646  588F                     686          ADD.L   #4,SP       ;dont lose data
00001648  4CDF 7FFF                687          MOVEM.L (SP)+,D0-D7/A0-A6
0000164C  4CDF 7FFF                688          MOVEM.L (SP)+,D0-D7/A0-A6 ;double restore because of DF hack workaround
00001650  588F                     689          ADD.L   #4,SP       ;account for USP, it'll fix itself (it shouldn't be used)
00001652                           690                                  ;EASY68k simulator starts in supervisor mode
00001652  46DF                     691          MOVE    (SP)+,SR
00001654  588F                     692          ADD.L   #4,SP       ;skip saved stack
00001656  9FFC 00000086            693          SUB.L   #134,SP     ;find data again
0000165C  2457                     694          MOVE.L  (SP),A2
0000165E  DFFC 0000008A            695          ADD.L   #138,SP     ;go back to original spot
00001664  6000 FA0A                696          BRA     SHELL
00001668                           697          
00001668                           698  MRA3:
00001668  5289                     699          ADD.L   #1,A1
0000166A  0C19 0020                700          CMP.B   #$20,(A1)+
0000166E  6600 1044                701          BNE     ERRORSR
00001672  2449                     702          MOVE.L  A1,A2
00001674  264A                     703          MOVE.L  A2,A3
00001676  4EB9 00001768            704          JSR     MRDFINDDATA
0000167C  538B                     705          SUB.L   #1,A3
0000167E  4EB9 00002700            706          JSR     ASCII_ADDRESS   ;convert data to hex
00001684  2F05                     707          MOVE.L  D5,-(SP)        ;store it temporarily
00001686  588F                     708          ADD.L   #4,SP       ;dont lose data
00001688  4CDF 7FFF                709          MOVEM.L (SP)+,D0-D7/A0-A6
0000168C  4CDF 7FFF                710          MOVEM.L (SP)+,D0-D7/A0-A6 ;double restore because of DF hack workaround
00001690  588F                     711          ADD.L   #4,SP       ;account for USP, it'll fix itself (it shouldn't be used)
00001692                           712                                  ;EASY68k simulator starts in supervisor mode
00001692  46DF                     713          MOVE    (SP)+,SR
00001694  588F                     714          ADD.L   #4,SP       ;skip saved stack
00001696  9FFC 00000086            715          SUB.L   #134,SP     ;find data again
0000169C  2657                     716          MOVE.L  (SP),A3
0000169E  DFFC 0000008A            717          ADD.L   #138,SP     ;go back to original spot
000016A4  6000 F9CA                718          BRA     SHELL
000016A8                           719  
000016A8                           720  MRA4:
000016A8  5289                     721          ADD.L   #1,A1
000016AA  0C19 0020                722          CMP.B   #$20,(A1)+
000016AE  6600 1004                723          BNE     ERRORSR
000016B2  2449                     724          MOVE.L  A1,A2
000016B4  264A                     725          MOVE.L  A2,A3
000016B6  4EB9 00001768            726          JSR     MRDFINDDATA
000016BC  538B                     727          SUB.L   #1,A3
000016BE  4EB9 00002700            728          JSR     ASCII_ADDRESS   ;convert data to hex
000016C4  2F05                     729          MOVE.L  D5,-(SP)        ;store it temporarily
000016C6  588F                     730          ADD.L   #4,SP       ;dont lose data
000016C8  4CDF 7FFF                731          MOVEM.L (SP)+,D0-D7/A0-A6
000016CC  4CDF 7FFF                732          MOVEM.L (SP)+,D0-D7/A0-A6 ;double restore because of DF hack workaround
000016D0  588F                     733          ADD.L   #4,SP       ;account for USP, it'll fix itself (it shouldn't be used)
000016D2                           734                                  ;EASY68k simulator starts in supervisor mode
000016D2  46DF                     735          MOVE    (SP)+,SR
000016D4  588F                     736          ADD.L   #4,SP       ;skip saved stack
000016D6  9FFC 00000086            737          SUB.L   #134,SP     ;find data again
000016DC  2857                     738          MOVE.L  (SP),A4
000016DE  DFFC 0000008A            739          ADD.L   #138,SP     ;go back to original spot
000016E4  6000 F98A                740          BRA     SHELL
000016E8                           741  
000016E8                           742  MRA5:
000016E8  5289                     743          ADD.L   #1,A1
000016EA  0C19 0020                744          CMP.B   #$20,(A1)+
000016EE  6600 0FC4                745          BNE     ERRORSR
000016F2  2449                     746          MOVE.L  A1,A2
000016F4  264A                     747          MOVE.L  A2,A3
000016F6  4EB9 00001768            748          JSR     MRDFINDDATA
000016FC  538B                     749          SUB.L   #1,A3
000016FE  4EB9 00002700            750          JSR     ASCII_ADDRESS   ;convert data to hex
00001704  2F05                     751          MOVE.L  D5,-(SP)        ;store it temporarily
00001706  588F                     752          ADD.L   #4,SP       ;dont lose data
00001708  4CDF 7FFF                753          MOVEM.L (SP)+,D0-D7/A0-A6
0000170C  4CDF 7FFF                754          MOVEM.L (SP)+,D0-D7/A0-A6 ;double restore because of DF hack workaround
00001710  588F                     755          ADD.L   #4,SP       ;account for USP, it'll fix itself (it shouldn't be used)
00001712                           756                                  ;EASY68k simulator starts in supervisor mode
00001712  46DF                     757          MOVE    (SP)+,SR
00001714  588F                     758         ADD.L   #4,SP       ;skip saved stack
00001716  9FFC 00000086            759          SUB.L   #134,SP     ;find data again
0000171C  2A57                     760          MOVE.L  (SP),A5
0000171E  DFFC 0000008A            761          ADD.L   #138,SP     ;go back to original spot
00001724  6000 F94A                762          BRA     SHELL
00001728                           763  
00001728                           764  MRA6:
00001728  5289                     765          ADD.L   #1,A1
0000172A  0C19 0020                766          CMP.B   #$20,(A1)+
0000172E  6600 0F84                767          BNE     ERRORSR
00001732  2449                     768          MOVE.L  A1,A2
00001734  264A                     769          MOVE.L  A2,A3
00001736  4EB9 00001768            770          JSR     MRDFINDDATA
0000173C  538B                     771          SUB.L   #1,A3
0000173E  4EB9 00002700            772          JSR     ASCII_ADDRESS   ;convert data to hex
00001744  2F05                     773          MOVE.L  D5,-(SP)        ;store it temporarily
00001746  588F                     774          ADD.L   #4,SP       ;dont lose data
00001748  4CDF 7FFF                775          MOVEM.L (SP)+,D0-D7/A0-A6
0000174C  4CDF 7FFF                776          MOVEM.L (SP)+,D0-D7/A0-A6 ;double restore because of DF hack workaround
00001750  588F                     777          ADD.L   #4,SP       ;account for USP, it'll fix itself (it shouldn't be used)
00001752                           778                                  ;EASY68k simulator starts in supervisor mode
00001752  46DF                     779          MOVE    (SP)+,SR
00001754  588F                     780          ADD.L   #4,SP       ;skip saved stack
00001756  9FFC 00000086            781          SUB.L   #134,SP     ;find data again
0000175C  2C57                     782          MOVE.L  (SP),A6
0000175E  DFFC 0000008A            783          ADD.L   #138,SP     ;go back to original spot
00001764  6000 F90A                784          BRA     SHELL
00001768                           785  
00001768                           786  MRDFINDDATA:
00001768  0C1B 0000                787          CMP.B   #$00,(A3)+
0000176C  6700 0004                788          BEQ     GOBACK
00001770  60F6                     789          BRA     MRDFINDDATA
00001772  4E75                     790  GOBACK: RTS
00001774                           791          
00001774                           792  
00001774  6000 F980                793          BRA RESTORE
00001778                           794  *--------------------REQUIRED COMMAND DEFINITION START---------------------------------*
00001778                           795  *--------------------------------------------------------------------------------------*
00001778  43F8 3063                796  HELP:       LEA     HTXT,A1     ;list of commands test
0000177C  323C 0011                797              MOVE.W  #17,D1
00001780  103C 0000                798              MOVE.B  #0,D0
00001784  4E4F                     799              TRAP    #15
00001786  323C 0000                800              MOVE.W  #0,D1       ;newline
0000178A  4E4F                     801              TRAP    #15
0000178C                           802              
0000178C  43F8 3074                803              LEA     HTXT1,A1    ;mem display command
00001790  323C 004B                804              MOVE.W  #75,D1
00001794  103C 0000                805              MOVE.B  #0,D0
00001798  4E4F                     806              TRAP    #15
0000179A  43F8 30BF                807              LEA     HTXT1A,A1   ;mem display
0000179E  323C 003D                808              MOVE.W  #61,D1
000017A2  103C 0000                809              MOVE.B  #0,D0
000017A6  4E4F                     810              TRAP    #15
000017A8  43F8 30FC                811              LEA     HTXT1B,A1   ;mem display
000017AC  323C 0014                812              MOVE.W  #20,D1
000017B0  103C 0000                813              MOVE.B  #0,D0
000017B4  4E4F                     814              TRAP    #15
000017B6  323C 0000                815              MOVE.W  #0,D1       ;newline
000017BA  4E4F                     816              TRAP    #15
000017BC                           817              
000017BC  43F8 3110                818              LEA     HTXT2,A1    ;hxdec command text
000017C0  323C 004B                819              MOVE.W  #75,D1
000017C4  103C 0000                820              MOVE.B  #0,D0
000017C8  4E4F                     821              TRAP    #15
000017CA  123C 0000                822              MOVE.B  #0,D1       ;newline
000017CE  4E4F                     823              TRAP    #15
000017D0                           824              
000017D0  43F8 315B                825              LEA     HTXT3,A1    ;sort command text
000017D4  323C 0045                826              MOVE.W  #69,D1
000017D8  103C 0000                827              MOVE.B  #0,D0
000017DC  4E4F                     828              TRAP    #15
000017DE  43F8 31A0                829              LEA     HTXT3A,A1    ;sort command text continued
000017E2  323C 0039                830              MOVE.W  #57,D1
000017E6  103C 0000                831              MOVE.B  #0,D0
000017EA  4E4F                     832              TRAP    #15
000017EC  43F8 31D9                833              LEA     HTXT3B,A1    ;sort command text continued
000017F0  323C 0014                834              MOVE.W  #20,D1
000017F4  103C 0000                835              MOVE.B  #0,D0
000017F8  4E4F                     836              TRAP    #15
000017FA  43F8 31ED                837              LEA     HTXT3C,A1    ;sort command text continued
000017FE  323C 0015                838              MOVE.W  #21,D1
00001802  103C 0000                839              MOVE.B  #0,D0
00001806  4E4F                     840              TRAP    #15
00001808  43F8 3202                841              LEA     HTXT3D,A1    ;sort command text continued
0000180C  323C 001D                842              MOVE.W  #29,D1
00001810  103C 0000                843              MOVE.B  #0,D0
00001814  4E4F                     844              TRAP    #15
00001816  43F8 321F                845              LEA     HTXT3E,A1    ;sort command text continued
0000181A  323C 0033                846              MOVE.W  #51,D1
0000181E  103C 0000                847              MOVE.B  #0,D0
00001822  4E4F                     848              TRAP    #15
00001824  123C 0000                849              MOVE.B  #0,D1       ;newline
00001828  4E4F                     850              TRAP    #15
0000182A                           851              
0000182A  43F8 3252                852              LEA     HTXT4,A1    ;memory modify command text 
0000182E  323C 0047                853              MOVE.W  #71,D1
00001832  103C 0000                854              MOVE.B  #0,D0
00001836  4E4F                     855              TRAP    #15
00001838  43F8 3299                856              LEA     HTXT4A,A1    ;mem modify command text continued
0000183C  323C 0045                857              MOVE.W  #69,D1
00001840  103C 0000                858              MOVE.B  #0,D0
00001844  4E4F                     859              TRAP    #15
00001846  43F8 32DE                860              LEA     HTXT4B,A1    ;mem modify command text continued
0000184A  323C 001B                861              MOVE.W  #27,D1
0000184E  103C 0000                862              MOVE.B  #0,D0
00001852  4E4F                     863              TRAP    #15
00001854  43F8 32F9                864              LEA     HTXT4C,A1    ;mem modify command text continued
00001858  323C 001E                865              MOVE.W  #30,D1
0000185C  103C 0000                866              MOVE.B  #0,D0
00001860  4E4F                     867              TRAP    #15
00001862  43F8 3317                868              LEA     HTXT4D,A1    ;mem modify command text continued
00001866  323C 001F                869              MOVE.W  #31,D1
0000186A  103C 0000                870              MOVE.B  #0,D0
0000186E  4E4F                     871              TRAP    #15
00001870  43F8 3336                872              LEA     HTXT4E,A1    ;mem modify command text continued
00001874  323C 0024                873              MOVE.W  #36,D1
00001878  103C 0000                874              MOVE.B  #0,D0
0000187C  4E4F                     875              TRAP    #15
0000187E  123C 0000                876              MOVE.B  #0,D1
00001882  4E4F                     877              TRAP    #15         ;newline
00001884                           878              
00001884  43F8 335A                879              LEA     HTXT5,A1    ;memory set command text 
00001888  323C 0046                880              MOVE.W  #70,D1
0000188C  103C 0000                881              MOVE.B  #0,D0
00001890  4E4F                     882              TRAP    #15
00001892  43F8 33A0                883              LEA     HTXT5A,A1    ;memory set command text continued
00001896  323C 0009                884              MOVE.W  #9,D1
0000189A  103C 0000                885              MOVE.B  #0,D0
0000189E  4E4F                     886              TRAP    #15
000018A0  123C 0000                887              MOVE.B  #0,D1       ;newline
000018A4  4E4F                     888              TRAP    #15
000018A6                           889              
000018A6  43F8 33A9                890              LEA     HTXT6,A1    ;block fill command text
000018AA  323C 0045                891              MOVE.W  #69,D1
000018AE  103C 0000                892              MOVE.B  #0,D0
000018B2  4E4F                     893              TRAP    #15
000018B4  43F8 33EF                894              LEA     HTXT6A,A1    ;block fill command text
000018B8  323C 0048                895              MOVE.W  #72,D1
000018BC  103C 0000                896              MOVE.B  #0,D0
000018C0  4E4F                     897              TRAP    #15
000018C2  43F8 3437                898              LEA     HTXT6B,A1    ;block fill command text
000018C6  323C 0026                899              MOVE.W  #38,D1
000018CA  103C 0000                900              MOVE.B  #0,D0
000018CE  4E4F                     901              TRAP    #15
000018D0  123C 0000                902              MOVE.B  #0,D1
000018D4  4E4F                     903              TRAP    #15         ;newline
000018D6                           904              
000018D6                           905              
000018D6  43F8 345D                906              LEA     HTXT7,A1    ;block move command text
000018DA  323C 0044                907              MOVE.W  #68,D1
000018DE  103C 0000                908              MOVE.B  #0,D0
000018E2  4E4F                     909              TRAP    #15
000018E4  43F8 34A1                910              LEA     HTXT7A,A1    ;block move command text
000018E8  323C 0048                911              MOVE.W  #72,D1
000018EC  103C 0000                912              MOVE.B  #0,D0
000018F0  4E4F                     913              TRAP    #15
000018F2  43F8 34E9                914              LEA     HTXT7B,A1    ;block move command text
000018F6  323C 0018                915              MOVE.W  #24,D1
000018FA  103C 0000                916              MOVE.B  #0,D0
000018FE  4E4F                     917              TRAP    #15
00001900  123C 0000                918              MOVE.B  #0,D1       ;newline
00001904  4E4F                     919              TRAP    #15
00001906                           920              
00001906  43F8 3501                921              LEA     HTXT8,A1    ;block test command text
0000190A  323C 0047                922              MOVE.W  #71,D1
0000190E  103C 0000                923              MOVE.B  #0,D0
00001912  4E4F                     924              TRAP    #15
00001914  43F8 3548                925              LEA     HTXT8A,A1    ;block test command text
00001918  323C 0028                926              MOVE.W  #40,D1
0000191C  103C 0000                927              MOVE.B  #0,D0
00001920  4E4F                     928              TRAP    #15
00001922  123C 0000                929              MOVE.B  #0,D1       ;newline
00001926  4E4F                     930              TRAP    #15
00001928                           931              
00001928  43F8 3570                932              LEA     HTXT9,A1    ;block search command text
0000192C  323C 0046                933              MOVE.W  #70,D1
00001930  103C 0000                934              MOVE.B  #0,D0
00001934  4E4F                     935              TRAP    #15
00001936  43F8 35B8                936              LEA     HTXT9A,A1    ;block search command text
0000193A  323C 002D                937              MOVE.W  #45,D1
0000193E  103C 0000                938              MOVE.B  #0,D0
00001942  4E4F                     939              TRAP    #15
00001944  123C 0000                940              MOVE.B  #0,D1       ;newline
00001948  4E4F                     941              TRAP    #15
0000194A                           942              
0000194A  43F8 35E5                943              LEA     HTXT10,A1    ;go command text
0000194E  323C 003D                944              MOVE.W  #61,D1
00001952  103C 0000                945              MOVE.B  #0,D0
00001956  4E4F                     946              TRAP    #15
00001958  123C 0000                947              MOVE.B  #0,D1      ;newline
0000195C  4E4F                     948              TRAP    #15
0000195E                           949  
0000195E  43F8 3622                950              LEA     HTXT11,A1   ;df command text   
00001962  323C 0038                951              MOVE.W  #56,D1
00001966  103C 0000                952              MOVE.B  #0,D0
0000196A  4E4F                     953              TRAP    #15
0000196C  123C 0000                954              MOVE.B  #0,D1
00001970  4E4F                     955              TRAP    #15
00001972                           956              
00001972  43F8 365A                957              LEA     HTXT12,A1   ;help command text
00001976  323C 0042                958              MOVE.W  #66,D1
0000197A  103C 0000                959              MOVE.B  #0,D0
0000197E  4E4F                     960              TRAP    #15
00001980  123C 0000                961              MOVE.B  #0,D1       ;newline
00001984  4E4F                     962              TRAP    #15   
00001986                           963              
00001986  43F8 369C                964              LEA     HTXT13,A1   ;echo command text   
0000198A  323C 0034                965              MOVE.W  #52,D1
0000198E  103C 0000                966              MOVE.B  #0,D0
00001992  4E4F                     967              TRAP    #15
00001994  123C 0000                968              MOVE.B  #0,D1       ;newline
00001998  4E4F                     969              TRAP    #15
0000199A                           970              
0000199A  43F8 36CF                971              LEA     HTXT14,A1   ;modify register command text   
0000199E  323C 0047                972              MOVE.W  #71,D1
000019A2  103C 0000                973              MOVE.B  #0,D0
000019A6  4E4F                     974              TRAP    #15
000019A8  43F8 3716                975              LEA     HTXT15,A1   ;modify register command text   
000019AC  323C 003F                976              MOVE.W  #63,D1
000019B0  103C 0000                977              MOVE.B  #0,D0
000019B4  4E4F                     978              TRAP    #15
000019B6  123C 0000                979              MOVE.B  #0,D1       ;newline
000019BA  4E4F                     980              TRAP    #15
000019BC                           981   
000019BC  6000 F738                982              BRA     RESTORE  
000019C0                           983  *--------------------------------------------------------------------------------------*
000019C0                           984  *Fix ASCII String input? ask in lab*
000019C0  45F8 3000                985  MEMSET:     LEA     BUFFER,A2
000019C4  568A                     986              ADD.L   #3,A2
000019C6  264A                     987              MOVE.L  A2,A3   ;set up to find end
000019C8  0C1B 0000                988  FINDEND:    CMP.B   #$00,(A3)+
000019CC  6700 0004                989              BEQ     MEMCONT
000019D0  60F6                     990              BRA     FINDEND
000019D2  538B                     991  MEMCONT:    SUB.L  #1,A3   ;get rid of off by one erro
000019D4  121A                     992              MOVE.B  (A2)+,D1
000019D6  1412                     993              MOVE.B  (A2),D2
000019D8  1601                     994              MOVE.B  D1,D3       ;pass value to subroutine
000019DA  4EB9 000026C4            995              JSR     ASCII_TO_BCD           
000019E0  1203                     996              MOVE.B  D3,D1       ;get converted value
000019E2  1602                     997              MOVE.B  D2,D3       ;pass value
000019E4  4EB9 000026C4            998              JSR     ASCII_TO_BCD
000019EA  1403                     999              MOVE.B  D3,D2       ;get returned value
000019EC  1601                    1000              MOVE.B  D1,D3
000019EE  4EB9 000026E2           1001              JSR     BCD_TO_HEX
000019F4  1203                    1002              MOVE.B  D3,D1
000019F6  1602                    1003              MOVE.B  D2,D3
000019F8  4EB9 000026E2           1004              JSR     BCD_TO_HEX
000019FE  1403                    1005              MOVE.B  D3,D2
00001A00  E999                    1006              ROL.L   #4,D1       ;put data in correct place
00001A02  D441                    1007              ADD     D1,D2       ;get combined data input
00001A04  548A                    1008              ADD.L   #2,A2       ;go to start of address
00001A06  4EB9 00002700           1009              JSR     ASCII_ADDRESS  ;get address in workable form
00001A0C  2845                    1010              MOVE.L  D5,A4       ;load target address
00001A0E  1882                    1011              MOVE.B  D2,(A4)       ;put data in target address
00001A10  6000 F6E4               1012              BRA     RESTORE                 ;return to shell
00001A14                          1013  *--------------------------------------------------------------------------------------*
00001A14  45F8 3000               1014  MEMDISP:    LEA     BUFFER,A2
00001A18  7C01                    1015              MOVE.L  #1,D6       ;counter for how many times to loop
00001A1A  5A8A                    1016              ADD.L   #5,A2       ;get first address
00001A1C  264A                    1017              MOVE.L  A2,A3       
00001A1E  0C1B 0020               1018  FINDEND1:   CMP.B   #$20,(A3)+
00001A22  6700 0004               1019              BEQ     FINDNEXT
00001A26  60F6                    1020              BRA     FINDEND1  
00001A28  284B                    1021  FINDNEXT:   MOVE.L  A3,A4
00001A2A  2A4B                    1022              MOVE.L  A3,A5
00001A2C  538B                    1023              SUB.L   #1,A3   ;get rid of off by one error
00001A2E  0C1D 0000               1024  FINDEND2:   CMP.B   #$00,(A5)+
00001A32  6700 0004               1025              BEQ     MEMNEXT
00001A36  60F6                    1026              BRA     FINDEND2
00001A38  538D                    1027  MEMNEXT:    SUB.L   #1,A5   ;off by one error
00001A3A  4EB9 00002700           1028              JSR     ASCII_ADDRESS
00001A40  2C45                    1029              MOVE.L  D5,A6   ;put 1st address in A6
00001A42  244C                    1030              MOVE.L  A4,A2
00001A44  264D                    1031              MOVE.L  A5,A3
00001A46  4EB9 00002700           1032              JSR ASCII_ADDRESS
00001A4C  2A45                    1033              MOVE.L  D5,A5   ;second address in A5
00001A4E  204E                    1034              MOVE.L  A6,A0   ;for second run through
00001A50  224D                    1035              MOVE.L  A5,A1   ;see above comment
00001A52  D3FC 00000010           1036              ADD.L   #16,A1 ;16 byte offset
00001A58  48E7 0040               1037              MOVEM.L A1,-(SP)
00001A5C  BBCE                    1038  DISPLOOP:   CMP.L   A6,A5
00001A5E  6D00 0034               1039              BLT     SECONDLOOP
00001A62  260E                    1040              MOVE.L  A6,D3
00001A64  4EB9 00002740           1041              JSR     HEXTOASCII
00001A6A  97CA                    1042              SUB.L   A2,A3
00001A6C  220B                    1043              MOVE.L  A3,D1   ;number of ascii values to display
00001A6E  224A                    1044              MOVE.L  A2,A1
00001A70  7001                    1045              MOVE.L  #1,D0
00001A72  4E4F                    1046              TRAP    #15
00001A74  43F8 3796               1047              LEA     SPACE,A1
00001A78  7201                    1048              MOVE.L #1,D1
00001A7A  4E4F                    1049              TRAP    #15
00001A7C  4283                    1050              CLR.L   D3
00001A7E  1616                    1051              MOVE.B  (A6),D3
00001A80  4EB9 00002740           1052              JSR     HEXTOASCII
00001A86  97CA                    1053              SUB.L   A2,A3
00001A88  220B                    1054              MOVE.L  A3,D1
00001A8A  224A                    1055              MOVE.L  A2,A1
00001A8C  7000                    1056              MOVE.L  #0,D0
00001A8E  4E4F                    1057              TRAP    #15
00001A90  528E                    1058              ADD.L   #1,A6
00001A92  60C8                    1059              BRA     DISPLOOP
00001A94                          1060              
00001A94                          1061  SECONDLOOP: 
00001A94  103C 0000               1062              MOVE.B  #0,D0
00001A98  123C 0000               1063              MOVE.B  #0,D1
00001A9C  4E4F                    1064              TRAP    #15
00001A9E  4CDF 0200               1065              MOVEM.L (SP)+,A1
00001AA2  2C48                    1066              MOVE.L  A0,A6   ;reinit
00001AA4  2A49                    1067              MOVE.L  A1,A5
00001AA6  5386                    1068              SUBI.L  #1,D6
00001AA8  BCBC 00000000           1069              CMP.L   #$0,D6
00001AAE  67AC                    1070              BEQ     DISPLOOP
00001AB0  598F                    1071              SUB.L   #4,SP   ;off by long error on stack
00001AB2  6000 F642               1072              BRA     RESTORE
00001AB6                          1073              
00001AB6                          1074  *--------------------------------------------------------------------------------------*
00001AB6                          1075  
00001AB6  45F8 3000               1076  HXDC:   LEA BUFFER,A2   ;load buffer
00001ABA  5C8A                    1077          ADD.L   #6,A2   ; start of number
00001ABC  264A                    1078          MOVE.L  A2,A3   ;set up end pointer
00001ABE  7201                    1079          MOVE.L  #1,D1   ;set up 16's place
00001AC0  4282                    1080          CLR.L   D2      ;clear total
00001AC2  4283                    1081          CLR.L   D3      ;temp holder for number
00001AC4  4286                    1082          CLR.L   D6      ;Final Value in BCD
00001AC6  283C 00002710           1083          MOVE.L  #10000,D4    ;maximum 10's place of converted number
00001ACC  7A10                    1084          MOVE.L  #16,D5      ;Max number of rotates needed
00001ACE  4BF8 3A00               1085          LEA $3A00,A5
00001AD2  49F8 3A00               1086          LEA $3A00,A4   ;set up start pointer
00001AD6                          1087  FINDLASTNUM:    
00001AD6  0C1B 0000               1088          CMP.B #$00,(A3)+
00001ADA  6700 0004               1089          BEQ     CONVERTMINUS1
00001ADE  60F6                    1090          BRA     FINDLASTNUM
00001AE0                          1091  CONVERTMINUS1:   
00001AE0  538B                    1092               SUB.L   #1,A3 ; cure off by 1 error
00001AE2                          1093  CONVERT:
00001AE2  538B                    1094              SUB.L   #1,A3
00001AE4  B4CB                    1095              CMP   A3,A2
00001AE6  6E00 0028               1096              BGT   ENDCONVERT
00001AEA  0C13 0040               1097              CMP.B   #$40,(A3)
00001AEE  6E00 000A               1098              BGT     HIGHHEX
00001AF2  0413 0030               1099              SUBI.B  #$30,(A3)   ;get hex value
00001AF6  6000 0006               1100              BRA     COMPUTATION
00001AFA  0413 0037               1101  HIGHHEX:     SUBI.B  #$37,(A3)  ;get hex value
00001AFE                          1102  COMPUTATION:
00001AFE  1613                    1103              MOVE.B  (A3),D3 
00001B00  C6C1                    1104              MULU    D1,D3   ;get 16's place
00001B02                          1105             ; DIVU    #16,D3  ;get rid of off by 1 exponent error
00001B02  C2FC 0010               1106              MULU    #16,D1  ;inc 16's place counter
00001B06  1883                    1107              MOVE.B  D3,(A4)
00001B08  538C                    1108              SUB.L   #1,A4
00001B0A  D483                    1109              ADD.L   D3,D2   ;store it in total for debugging 
00001B0C  4283                    1110              CLR.L   D3      ;get rid of any numbers in there   
00001B0E  60D2                    1111              BRA     CONVERT     
00001B10                          1112  ENDCONVERT:                  ;must convert back to ascii for display
00001B10  4283                    1113              CLR.L   D3      ;Cleared for workability
00001B12  84C4                    1114              DIVU    D4,D2   ;get 10's place digit
00001B14  3602                    1115              MOVE.W  D2,D3   ;extract 10's place digit to D3
00001B16  EBBB                    1116              ROL.L   D5,D3   ;put it in its place
00001B18  4242                    1117              CLR.W   D2      ;get rid of whole number
00001B1A  4842                    1118              SWAP    D2      ;keep remainder
00001B1C  5985                    1119              SUBI.L  #4,D5   ;dec rotate counter
00001B1E  DC83                    1120              ADD.L   D3,D6   ;put it into it's place
00001B20  88FC 000A               1121              DIVU    #10,D4  ;go down a 10's place
00001B24  B87C 0000               1122              CMP.W   #0,D4   ;are we done
00001B28  6700 0004               1123              BEQ     OUTPUTNUM
00001B2C  60E2                    1124              BRA     ENDCONVERT
00001B2E                          1125              
00001B2E                          1126  OUTPUTNUM:
00001B2E  2606                    1127             MOVE.L   D6,D3   ;put into register for conversion to ASCII
00001B30  4EB9 00002740           1128             JSR      HEXTOASCII
00001B36  224A                    1129             MOVEA.L  A2,A1   ;get start of number
00001B38  96CA                    1130             SUBA     A2,A3   ;get how many bytes to output
00001B3A  220B                    1131             MOVE.L   A3,D1   ;for Trap call
00001B3C  7000                    1132             MOVE.L   #0,D0   
00001B3E  4E4F                    1133             TRAP     #15
00001B40                          1134             
00001B40  6000 F5B4               1135             BRA RESTORE
00001B44                          1136  
00001B44                          1137  *--------------------------------------------------------------------------------------*
00001B44                          1138  
00001B44  5289                    1139  SORTW:  ADD.L   #1,A1       ;increment to check for semicolon/dash
00001B46  0C11 002D               1140          CMP.B   #$2D,(A1)   ;check for default
00001B4A  6700 007C               1141          BEQ     DESCEND
00001B4E  0C19 003B               1142          CMP.B   #$3B,(A1)+
00001B52  6600 0B60               1143          BNE     ERRORSR
00001B56  0C11 0041               1144          CMP.B   #$41,(A1)   ;is it ascending?
00001B5A  6700 000E               1145          BEQ     ASCEND
00001B5E  0C11 0044               1146          CMP.B   #$44,(A1)   ;or descending?
00001B62  6600 0B50               1147          BNE     ERRORSR
00001B66  6000 0060               1148          BRA     DESCEND
00001B6A                          1149          
00001B6A                          1150  ASCEND:
00001B6A  5289                    1151         ADD.L    #1,A1   ;inc
00001B6C  0C11 0020               1152         CMP.B    #$20,(A1)   ;check space
00001B70  6600 0B42               1153         BNE      ERRORSR
00001B74  5289                    1154         ADD.L    #1,A1   ;start of 1st address
00001B76  2449                    1155         MOVE.L   A1,A2
00001B78  264A                    1156         MOVE.L   A2,A3
00001B7A                          1157  AGETFIRSTADDRESS:
00001B7A  0C13 0000               1158         CMP.B    #$00,(A3)
00001B7E  6700 0B34               1159         BEQ      ERRORSR     ;incorrect syntax
00001B82  0C1B 0020               1160         CMP.B    #$20,(A3)+  ;trying to find the end
00001B86  6700 0004               1161         BEQ      AFADDCONV
00001B8A  60EE                    1162         BRA      AGETFIRSTADDRESS
00001B8C                          1163  AFADDCONV:
00001B8C  538B                    1164         SUB.L    #1,A3   ;off by one error
00001B8E  4EB9 00002700           1165         JSR ASCII_ADDRESS    ;D5 now has that address 
00001B94  2845                    1166         MOVE.L D5,A4
00001B96  528B                    1167         ADD.L    #1,A3   ;start of second address
00001B98  244B                    1168         MOVE.L   A3,A2   ;setup for second address
00001B9A                          1169  AGETSECADDRESS:
00001B9A  0C1B 0000               1170         CMP.B    #$00,(A3)+  ;trying to find the end
00001B9E  6700 0004               1171         BEQ      ASADDCONV
00001BA2  60F6                    1172         BRA      AGETSECADDRESS
00001BA4                          1173  ASADDCONV:
00001BA4  538B                    1174          SUB.L   #1,A3   ;off by one
00001BA6  4EB9 00002700           1175          JSR     ASCII_ADDRESS
00001BAC  2A45                    1176          MOVE.L  D5,A5
00001BAE  2C4C                    1177          MOVEA.L  A4,A6  ;CLR A6
00001BB0                          1178          
00001BB0  284E                    1179  ARESETLOOP: MOVE.L  A6,A4    ;reset to top of loop
00001BB2  B94C                    1180  ACMP:       CMP.W   (A4)+,(A4)+  ;check adjacent mem
00001BB4  630A                    1181              BLS.S   ASWAP    
00001BB6  558C                    1182              SUBQ.L  #2,A4
00001BB8  BBCC                    1183              CMP.L   A4,A5   ;done?
00001BBA  66F6                    1184              BNE     ACMP     ;nope
00001BBC  6000 0068               1185              BRA     DONEASCEND  ;yep
00001BC0  2024                    1186  ASWAP:       MOVE.L  -(A4),D0    ;start bubbling 
00001BC2  4840                    1187              SWAP.W  D0
00001BC4  2880                    1188              MOVE.L  D0,(A4)
00001BC6  60E8                    1189              BRA     ARESETLOOP
00001BC8                          1190  
00001BC8                          1191  
00001BC8                          1192  DESCEND:
00001BC8  5289                    1193         ADD.L    #1,A1   ;inc
00001BCA  0C11 0020               1194         CMP.B    #$20,(A1)   ;check space
00001BCE  6600 0AE4               1195         BNE      ERRORSR
00001BD2  5289                    1196         ADD.L    #1,A1   ;start of 1st address
00001BD4  2449                    1197         MOVE.L   A1,A2
00001BD6  264A                    1198         MOVE.L   A2,A3
00001BD8                          1199  DGETFIRSTADDRESS:
00001BD8  0C13 0000               1200         CMP.B    #$00,(A3)
00001BDC  6700 0AD6               1201         BEQ      ERRORSR     ;incorrect syntax
00001BE0  0C1B 0020               1202         CMP.B    #$20,(A3)+  ;trying to find the end
00001BE4  6700 0004               1203         BEQ      DFADDCONV
00001BE8  60EE                    1204         BRA      DGETFIRSTADDRESS
00001BEA                          1205  DFADDCONV:
00001BEA  538B                    1206         SUB.L    #1,A3   ;off by one error
00001BEC  4EB9 00002700           1207         JSR ASCII_ADDRESS    ;D5 now has that address 
00001BF2  2845                    1208         MOVE.L D5,A4
00001BF4  528B                    1209         ADD.L    #1,A3   ;start of second address
00001BF6  244B                    1210         MOVE.L   A3,A2   ;setup for second address
00001BF8                          1211  DGETSECADDRESS:
00001BF8  0C1B 0000               1212         CMP.B    #$00,(A3)+  ;trying to find the end
00001BFC  6700 0004               1213         BEQ      DSADDCONV
00001C00  60F6                    1214         BRA      DGETSECADDRESS
00001C02                          1215  DSADDCONV:
00001C02  538B                    1216          SUB.L   #1,A3   ;off by one
00001C04  4EB9 00002700           1217          JSR     ASCII_ADDRESS
00001C0A  2A45                    1218          MOVE.L  D5,A5
00001C0C  2C4C                    1219          MOVEA.L  A4,A6  ;CLR A6
00001C0E                          1220          
00001C0E  284E                    1221  DRESETLOOP: MOVE.L  A6,A4    ;reset to top of loop
00001C10  B94C                    1222  DCMP:       CMP.W   (A4)+,(A4)+  ;check adjacent mem
00001C12  620A                    1223              BHI.S   DSWAP    
00001C14  558C                    1224              SUBQ.L  #2,A4
00001C16  BBCC                    1225              CMP.L   A4,A5   ;done?
00001C18  66F6                    1226              BNE     DCMP     ;nope
00001C1A  6000 000A               1227              BRA     DONEDESCEND  ;yep
00001C1E  2024                    1228  DSWAP:       MOVE.L  -(A4),D0    ;start bubbling 
00001C20  4840                    1229              SWAP.W  D0
00001C22  2880                    1230              MOVE.L  D0,(A4)
00001C24  60E8                    1231              BRA     DRESETLOOP
00001C26                          1232  x
00001C26                          1233  DONEASCEND:
00001C26                          1234  DONEDESCEND:
00001C26  6000 F4CE               1235              BRA RESTORE
00001C2A                          1236  
00001C2A                          1237  *--------------------------------------------------------------------------------------*
00001C2A                          1238  
00001C2A  4282                    1239  MM:    CLR.L    D2      ;used for storing values
00001C2C  4286                    1240         CLR.L    D6      
00001C2E                          1241  SIZECHECK:  
00001C2E  2649                    1242          MOVE.L  A1,A3   ;set up to find end ptr
00001C30                          1243  ENDPTRMM:
00001C30  0C1B 0000               1244          CMP.B   #$00,(A3)+
00001C34  66FA                    1245          BNE     ENDPTRMM
00001C36  538B                    1246          SUB.L   #1,A3   ;off by one error
00001C38  5289                    1247          ADD.L   #1,A1   ;inc pointer to start of specifier
00001C3A  0C11 002D               1248          CMP.B   #$2D,(A1)   ;check for default
00001C3E  6700 0020               1249          BEQ     DEFAULT        
00001C42  0C11 003B               1250          CMP.B   #$3B,(A1)
00001C46  6600 0A6C               1251          BNE     ERRORSR
00001C4A  5289                    1252          ADD.L   #1,A1   ;find out which size
00001C4C  0C11 0057               1253          CMP.B   #$57,(A1) ; word
00001C50  6700 00B4               1254          BEQ     WORD
00001C54  0C11 004C               1255          CMP.B   #$4C,(A1)   ;long
00001C58  6700 0186               1256          BEQ     LONG
00001C5C  6000 0A56               1257          BRA     ERRORSR
00001C60                          1258  
00001C60                          1259  ***************************************************
00001C60                          1260  
00001C60                          1261  DEFAULT:
00001C60                          1262          
00001C60  5489                    1263          ADD.L   #2,A1       ;set up for subroutine
00001C62  3449                    1264          MOVE    A1,A2       ;set up for subroutine
00001C64  48E7 4270               1265          MOVEM.L D1/D6/A1-A3,-(SP)
00001C68  4EB9 00002700           1266          JSR     ASCII_ADDRESS
00001C6E  4CDF 0E42               1267          MOVEM.L (SP)+,D1/D6/A1-A3
00001C72  2845                    1268          MOVE.L  D5,A4       ;set up address to modify
00001C74                          1269         
00001C74                          1270  MODIFYLOOP:
00001C74                          1271          *-------Display Memory First-----*
00001C74  260C                    1272          MOVE.L  A4,D3       ;set up for subroutine
00001C76  4EB9 00002740           1273          JSR     HEXTOASCII  ;convert new address to ascii for output
00001C7C  96CA                    1274          SUBA    A2,A3       ;get num of bytes to produce
00001C7E  7001                    1275          MOVE.L  #1,D0
00001C80  220B                    1276          MOVE.L  A3,D1
00001C82  224A                    1277          MOVE.L  A2,A1
00001C84  4E4F                    1278          TRAP    #15
00001C86                          1279          
00001C86                          1280          *add colon to denote containing data*
00001C86  12BC 003A               1281          MOVE.B  #$3A,(A1)
00001C8A  7201                    1282          MOVE.L  #1,D1   ;display only the colon
00001C8C  7001                    1283          MOVE.L  #1,D0
00001C8E  4E4F                    1284          TRAP    #15
00001C90                          1285          
00001C90  1614                    1286          MOVE.B  (A4),D3
00001C92  4EB9 00002740           1287          JSR     HEXTOASCII
00001C98  7202                    1288          MOVE.L  #2,D1
00001C9A  97CA                    1289          SUB.L   A2,A3
00001C9C  B6FC 0002               1290          CMP     #2,A3
00001CA0  6700 0004               1291          BEQ     FORMATGOOD
00001CA4  538A                    1292          SUB.L   #1,A2
00001CA6                          1293  FORMATGOOD:
00001CA6  224A                    1294          MOVE.L  A2,A1
00001CA8  103C 0001               1295          MOVE.B  #1,D0
00001CAC  4E4F                    1296          TRAP    #15
00001CAE                          1297          
00001CAE  12BC 0020               1298          MOVE.B  #$20,(A1)
00001CB2  7201                    1299          MOVE.L  #1,D1   ;space between held data and input
00001CB4  7001                    1300          MOVE.L  #1,D0
00001CB6  4E4F                    1301          TRAP    #15
00001CB8                          1302  
00001CB8                          1303          
00001CB8                          1304          *-----Enter Input-------*
00001CB8  4283                    1305          CLR.L   D3
00001CBA  7C04                    1306          MOVE.L  #4,D6
00001CBC  43F8 3000               1307          LEA     BUFFER,A1   ;set up storage for command
00001CC0  103C 0002               1308          MOVE.B  #2,D0       ;load input trap call
00001CC4  4E4F                    1309          TRAP    #15
00001CC6  0C11 002E               1310          CMP.B   #$2E,(A1)
00001CCA  6700 022A               1311          BEQ     ENDLP
00001CCE  0C11 0000               1312          CMP.B   #$00,(A1)
00001CD2  6700 002C               1313          BEQ     ENTER
00001CD6                          1314          
00001CD6                          1315  PARSELOOP:
00001CD6  0C11 0000               1316          CMP.B   #$00,(A1)
00001CDA  6700 0022               1317          BEQ     ENDPARSE        
00001CDE  0C11 0040               1318          CMP.B   #$40,(A1)
00001CE2  6E00 000A               1319          BGT     HIGHHEXMM
00001CE6  0411 0030               1320          SUBI.B  #$30,(A1)   ;get hex value
00001CEA  6000 0006               1321          BRA     NEXTMMSTEP
00001CEE  0411 0037               1322  HIGHHEXMM: SUBI.B  #$37,(A1)  ;get hex value
00001CF2                          1323  NEXTMMSTEP:
00001CF2  1411                    1324          MOVE.B  (A1),D2
00001CF4  EDBA                    1325          ROL.L   D6,D2
00001CF6  5986                    1326          SUBI.L  #4,D6
00001CF8  5289                    1327          ADD.L   #1,A1
00001CFA  D602                    1328          ADD.B   D2,D3   ;total byte stored in D3
00001CFC  60D8                    1329          BRA     PARSELOOP
00001CFE                          1330  ENDPARSE:
00001CFE  1883                    1331          MOVE.B  D3,(A4)   ;commit memory change 
00001D00  528C                    1332  ENTER:  ADD.L   #1,A4   ;increment address
00001D02  6000 FF70               1333          BRA     MODIFYLOOP
00001D06                          1334          
00001D06                          1335  ***************************************************
00001D06                          1336  
00001D06                          1337  WORD:
00001D06                          1338              
00001D06  5489                    1339          ADD.L   #2,A1       ;set up for subroutine
00001D08  3449                    1340          MOVE    A1,A2       ;set up for subroutine
00001D0A  48E7 4270               1341          MOVEM.L D1/D6/A1-A3,-(SP)
00001D0E  4EB9 00002700           1342          JSR     ASCII_ADDRESS
00001D14  4CDF 0E42               1343          MOVEM.L (SP)+,D1/D6/A1-A3
00001D18  2845                    1344          MOVE.L  D5,A4       ;set up address to modify
00001D1A                          1345         
00001D1A                          1346  MODIFYLOOPW:
00001D1A                          1347          *-------Display Memory First-----*
00001D1A  200C                    1348          MOVE.L  A4,D0
00001D1C  80FC 0002               1349          DIVU    #2,D0
00001D20  4840                    1350          SWAP    D0      ;check if it's an odd address
00001D22  B07C 0000               1351          CMP.W   #$00,D0
00001D26  6600 098C               1352          BNE     ERRORSR
00001D2A  260C                    1353          MOVE.L  A4,D3       ;set up for subroutine
00001D2C  2A4C                    1354          MOVE.L  A4,A5       ;next byte of memory may not be needed
00001D2E  528D                    1355          ADD.L   #1,A5
00001D30  4EB9 00002740           1356          JSR     HEXTOASCII  ;convert new address to ascii for output
00001D36  96CA                    1357          SUBA    A2,A3       ;get num of bytes to produce
00001D38  7001                    1358          MOVE.L  #1,D0
00001D3A  220B                    1359          MOVE.L  A3,D1
00001D3C  224A                    1360          MOVE.L  A2,A1
00001D3E  4E4F                    1361          TRAP    #15
00001D40                          1362          
00001D40                          1363          *add colon to denote containing data*
00001D40  12BC 003A               1364          MOVE.B  #$3A,(A1)
00001D44  7201                    1365          MOVE.L  #1,D1   ;display only the colon
00001D46  7001                    1366          MOVE.L  #1,D0
00001D48  4E4F                    1367          TRAP    #15
00001D4A                          1368          
00001D4A  1614                    1369          MOVE.B  (A4),D3
00001D4C  4EB9 00002740           1370          JSR     HEXTOASCII
00001D52  7202                    1371          MOVE.L  #2,D1
00001D54  97CA                    1372          SUB.L   A2,A3
00001D56  B6FC 0002               1373          CMP     #2,A3
00001D5A  6700 0004               1374          BEQ     FORMATGOOD1
00001D5E  538A                    1375          SUB.L   #1,A2     
00001D60                          1376  FORMATGOOD1:
00001D60                          1377  
00001D60  224A                    1378          MOVE.L  A2,A1
00001D62  103C 0001               1379          MOVE.B  #1,D0
00001D66  4E4F                    1380          TRAP    #15
00001D68                          1381          
00001D68  1615                    1382          MOVE.B  (A5),D3
00001D6A  4EB9 00002740           1383          JSR     HEXTOASCII
00001D70  7202                    1384          MOVE.L  #2,D1
00001D72  97CA                    1385          SUB.L   A2,A3
00001D74  B6FC 0002               1386          CMP     #2,A3
00001D78  6700 0004               1387          BEQ     FORMATGOOD2
00001D7C  538A                    1388          SUB.L   #1,A2     
00001D7E                          1389  FORMATGOOD2:
00001D7E                          1390  
00001D7E  224A                    1391          MOVE.L  A2,A1
00001D80  103C 0001               1392          MOVE.B  #1,D0
00001D84  4E4F                    1393          TRAP    #15
00001D86                          1394  
00001D86                          1395          
00001D86  12BC 0020               1396          MOVE.B  #$20,(A1)
00001D8A  7201                    1397          MOVE.L  #1,D1   ;space between held data and input
00001D8C  7001                    1398          MOVE.L  #1,D0
00001D8E  4E4F                    1399          TRAP    #15
00001D90                          1400  
00001D90                          1401          
00001D90                          1402          *-----Enter Input-------*
00001D90  4283                    1403          CLR.L   D3
00001D92  7C0C                    1404          MOVE.L  #12,D6
00001D94  43F8 3000               1405          LEA     BUFFER,A1   ;set up storage for command
00001D98  103C 0002               1406          MOVE.B  #2,D0       ;load input trap call
00001D9C  4E4F                    1407          TRAP    #15
00001D9E  0C11 002E               1408          CMP.B   #$2E,(A1)
00001DA2  6700 0152               1409          BEQ     ENDLP
00001DA6  0C11 0000               1410          CMP.B   #$00,(A1)
00001DAA  6700 002E               1411          BEQ     ENTERW
00001DAE                          1412          
00001DAE                          1413  PARSELOOPW:
00001DAE  0C11 0000               1414          CMP.B   #$00,(A1)
00001DB2  6700 0024               1415          BEQ     ENDPARSEW        
00001DB6  0C11 0040               1416          CMP.B   #$40,(A1)
00001DBA  6E00 000A               1417          BGT     HIGHHEXMMW
00001DBE  0411 0030               1418          SUBI.B  #$30,(A1)   ;get hex value
00001DC2  6000 0006               1419          BRA     NEXTMMSTEPW
00001DC6  0411 0037               1420  HIGHHEXMMW: SUBI.B  #$37,(A1)  ;get hex value
00001DCA                          1421  NEXTMMSTEPW:
00001DCA  1411                    1422          MOVE.B  (A1),D2
00001DCC  EDBA                    1423          ROL.L   D6,D2
00001DCE  5986                    1424          SUBI.L  #4,D6
00001DD0  5289                    1425          ADD.L   #1,A1
00001DD2  D682                    1426          ADD.L   D2,D3   ;total byte stored in D3
00001DD4  4282                    1427          CLR.L   D2      ;clear for next rotate
00001DD6  60D6                    1428          BRA     PARSELOOPW
00001DD8                          1429  ENDPARSEW:
00001DD8                          1430          
00001DD8  3883                    1431          MOVE.W  D3,(A4)   ;commit memory change 
00001DDA  548C                    1432  ENTERW:  ADD.L   #2,A4   ;increment address
00001DDC  6000 FF3C               1433          BRA     MODIFYLOOPW
00001DE0                          1434  
00001DE0                          1435  ***************************************************
00001DE0                          1436  
00001DE0                          1437  LONG:  
00001DE0  5489                    1438          ADD.L   #2,A1       ;set up for subroutine
00001DE2  3449                    1439          MOVE    A1,A2       ;set up for subroutine
00001DE4  48E7 4270               1440          MOVEM.L D1/D6/A1-A3,-(SP)
00001DE8  4EB9 00002700           1441          JSR     ASCII_ADDRESS
00001DEE  4CDF 0E42               1442          MOVEM.L (SP)+,D1/D6/A1-A3
00001DF2  2845                    1443          MOVE.L  D5,A4       ;set up address to modify
00001DF4                          1444         
00001DF4                          1445  MODIFYLOOPL:
00001DF4                          1446          *-------Display Memory First-----*
00001DF4  200C                    1447          MOVE.L  A4,D0
00001DF6  80FC 0002               1448          DIVU    #2,D0
00001DFA  4840                    1449          SWAP    D0      ;check if it's an odd address
00001DFC  B07C 0000               1450          CMP.W   #$00,D0
00001E00  6600 08B2               1451          BNE     ERRORSR
00001E04  260C                    1452          MOVE.L  A4,D3       ;set up for subroutine
00001E06  2A4C                    1453          MOVE.L  A4,A5       ;next byte of memory may not be needed
00001E08  528D                    1454          ADD.L   #1,A5
00001E0A  4EB9 00002740           1455          JSR     HEXTOASCII  ;convert new address to ascii for output
00001E10  96CA                    1456          SUBA    A2,A3       ;get num of bytes to produce
00001E12  7001                    1457          MOVE.L  #1,D0
00001E14  220B                    1458          MOVE.L  A3,D1
00001E16  224A                    1459          MOVE.L  A2,A1
00001E18  4E4F                    1460          TRAP    #15
00001E1A                          1461          
00001E1A                          1462          *add colon to denote containing data*
00001E1A  12BC 003A               1463          MOVE.B  #$3A,(A1)
00001E1E  7201                    1464          MOVE.L  #1,D1   ;display only the colon
00001E20  7001                    1465          MOVE.L  #1,D0
00001E22  4E4F                    1466          TRAP    #15
00001E24                          1467          
00001E24  1614                    1468          MOVE.B  (A4),D3
00001E26  4EB9 00002740           1469          JSR     HEXTOASCII
00001E2C  7202                    1470          MOVE.L  #2,D1
00001E2E  97CA                    1471          SUB.L   A2,A3
00001E30  B6FC 0002               1472          CMP     #2,A3
00001E34  6700 0004               1473          BEQ     FORMATGOOD3
00001E38  538A                    1474          SUB.L   #1,A2     
00001E3A                          1475  FORMATGOOD3:
00001E3A                          1476  
00001E3A  224A                    1477          MOVE.L  A2,A1
00001E3C  103C 0001               1478          MOVE.B  #1,D0
00001E40  4E4F                    1479          TRAP    #15
00001E42                          1480          
00001E42  161D                    1481          MOVE.B  (A5)+,D3
00001E44  4EB9 00002740           1482          JSR     HEXTOASCII
00001E4A  7202                    1483          MOVE.L  #2,D1
00001E4C  97CA                    1484          SUB.L   A2,A3
00001E4E  B6FC 0002               1485          CMP     #2,A3
00001E52  6700 0004               1486          BEQ     FORMATGOOD4
00001E56  538A                    1487          SUB.L   #1,A2     
00001E58                          1488  FORMATGOOD4:
00001E58                          1489  
00001E58  224A                    1490          MOVE.L  A2,A1
00001E5A  103C 0001               1491          MOVE.B  #1,D0
00001E5E  4E4F                    1492          TRAP    #15
00001E60                          1493          
00001E60  161D                    1494          MOVE.B  (A5)+,D3
00001E62  4EB9 00002740           1495          JSR     HEXTOASCII
00001E68  7202                    1496          MOVE.L  #2,D1
00001E6A  97CA                    1497          SUB.L   A2,A3
00001E6C  B6FC 0002               1498          CMP     #2,A3
00001E70  6700 0004               1499          BEQ     FORMATGOOD5
00001E74  538A                    1500          SUB.L   #1,A2     
00001E76                          1501  FORMATGOOD5:
00001E76                          1502  
00001E76  224A                    1503          MOVE.L  A2,A1
00001E78  103C 0001               1504          MOVE.B  #1,D0
00001E7C  4E4F                    1505          TRAP    #15
00001E7E  161D                    1506          MOVE.B  (A5)+,D3
00001E80  4EB9 00002740           1507          JSR     HEXTOASCII
00001E86  7202                    1508          MOVE.L  #2,D1
00001E88  97CA                    1509          SUB.L   A2,A3
00001E8A  B6FC 0002               1510          CMP     #2,A3
00001E8E  6700 0004               1511          BEQ     FORMATGOOD6
00001E92  538A                    1512          SUB.L   #1,A2     
00001E94                          1513  FORMATGOOD6:
00001E94                          1514  
00001E94  224A                    1515          MOVE.L  A2,A1
00001E96  103C 0001               1516          MOVE.B  #1,D0
00001E9A  4E4F                    1517          TRAP    #15
00001E9C                          1518     
00001E9C  12BC 0020               1519          MOVE.B  #$20,(A1)
00001EA0  7201                    1520          MOVE.L  #1,D1   ;space between held data and input
00001EA2  7001                    1521          MOVE.L  #1,D0
00001EA4  4E4F                    1522          TRAP    #15
00001EA6                          1523  
00001EA6                          1524          
00001EA6                          1525          *-----Enter Input-------*
00001EA6  4283                    1526          CLR.L   D3
00001EA8  7C1C                    1527          MOVE.L  #28,D6
00001EAA  43F8 3000               1528          LEA     BUFFER,A1   ;set up storage for command
00001EAE  103C 0002               1529          MOVE.B  #2,D0       ;load input trap call
00001EB2  4E4F                    1530          TRAP    #15
00001EB4  0C11 002E               1531          CMP.B   #$2E,(A1)
00001EB8  6700 003C               1532          BEQ     ENDLP
00001EBC  0C11 0000               1533          CMP.B   #$00,(A1)
00001EC0  6700 002E               1534          BEQ     ENTERL
00001EC4                          1535          
00001EC4                          1536  PARSELOOPL:
00001EC4  0C11 0000               1537          CMP.B   #$00,(A1)
00001EC8  6700 0024               1538          BEQ     ENDPARSEL        
00001ECC  0C11 0040               1539          CMP.B   #$40,(A1)
00001ED0  6E00 000A               1540          BGT     HIGHHEXMML
00001ED4  0411 0030               1541          SUBI.B  #$30,(A1)   ;get hex value
00001ED8  6000 0006               1542          BRA     NEXTMMSTEPL
00001EDC  0411 0037               1543  HIGHHEXMML: SUBI.B  #$37,(A1)  ;get hex value
00001EE0                          1544  NEXTMMSTEPL:
00001EE0  1411                    1545          MOVE.B  (A1),D2
00001EE2  EDBA                    1546          ROL.L   D6,D2
00001EE4  5986                    1547          SUBI.L  #4,D6
00001EE6  5289                    1548          ADD.L   #1,A1
00001EE8  D682                    1549          ADD.L   D2,D3   ;total byte stored in D3
00001EEA  4282                    1550          CLR.L   D2      ;clear for next rotate
00001EEC  60D6                    1551          BRA     PARSELOOPL
00001EEE                          1552  ENDPARSEL:
00001EEE  2883                    1553          MOVE.L  D3,(A4)   ;commit memory change 
00001EF0  588C                    1554  ENTERL:  ADD.L   #4,A4   ;increment address
00001EF2  6000 FF00               1555          BRA     MODIFYLOOPL
00001EF6                          1556  
00001EF6                          1557  
00001EF6  6000 F1FE               1558  ENDLP:  BRA RESTORE
00001EFA                          1559          
00001EFA                          1560          
00001EFA                          1561  *--------------------------------------------------------------------------------------*
00001EFA                          1562  
00001EFA                          1563  BF:    
00001EFA  5289                    1564         ADD.L    #1,A1   ;first byte of data
00001EFC  2649                    1565         MOVE.L   A1,A3   ;for end ptr
00001EFE                          1566  BFGETENDDATA:
00001EFE  0C1B 0020               1567          CMP.B   #$20,(A3)+
00001F02  6700 0004               1568          BEQ     BFNEXTADDR
00001F06  60F6                    1569          BRA     BFGETENDDATA
00001F08                          1570  BFNEXTADDR:
00001F08  2449                    1571          MOVE.L  A1,A2   ;for subroutine
00001F0A  538B                    1572          SUB.L   #1,A3   ;off by one error
00001F0C  4EB9 00002700           1573          JSR     ASCII_ADDRESS
00001F12  2F05                    1574          MOVE.L  D5,-(SP)    ;save data on the stack
00001F14                          1575          
00001F14  528B                    1576          ADD.L   #1,A3   ;inc end ptr to first byte of address
00001F16  244B                    1577          MOVE.L  A3,A2   ;set start ptr
00001F18                          1578  BFGETENDADDRONE:
00001F18  0C1B 0020               1579          CMP.B   #$20,(A3)+
00001F1C  6700 0004               1580          BEQ     BFNEXTADDRTWO
00001F20  60F6                    1581          BRA     BFGETENDADDRONE
00001F22                          1582          
00001F22                          1583  BFNEXTADDRTWO:
00001F22  538B                    1584          SUB.L   #1,A3   ;off by one error
00001F24  4EB9 00002700           1585          JSR     ASCII_ADDRESS   ;convert address to hex
00001F2A  2A45                    1586          MOVE.L  D5,A5       ;store address 1 in A5
00001F2C  8AFC 0002               1587          DIVU    #2,D5
00001F30  4845                    1588          SWAP    D5
00001F32  BA7C 0000               1589          CMP.W   #$00,D5
00001F36  6600 077C               1590          BNE     ERRORSR
00001F3A                          1591          
00001F3A  528B                    1592          ADD.L   #1,A3   ;inc end ptr to first byte of address
00001F3C  244B                    1593          MOVE.L  A3,A2   ;set start ptr
00001F3E                          1594  BFGETLASTEND:
00001F3E  0C1B 0000               1595          CMP.B   #$00,(A3)+
00001F42  6700 0004               1596          BEQ     STOREDATA
00001F46  60F6                    1597          BRA     BFGETLASTEND
00001F48                          1598          
00001F48                          1599  STOREDATA:
00001F48  538B                    1600          SUB.L   #1,A3   ;off by one error
00001F4A  4EB9 00002700           1601          JSR     ASCII_ADDRESS
00001F50  2C45                    1602          MOVE.L  D5,A6   ;end address in A6
00001F52  8AFC 0002               1603          DIVU    #2,D5
00001F56  4845                    1604          SWAP    D5
00001F58  BA7C 0000               1605          CMP.W   #$00,D5
00001F5C  6600 0756               1606          BNE     ERRORSR
00001F60  2A1F                    1607          MOVE.L  (SP)+,D5
00001F62                          1608          
00001F62                          1609  DATALOOP:
00001F62  BDCD                    1610          CMP.L   A5,A6
00001F64  6D00 0006               1611          BLT     ENDBF
00001F68  3AC5                    1612          MOVE.W  D5,(A5)+
00001F6A  60F6                    1613          BRA     DATALOOP
00001F6C                          1614  
00001F6C  6000 F188               1615  ENDBF:  BRA RESTORE
00001F70                          1616  *--------------------------------------------------------------------------------------*
00001F70                          1617  
00001F70  5289                    1618  BMOV:   ADD.L   #1,A1   ;get to start of first address
00001F72  2449                    1619          MOVE.L  A1,A2   ;set up start ptr
00001F74  264A                    1620          MOVE.L  A2,A3   ;set up end ptr
00001F76                          1621          
00001F76                          1622  FIRSTADDRESS:
00001F76  0C1B 0020               1623          CMP.B #$20,(A3)+
00001F7A  6700 0004               1624          BEQ     COMPUTEFIRSTADD
00001F7E  60F6                    1625          BRA     FIRSTADDRESS
00001F80                          1626          
00001F80                          1627  COMPUTEFIRSTADD:
00001F80  538B                    1628          SUB.L   #1,A3   ;off by one error
00001F82  4EB9 00002700           1629          JSR     ASCII_ADDRESS
00001F88  2045                    1630          MOVE.L  D5,A0   ; save 1st address
00001F8A                          1631          
00001F8A  528B                    1632          ADD.L   #1,A3
00001F8C  244B                    1633          MOVE.L  A3,A2
00001F8E                          1634  SECONDADDRESS:
00001F8E  0C1B 0020               1635          CMP.B   #$20,(A3)+
00001F92  6700 0004               1636          BEQ     COMPUTESECONDADDRESS
00001F96  60F6                    1637          BRA     SECONDADDRESS
00001F98                          1638          
00001F98                          1639  COMPUTESECONDADDRESS:
00001F98  538B                    1640          SUB.L   #1,A3   ;off by one error
00001F9A  4EB9 00002700           1641          JSR     ASCII_ADDRESS
00001FA0  2845                    1642          MOVE.L  D5,A4   ;save 2nd address
00001FA2                          1643  
00001FA2  528B                    1644          ADD.L   #1,A3
00001FA4  244B                    1645          MOVE.L  A3,A2
00001FA6                          1646  THIRDADDRESS:
00001FA6  0C1B 0020               1647          CMP.B   #$20,(A3)+
00001FAA  6700 0004               1648          BEQ     COMPUTETHIRDADDRESS
00001FAE  60F6                    1649          BRA     THIRDADDRESS
00001FB0                          1650          
00001FB0                          1651  COMPUTETHIRDADDRESS:
00001FB0  538B                    1652          SUB.L   #1,A3
00001FB2  4EB9 00002700           1653          JSR     ASCII_ADDRESS
00001FB8  2A45                    1654          MOVE.L  D5,A5   ;save 3rd address
00001FBA                          1655          
00001FBA  528B                    1656          ADD.L   #1,A3
00001FBC  244B                    1657          MOVE.L  A3,A2
00001FBE                          1658  FOURTHADDRESS:
00001FBE  0C1B 0000               1659          CMP.B   #$00,(A3)+
00001FC2  6700 0004               1660          BEQ     COMPUTEFOURTHADDRESS
00001FC6  60F6                    1661          BRA     FOURTHADDRESS
00001FC8                          1662          
00001FC8                          1663  COMPUTEFOURTHADDRESS:
00001FC8  538B                    1664          SUB.L   #1,A3
00001FCA  4EB9 00002700           1665          JSR     ASCII_ADDRESS
00001FD0  2C45                    1666          MOVE.L  D5,A6   ;save 3rd address
00001FD2                          1667          
00001FD2                          1668          
00001FD2                          1669  
00001FD2                          1670          *Check for matching dimensions*
00001FD2  2008                    1671          MOVE.L  A0,D0
00001FD4  220C                    1672          MOVE.L  A4,D1
00001FD6  2A0D                    1673          MOVE.L  A5,D5
00001FD8  2C0E                    1674          MOVE.L  A6,D6
00001FDA  9280                    1675          SUB.L   D0,D1
00001FDC  9C85                    1676          SUB.L   D5,D6
00001FDE  BC81                    1677          CMP.L   D1,D6
00001FE0  6600 06D2               1678          BNE     ERRORSR
00001FE4  B9C8                    1679          CMP.L   A0,A4
00001FE6  6D00 06CC               1680          BLT     ERRORSR
00001FEA  BDCD                    1681          CMP.L   A5,A6
00001FEC  6D00 06C6               1682          BLT     ERRORSR
00001FF0                          1683  
00001FF0                          1684  DATATRANSFER:
00001FF0  B9C8                    1685          CMP.L   A0,A4
00001FF2  6D00 0006               1686          BLT     BMOVDONE
00001FF6  1AD8                    1687          MOVE.B  (A0)+,(A5)+
00001FF8  60F6                    1688          BRA     DATATRANSFER
00001FFA                          1689          
00001FFA                          1690  
00001FFA                          1691  
00001FFA                          1692  BMOVDONE:
00001FFA  6000 F0FA               1693          BRA RESTORE
00001FFE                          1694  
00001FFE                          1695  *--------------------------------------------------------------------------------------*
00001FFE                          1696  
00001FFE                          1697  BTST:   
00001FFE  5289                    1698         ADD.L    #1,A1   ;first byte of data
00002000  2649                    1699         MOVE.L   A1,A3   ;for end ptr
00002002                          1700  BTSTGETENDDATA:
00002002  0C1B 0020               1701          CMP.B   #$20,(A3)+
00002006  6700 0004               1702          BEQ     BTSTNEXTADDR
0000200A  60F6                    1703          BRA     BTSTGETENDDATA
0000200C                          1704  BTSTNEXTADDR:
0000200C  2449                    1705          MOVE.L  A1,A2   ;for subroutine
0000200E  538B                    1706          SUB.L   #1,A3   ;off by one error
00002010  4EB9 00002700           1707          JSR     ASCII_ADDRESS
00002016  2F05                    1708          MOVE.L  D5,-(SP)    ;save data on the stack
00002018                          1709          
00002018  528B                    1710          ADD.L   #1,A3   ;inc end ptr to first byte of address
0000201A  244B                    1711          MOVE.L  A3,A2   ;set start ptr
0000201C                          1712  BTSTGETENDADDRONE:
0000201C  0C1B 0020               1713          CMP.B   #$20,(A3)+
00002020  6700 0004               1714          BEQ     BTSTNEXTADDRTWO
00002024  60F6                    1715          BRA     BTSTGETENDADDRONE
00002026                          1716          
00002026                          1717  BTSTNEXTADDRTWO:
00002026  538B                    1718          SUB.L   #1,A3   ;off by one error
00002028  4EB9 00002700           1719          JSR     ASCII_ADDRESS   ;convert address to hex
0000202E  2A45                    1720          MOVE.L  D5,A5       ;store address 1 in A5
00002030  2845                    1721          MOVE.L  D5,A4       ;for second run through
00002032                          1722                
00002032  528B                    1723          ADD.L   #1,A3   ;inc end ptr to first byte of address
00002034  244B                    1724          MOVE.L  A3,A2   ;set start ptr
00002036                          1725  BTSTGETLASTEND:
00002036  0C1B 0000               1726          CMP.B   #$00,(A3)+
0000203A  6700 0004               1727          BEQ     STOREDATABTST
0000203E  60F6                    1728          BRA     BTSTGETLASTEND
00002040                          1729  
00002040                          1730  
00002040                          1731  STOREDATABTST:
00002040  538B                    1732          SUB.L   #1,A3   ;off by one error
00002042  4EB9 00002700           1733          JSR     ASCII_ADDRESS
00002048  2C45                    1734          MOVE.L  D5,A6   ;end address in A6
0000204A  2A1F                    1735          MOVE.L  (SP)+,D5
0000204C                          1736          
0000204C                          1737  BTSTDATALOOP:
0000204C  BDCD                    1738          CMP.L   A5,A6
0000204E  6D00 0006               1739          BLT     READ
00002052  1AC5                    1740          MOVE.B  D5,(A5)+
00002054  60F6                    1741          BRA     BTSTDATALOOP
00002056                          1742  
00002056                          1743  
00002056                          1744  READ:
00002056  BDCC                    1745          CMP.L   A4,A6
00002058  6D00 006C               1746          BLT     COMPLETE
0000205C  BA1C                    1747          CMP.B   (A4)+,D5
0000205E  6600 0004               1748          BNE     FAIL
00002062  60F2                    1749          BRA     READ
00002064                          1750          
00002064                          1751  FAIL:
00002064  43F8 37D1               1752          LEA     BTST4,A1
00002068  720B                    1753          MOVE.L  #11,D1
0000206A  7000                    1754          MOVE.L  #0,D0
0000206C  4E4F                    1755          TRAP    #15
0000206E                          1756          
0000206E  43F8 379A               1757          LEA     BTST1,A1
00002072  7001                    1758          MOVE.L  #1,D0
00002074  7214                    1759          MOVE.L  #20,D1
00002076  4E4F                    1760          TRAP    #15
00002078                          1761          
00002078  1605                    1762          MOVE.B  D5,D3   ;for subroutine
0000207A  4EB9 00002740           1763          JSR     HEXTOASCII
00002080  224A                    1764          MOVE.L     A2,A1
00002082  7000                    1765          MOVE.L  #0,D0
00002084  97CA                    1766          SUBA.L  A2,A3   ;number of bytes
00002086  220B                    1767          MOVE.L  A3,D1
00002088  4E4F                    1768          TRAP    #15
0000208A                          1769          
0000208A                          1770          
0000208A  43F8 37AE               1771          LEA     BTST2,A1
0000208E  7001                    1772          MOVE.L  #1,D0
00002090  7211                    1773          MOVE.L  #17,D1
00002092  4E4F                    1774          TRAP    #15
00002094                          1775          
00002094                          1776          
00002094  538C                    1777          SUB.L   #1,A4   ;go back to address that failed
00002096  1614                    1778          MOVE.B  (A4),D3
00002098  4EB9 00002740           1779          JSR     HEXTOASCII  ;convert for output
0000209E  224A                    1780          MOVE.L     A2,A1
000020A0  7000                    1781          MOVE.L  #0,D0
000020A2  97CA                    1782          SUBA.L  A2,A3   ;number of bytes
000020A4  220B                    1783          MOVE.L  A3,D1
000020A6  4E4F                    1784          TRAP    #15
000020A8                          1785          
000020A8  43F8 37DC               1786          LEA     BTST5,A1
000020AC  721B                    1787          MOVE.L  #27,D1
000020AE  103C 0001               1788          MOVE.B  #1,D0
000020B2  4E4F                    1789          TRAP    #15
000020B4  260C                    1790          MOVE.L  A4,D3
000020B6  4EB9 00002740           1791          JSR     HEXTOASCII
000020BC  224A                    1792          MOVE.L     A2,A1
000020BE  7000                    1793          MOVE.L  #0,D0
000020C0  97CA                    1794          SUBA.L  A2,A3   ;number of bytes
000020C2  220B                    1795          MOVE.L  A3,D1
000020C4  4E4F                    1796          TRAP    #15
000020C6                          1797  
000020C6                          1798  
000020C6                          1799          
000020C6                          1800  COMPLETE:
000020C6                          1801  
000020C6  43F8 37BF               1802          LEA     BTST3,A1
000020CA  7212                    1803          MOVE.L  #18,D1
000020CC  7000                    1804          MOVE.L  #0,D0
000020CE  4E4F                    1805          TRAP    #15
000020D0  6000 F024               1806          BRA RESTORE
000020D4                          1807  
000020D4                          1808  *--------------------------------------------------------------------------------------*
000020D4                          1809  
000020D4                          1810  BSCH:   
000020D4  5289                    1811          ADD.L   #1,A1   ;start of data
000020D6  2449                    1812          MOVE.L  A1,A2   ;set up bac ptr
000020D8                          1813          
000020D8                          1814  BSCHENDDATA:
000020D8  0C1A 0020               1815          CMP.B   #$20,(A2)+
000020DC  6700 0004               1816          BEQ     BSCHFIRSTADD
000020E0  60F6                    1817          BRA     BSCHENDDATA
000020E2                          1818  
000020E2                          1819  
000020E2                          1820  BSCHFIRSTADD:
000020E2  538A                    1821          SUB.L   #1,A2
000020E4  264A                    1822          MOVE.L  A2,A3
000020E6  2449                    1823          MOVE.L  A1,A2
000020E8  4EB9 00002700           1824          JSR     ASCII_ADDRESS
000020EE  97C9                    1825          SUB.L   A1,A3   ;see how many bytes
000020F0  2C0B                    1826          MOVE.L  A3,D6   ;store byte/word/long in D6   
000020F2  528A                    1827          ADD.L   #1,A2   ;set up for start of next address     
000020F4  264A                    1828          MOVE.L  A2,A3   ;set up for end ptr
000020F6  2F05                    1829          MOVE.L  D5,-(SP)    ;save data to stack
000020F8                          1830          
000020F8                          1831          
000020F8                          1832  BSCHFADDEND:
000020F8  0C1B 0020               1833          CMP.B   #$20,(A3)+
000020FC  6700 0004               1834          BEQ     BSCHSECONDADD
00002100  60F6                    1835          BRA     BSCHFADDEND
00002102                          1836          
00002102                          1837          
00002102                          1838  BSCHSECONDADD:
00002102  538B                    1839          SUB.L   #1,A3   ;off by one
00002104  4EB9 00002700           1840          JSR     ASCII_ADDRESS
0000210A  2A45                    1841          MOVE.L  D5,A5   ;first address destination
0000210C  528B                    1842          ADD.L   #1,A3   ;start it at next address
0000210E  244B                    1843          MOVE.L  A3,A2   ; set up for next address
00002110                          1844          
00002110                          1845          
00002110                          1846  BSCHSECONDFIND:
00002110  0C1B 0000               1847          CMP.B   #$00,(A3)+
00002114  6700 0004               1848          BEQ     TESTOP
00002118  60F6                    1849          BRA     BSCHSECONDFIND
0000211A                          1850          
0000211A                          1851          
0000211A                          1852  TESTOP: 
0000211A  538B                    1853          SUB.L   #1,A3   ;off by one
0000211C  4EB9 00002700           1854          JSR     ASCII_ADDRESS
00002122  2C45                    1855          MOVE.L  D5,A6   ;end address at A6
00002124  2A1F                    1856          MOVE.L  (SP)+,D5    ;restore data
00002126  BC3C 0002               1857          CMP.B   #2,D6
0000212A  6700 0016               1858          BEQ     BYTEBSCH
0000212E  BC3C 0004               1859          CMP.B   #4,D6
00002132  6700 001C               1860          BEQ     WORDBSCH
00002136  BC3C 0008               1861          CMP.B   #8,D6
0000213A  6700 0022               1862          BEQ     LONGBSCH
0000213E  6000 0574               1863          BRA     ERRORSR
00002142                          1864          
00002142                          1865  BYTEBSCH:
00002142  BDCD                    1866          CMP.L   A5,A6
00002144  6D00 0070               1867          BLT     ENDBSCH
00002148  BA1D                    1868          CMP.B   (A5)+,D5
0000214A  6700 0020               1869          BEQ     FOUNDB
0000214E  60F2                    1870          BRA     BYTEBSCH
00002150                          1871  
00002150                          1872  WORDBSCH:
00002150  BDCD                    1873          CMP.L   A5,A6
00002152  6D00 0062               1874          BLT     ENDBSCH
00002156  BA5D                    1875          CMP.W   (A5)+,D5
00002158  6700 001A               1876          BEQ     FOUNDW
0000215C  60F2                    1877          BRA     WORDBSCH
0000215E                          1878  
0000215E                          1879  LONGBSCH:
0000215E  BDCD                    1880          CMP.L   A5,A6
00002160  6D00 0054               1881          BLT     ENDBSCH
00002164  BA9D                    1882          CMP.L   (A5)+,D5
00002166  6700 0014               1883          BEQ     FOUNDL
0000216A  60F2                    1884          BRA     LONGBSCH
0000216C                          1885  
0000216C                          1886  
0000216C                          1887  
0000216C                          1888  FOUNDB:
0000216C  538D                    1889          SUB.L   #1,A5
0000216E  1615                    1890          MOVE.B  (A5),D3
00002170  6000 000E               1891          BRA     SUCCESSTEXT
00002174                          1892  FOUNDW:
00002174  558D                    1893          SUB.L   #2,A5
00002176  3615                    1894          MOVE.W  (A5),D3
00002178  6000 0006               1895          BRA     SUCCESSTEXT
0000217C                          1896  FOUNDL:
0000217C  598D                    1897          SUB.L   #4,A5
0000217E  2615                    1898          MOVE.L  (A5),D3
00002180                          1899          
00002180                          1900  SUCCESSTEXT:
00002180  43F8 37F7               1901          LEA BSCH1,A1
00002184  7206                    1902          MOVE.L  #6,D1
00002186  7001                    1903          MOVE.L  #1,D0
00002188  4E4F                    1904          TRAP    #15
0000218A                          1905  
0000218A  4EB9 00002740           1906          JSR     HEXTOASCII
00002190  224A                    1907          MOVE.L  A2,A1
00002192  97CA                    1908          SUB.L   A2,A3
00002194  220B                    1909          MOVE.L  A3,D1   ;how many bytes
00002196  7000                    1910          MOVE.L  #0,D0
00002198  4E4F                    1911          TRAP    #15
0000219A                          1912          
0000219A  43F8 37FD               1913          LEA BSCH2,A1
0000219E  7212                    1914          MOVE.L  #18,D1
000021A0  7001                    1915          MOVE.L  #1,D0
000021A2  4E4F                    1916          TRAP    #15
000021A4                          1917          
000021A4  260D                    1918          MOVE.L  A5,D3
000021A6  4EB9 00002740           1919          JSR     HEXTOASCII
000021AC  224A                    1920          MOVE.L  A2,A1
000021AE  97CA                    1921          SUB.L   A2,A3
000021B0  220B                    1922          MOVE.L  A3,D1   ;how many bytes
000021B2  7000                    1923          MOVE.L  #0,D0
000021B4  4E4F                    1924          TRAP    #15
000021B6                          1925  
000021B6                          1926          
000021B6                          1927  ENDBSCH:        
000021B6  6000 EF3E               1928          BRA RESTORE
000021BA                          1929  
000021BA                          1930  *--------------------------------------------------------------------------------------*
000021BA                          1931  
000021BA                          1932  GO:    
000021BA  2449                    1933          MOVE.L  A1,A2   ;setup for hex conversion
000021BC  264A                    1934          MOVE.L  A2,A3   
000021BE                          1935  GGETEND:
000021BE  0C1B 0000               1936          CMP.B   #$00,(A3)+
000021C2  6700 0004               1937          BEQ     EXECUTE
000021C6  60F6                    1938          BRA     GGETEND
000021C8                          1939          
000021C8                          1940  EXECUTE:
000021C8  538B                    1941          SUB.L   #1,A3   ;off by one error
000021CA  4EB9 00002700           1942          JSR     ASCII_ADDRESS
000021D0  2045                    1943          MOVE.L  D5,A0   
000021D2  4E90                    1944          JSR     (A0)    ;go to program
000021D4                          1945          **NOTE: THE PROGRAM MUST HAVE RTS OR CONTROL WILL NOT BE RETURNED BACK TO MONITOR441!!!**
000021D4  6000 EF20               1946          BRA RESTORE
000021D8                          1947  
000021D8                          1948  *--------------------------------------------------------------------------------------*
000021D8                          1949  
000021D8                          1950  DF:    *Registers have already been saved to STACK, just need to pop them off first*
000021D8                          1951          *Stack looks like this*
000021D8                          1952          
000021D8                          1953          *-------------*
000021D8                          1954          *|D0-D7/A0-A6|*
000021D8                          1955          *|     USP   |*
000021D8                          1956          *|     SR    |*
000021D8                          1957          *|     SSP   |*
000021D8                          1958          *|     PC    |*
000021D8                          1959          *-------------*
000021D8                          1960          *I should've used loops for efficiency but runtime is not a design constraint*
000021D8                          1961          *Maybe fix this in the future?*
000021D8                          1962          
000021D8                          1963            *----------D0-----------*
000021D8  43F8 3820               1964         LEA      RD0,A1
000021DC  7204                    1965         MOVE.L   #4,D1
000021DE  7001                    1966         MOVE.L   #1,D0
000021E0  4E4F                    1967         TRAP     #15
000021E2  261F                    1968         MOVE.L   (SP)+,D3    
000021E4  4EB9 00002740           1969         JSR      HEXTOASCII
000021EA  224A                    1970         MOVE.L   A2,A1
000021EC  95CB                    1971         SUB.L    A3,A2
000021EE  240A                    1972         MOVE.L   A2,D2
000021F0  B4BC FFFFFFF8           1973         CMP.L    #-8,D2
000021F6  6700 0006               1974         BEQ      D0DONTWORRY
000021FA                          1975  D0ACCOUNTFORZEROS:
000021FA  5082                    1976          ADDI.L  #8,D2
000021FC  93C2                    1977          SUB.L   D2,A1
000021FE                          1978  D0DONTWORRY:
000021FE  7000                    1979         MOVE.L   #0,D0
00002200  7208                    1980         MOVE.L   #8,D1
00002202  4E4F                    1981         TRAP     #15
00002204                          1982         
00002204                          1983             *----------D1-----------*
00002204  43F8 3824               1984         LEA      RD1,A1
00002208  7204                    1985         MOVE.L   #4,D1
0000220A  7001                    1986         MOVE.L   #1,D0
0000220C  4E4F                    1987         TRAP     #15
0000220E  261F                    1988         MOVE.L   (SP)+,D3    
00002210  4EB9 00002740           1989         JSR      HEXTOASCII
00002216  224A                    1990         MOVE.L   A2,A1
00002218  95CB                    1991         SUB.L    A3,A2
0000221A  240A                    1992         MOVE.L   A2,D2
0000221C  B4BC FFFFFFF8           1993         CMP.L    #-8,D2
00002222  6700 0006               1994         BEQ      D1DONTWORRY
00002226                          1995  D1ACCOUNTFORZEROS:
00002226  5082                    1996          ADDI.L  #8,D2
00002228  93C2                    1997          SUB.L   D2,A1
0000222A                          1998  D1DONTWORRY:
0000222A  7000                    1999         MOVE.L   #0,D0
0000222C  7208                    2000         MOVE.L   #8,D1
0000222E  4E4F                    2001         TRAP     #15
00002230                          2002         
00002230                          2003             *----------D2-----------*
00002230  43F8 3828               2004         LEA      RD2,A1
00002234  7204                    2005         MOVE.L   #4,D1
00002236  7001                    2006         MOVE.L   #1,D0
00002238  4E4F                    2007         TRAP     #15
0000223A  261F                    2008         MOVE.L   (SP)+,D3   
0000223C  4EB9 00002740           2009         JSR      HEXTOASCII
00002242  224A                    2010         MOVE.L   A2,A1
00002244  95CB                    2011         SUB.L    A3,A2
00002246  240A                    2012         MOVE.L   A2,D2
00002248  B4BC FFFFFFF8           2013         CMP.L    #-8,D2
0000224E  6700 0006               2014         BEQ      D2DONTWORRY
00002252                          2015  D2ACCOUNTFORZEROS:
00002252  5082                    2016          ADDI.L  #8,D2
00002254  93C2                    2017          SUB.L   D2,A1
00002256                          2018  D2DONTWORRY:
00002256  7000                    2019         MOVE.L   #0,D0
00002258  7208                    2020         MOVE.L   #8,D1
0000225A  4E4F                    2021         TRAP     #15
0000225C                          2022         
0000225C                          2023              *----------D3-----------*
0000225C  43F8 382C               2024         LEA      RD3,A1
00002260  7204                    2025         MOVE.L   #4,D1
00002262  7001                    2026         MOVE.L   #1,D0
00002264  4E4F                    2027         TRAP     #15   
00002266  261F                    2028         MOVE.L   (SP)+,D3  
00002268  4EB9 00002740           2029         JSR      HEXTOASCII
0000226E  224A                    2030         MOVE.L   A2,A1
00002270  95CB                    2031         SUB.L    A3,A2
00002272  240A                    2032         MOVE.L   A2,D2
00002274  B4BC FFFFFFF8           2033         CMP.L    #-8,D2
0000227A  6700 0006               2034         BEQ      D3DONTWORRY
0000227E                          2035  D3ACCOUNTFORZEROS:
0000227E  5082                    2036          ADDI.L  #8,D2
00002280  93C2                    2037          SUB.L   D2,A1
00002282                          2038  D3DONTWORRY:
00002282  7000                    2039         MOVE.L   #0,D0
00002284  7208                    2040         MOVE.L   #8,D1
00002286  4E4F                    2041         TRAP     #15
00002288                          2042         
00002288                          2043              *----------D4-----------*
00002288  43F8 3830               2044         LEA      RD4,A1
0000228C  7204                    2045         MOVE.L   #4,D1
0000228E  7001                    2046         MOVE.L   #1,D0
00002290  4E4F                    2047         TRAP     #15
00002292  261F                    2048         MOVE.L   (SP)+,D3    
00002294  4EB9 00002740           2049         JSR      HEXTOASCII
0000229A  224A                    2050         MOVE.L   A2,A1
0000229C  95CB                    2051         SUB.L    A3,A2
0000229E  240A                    2052         MOVE.L   A2,D2
000022A0  B4BC FFFFFFF8           2053         CMP.L    #-8,D2
000022A6  6700 0006               2054         BEQ      D4DONTWORRY
000022AA                          2055  D4ACCOUNTFORZEROS:
000022AA  5082                    2056          ADDI.L  #8,D2
000022AC  93C2                    2057          SUB.L   D2,A1
000022AE                          2058  D4DONTWORRY:
000022AE  7000                    2059         MOVE.L   #0,D0
000022B0  7208                    2060         MOVE.L   #8,D1
000022B2  4E4F                    2061         TRAP     #15
000022B4                          2062         
000022B4                          2063         *----------D5-----------*
000022B4  43F8 3834               2064         LEA      RD5,A1
000022B8  7204                    2065         MOVE.L   #4,D1
000022BA  7001                    2066         MOVE.L   #1,D0
000022BC  4E4F                    2067         TRAP     #15
000022BE  261F                    2068         MOVE.L   (SP)+,D3    
000022C0  4EB9 00002740           2069         JSR      HEXTOASCII
000022C6  224A                    2070         MOVE.L   A2,A1
000022C8  95CB                    2071         SUB.L    A3,A2
000022CA  240A                    2072         MOVE.L   A2,D2
000022CC  B4BC FFFFFFF8           2073         CMP.L    #-8,D2
000022D2  6700 0006               2074         BEQ      D5DONTWORRY
000022D6                          2075  D5ACCOUNTFORZEROS:
000022D6  5082                    2076          ADDI.L  #8,D2
000022D8  93C2                    2077          SUB.L   D2,A1
000022DA                          2078  D5DONTWORRY:
000022DA  7000                    2079         MOVE.L   #0,D0
000022DC  7208                    2080         MOVE.L   #8,D1
000022DE  4E4F                    2081         TRAP     #15
000022E0                          2082  
000022E0                          2083          *----------D6-----------*
000022E0  43F8 3838               2084         LEA      RD6,A1
000022E4  7204                    2085         MOVE.L   #4,D1
000022E6  7001                    2086         MOVE.L   #1,D0
000022E8  4E4F                    2087         TRAP     #15
000022EA  261F                    2088         MOVE.L   (SP)+,D3    
000022EC  4EB9 00002740           2089         JSR      HEXTOASCII
000022F2  224A                    2090         MOVE.L   A2,A1
000022F4  95CB                    2091         SUB.L    A3,A2
000022F6  240A                    2092         MOVE.L   A2,D2
000022F8  B4BC FFFFFFF8           2093         CMP.L    #-8,D2
000022FE  6700 0006               2094         BEQ      D6DONTWORRY
00002302                          2095  D6ACCOUNTFORZEROS:
00002302  5082                    2096          ADDI.L  #8,D2
00002304  93C2                    2097          SUB.L   D2,A1
00002306                          2098  D6DONTWORRY:
00002306  7000                    2099         MOVE.L   #0,D0
00002308  7208                    2100         MOVE.L   #8,D1
0000230A  4E4F                    2101         TRAP     #15
0000230C                          2102         
0000230C                          2103           *----------D7-----------*
0000230C  43F8 383C               2104         LEA      RD7,A1
00002310  7204                    2105         MOVE.L   #4,D1
00002312  7001                    2106         MOVE.L   #1,D0
00002314  4E4F                    2107         TRAP     #15
00002316  261F                    2108         MOVE.L   (SP)+,D3    
00002318  4EB9 00002740           2109         JSR      HEXTOASCII
0000231E  224A                    2110         MOVE.L   A2,A1
00002320  95CB                    2111         SUB.L    A3,A2
00002322  240A                    2112         MOVE.L   A2,D2
00002324  B4BC FFFFFFF8           2113         CMP.L    #-8,D2
0000232A  6700 0006               2114         BEQ      D7DONTWORRY
0000232E                          2115  D7ACCOUNTFORZEROS:
0000232E  5082                    2116          ADDI.L  #8,D2
00002330  93C2                    2117          SUB.L   D2,A1
00002332                          2118  D7DONTWORRY:
00002332  7000                    2119         MOVE.L   #0,D0
00002334  7208                    2120         MOVE.L   #8,D1
00002336  4E4F                    2121         TRAP     #15
00002338                          2122  
00002338                          2123     *----------A0-----------*
00002338  43F8 3840               2124         LEA      RA0,A1
0000233C  7204                    2125         MOVE.L   #4,D1
0000233E  7001                    2126         MOVE.L   #1,D0
00002340  4E4F                    2127         TRAP     #15
00002342  261F                    2128         MOVE.L   (SP)+,D3    
00002344  4EB9 00002740           2129         JSR      HEXTOASCII
0000234A  224A                    2130         MOVE.L   A2,A1
0000234C  95CB                    2131         SUB.L    A3,A2
0000234E  240A                    2132         MOVE.L   A2,D2
00002350  B4BC FFFFFFF8           2133         CMP.L    #-8,D2
00002356  6700 0006               2134         BEQ      A0DONTWORRY
0000235A                          2135  A0ACCOUNTFORZEROS:
0000235A  5082                    2136          ADDI.L  #8,D2
0000235C  93C2                    2137          SUB.L   D2,A1
0000235E                          2138  A0DONTWORRY:
0000235E  7000                    2139         MOVE.L   #0,D0
00002360  7208                    2140         MOVE.L   #8,D1
00002362  4E4F                    2141         TRAP     #15
00002364                          2142         
00002364                          2143            *----------A1-----------*
00002364  43F8 3844               2144         LEA      RA1,A1
00002368  7204                    2145         MOVE.L   #4,D1
0000236A  7001                    2146         MOVE.L   #1,D0
0000236C  4E4F                    2147         TRAP     #15
0000236E  261F                    2148         MOVE.L   (SP)+,D3    
00002370  4EB9 00002740           2149         JSR      HEXTOASCII
00002376  224A                    2150         MOVE.L   A2,A1
00002378  95CB                    2151         SUB.L    A3,A2
0000237A  240A                    2152         MOVE.L   A2,D2
0000237C  B4BC FFFFFFF8           2153         CMP.L    #-8,D2
00002382  6700 0006               2154         BEQ      A1DONTWORRY
00002386                          2155  A1ACCOUNTFORZEROS:
00002386  5082                    2156          ADDI.L  #8,D2
00002388  93C2                    2157          SUB.L   D2,A1
0000238A                          2158  A1DONTWORRY:
0000238A  7000                    2159         MOVE.L   #0,D0
0000238C  7208                    2160         MOVE.L   #8,D1
0000238E  4E4F                    2161         TRAP     #15
00002390                          2162         
00002390                          2163          *----------A2-----------*
00002390  43F8 3848               2164         LEA      RA2,A1
00002394  7204                    2165         MOVE.L   #4,D1
00002396  7001                    2166         MOVE.L   #1,D0
00002398  4E4F                    2167         TRAP     #15
0000239A  261F                    2168         MOVE.L   (SP)+,D3    
0000239C  4EB9 00002740           2169         JSR      HEXTOASCII
000023A2  224A                    2170         MOVE.L   A2,A1
000023A4  95CB                    2171         SUB.L    A3,A2
000023A6  240A                    2172         MOVE.L   A2,D2
000023A8  B4BC FFFFFFF8           2173         CMP.L    #-8,D2
000023AE  6700 0006               2174         BEQ      A2DONTWORRY
000023B2                          2175  A2ACCOUNTFORZEROS:
000023B2  5082                    2176          ADDI.L  #8,D2
000023B4  93C2                    2177          SUB.L   D2,A1
000023B6                          2178  A2DONTWORRY:
000023B6  7000                    2179         MOVE.L   #0,D0
000023B8  7208                    2180         MOVE.L   #8,D1
000023BA  4E4F                    2181         TRAP     #15
000023BC                          2182         
000023BC                          2183           *----------A3-----------*
000023BC  43F8 384C               2184         LEA      RA3,A1
000023C0  7204                    2185         MOVE.L   #4,D1
000023C2  7001                    2186         MOVE.L   #1,D0
000023C4  4E4F                    2187         TRAP     #15
000023C6  261F                    2188         MOVE.L   (SP)+,D3    
000023C8  4EB9 00002740           2189         JSR      HEXTOASCII
000023CE  224A                    2190         MOVE.L   A2,A1
000023D0  95CB                    2191         SUB.L    A3,A2
000023D2  240A                    2192         MOVE.L   A2,D2
000023D4  B4BC FFFFFFF8           2193         CMP.L    #-8,D2
000023DA  6700 0006               2194         BEQ      A3DONTWORRY
000023DE                          2195  A3ACCOUNTFORZEROS:
000023DE  5082                    2196          ADDI.L  #8,D2
000023E0  93C2                    2197          SUB.L   D2,A1
000023E2                          2198  A3DONTWORRY:
000023E2  7000                    2199         MOVE.L   #0,D0
000023E4  7208                    2200         MOVE.L   #8,D1
000023E6  4E4F                    2201         TRAP     #15
000023E8                          2202         
000023E8                          2203          *----------A4-----------*
000023E8  43F8 384C               2204         LEA      RA3,A1
000023EC  7204                    2205         MOVE.L   #4,D1
000023EE  7001                    2206         MOVE.L   #1,D0
000023F0  4E4F                    2207         TRAP     #15
000023F2  261F                    2208         MOVE.L   (SP)+,D3    
000023F4  4EB9 00002740           2209         JSR      HEXTOASCII
000023FA  224A                    2210         MOVE.L   A2,A1
000023FC  95CB                    2211         SUB.L    A3,A2
000023FE  240A                    2212         MOVE.L   A2,D2
00002400  B4BC FFFFFFF8           2213         CMP.L    #-8,D2
00002406  6700 0006               2214         BEQ      A4DONTWORRY
0000240A                          2215  A4ACCOUNTFORZEROS:
0000240A  5082                    2216          ADDI.L  #8,D2
0000240C  93C2                    2217          SUB.L   D2,A1
0000240E                          2218  A4DONTWORRY:
0000240E  7000                    2219         MOVE.L   #0,D0
00002410  7208                    2220         MOVE.L   #8,D1
00002412  4E4F                    2221         TRAP     #15
00002414                          2222         
00002414                          2223         *----------A5-----------*
00002414  43F8 384C               2224         LEA      RA3,A1
00002418  7204                    2225         MOVE.L   #4,D1
0000241A  7001                    2226         MOVE.L   #1,D0
0000241C  4E4F                    2227         TRAP     #15
0000241E  261F                    2228         MOVE.L   (SP)+,D3    
00002420  4EB9 00002740           2229         JSR      HEXTOASCII
00002426  224A                    2230         MOVE.L   A2,A1
00002428  95CB                    2231         SUB.L    A3,A2
0000242A  240A                    2232         MOVE.L   A2,D2
0000242C  B4BC FFFFFFF8           2233         CMP.L    #-8,D2
00002432  6700 0006               2234         BEQ      A5DONTWORRY
00002436                          2235  A5ACCOUNTFORZEROS:
00002436  5082                    2236          ADDI.L  #8,D2
00002438  93C2                    2237          SUB.L   D2,A1
0000243A                          2238  A5DONTWORRY:
0000243A  7000                    2239         MOVE.L   #0,D0
0000243C  7208                    2240         MOVE.L   #8,D1
0000243E  4E4F                    2241         TRAP     #15
00002440                          2242         
00002440                          2243         *----------A6-----------*
00002440  43F8 384C               2244         LEA      RA3,A1
00002444  7204                    2245         MOVE.L   #4,D1
00002446  7001                    2246         MOVE.L   #1,D0
00002448  4E4F                    2247         TRAP     #15
0000244A  261F                    2248         MOVE.L   (SP)+,D3    
0000244C  4EB9 00002740           2249         JSR      HEXTOASCII
00002452  224A                    2250         MOVE.L   A2,A1
00002454  95CB                    2251         SUB.L    A3,A2
00002456  240A                    2252         MOVE.L   A2,D2
00002458  B4BC FFFFFFF8           2253         CMP.L    #-8,D2
0000245E  6700 0006               2254         BEQ      A6DONTWORRY
00002462                          2255  A6ACCOUNTFORZEROS:
00002462  5082                    2256          ADDI.L  #8,D2
00002464  93C2                    2257          SUB.L   D2,A1
00002466                          2258  A6DONTWORRY:
00002466  7000                    2259         MOVE.L   #0,D0
00002468  7208                    2260         MOVE.L   #8,D1
0000246A  4E4F                    2261         TRAP     #15
0000246C                          2262       *-----HACK---*
0000246C  DFFC 0000003C           2263       ADD.L  #60,SP  ;should put stack in correct place
00002472                          2264       
00002472                          2265                *----------USP-----------*
00002472  43F8 3863               2266         LEA      RUS,A1
00002476  7204                    2267         MOVE.L   #4,D1
00002478  7001                    2268         MOVE.L   #1,D0
0000247A  4E4F                    2269         TRAP     #15
0000247C  261F                    2270         MOVE.L   (SP)+,D3    
0000247E  4EB9 00002740           2271         JSR      HEXTOASCII
00002484  224A                    2272         MOVE.L   A2,A1
00002486  95CB                    2273         SUB.L    A3,A2
00002488  240A                    2274         MOVE.L   A2,D2
0000248A  B4BC FFFFFFF8           2275         CMP.L    #-8,D2
00002490  6700 0006               2276         BEQ      USPDONTWORRY
00002494                          2277  USPACCOUNTFORZEROS:
00002494  5082                    2278          ADDI.L  #8,D2
00002496  93C2                    2279          SUB.L   D2,A1
00002498                          2280  USPDONTWORRY:
00002498  7000                    2281         MOVE.L   #0,D0
0000249A  7208                    2282         MOVE.L   #8,D1
0000249C  4E4F                    2283         TRAP     #15
0000249E                          2284  
0000249E                          2285                *----------SR-----------*
0000249E  43F8 386B               2286         LEA      RSR,A1
000024A2  7204                    2287         MOVE.L   #4,D1
000024A4  7001                    2288         MOVE.L   #1,D0
000024A6  4E4F                    2289         TRAP     #15
000024A8  361F                    2290         MOVE.W   (SP)+,D3
000024AA  3E03                    2291         MOVE.W   D3,D7   ;temp storage to restore before return    
000024AC  4EB9 00002740           2292         JSR      HEXTOASCII
000024B2  224A                    2293         MOVE.L   A2,A1
000024B4  95CB                    2294         SUB.L    A3,A2
000024B6  240A                    2295         MOVE.L   A2,D2
000024B8  B4BC FFFFFFFC           2296         CMP.L    #-4,D2
000024BE  6700 0006               2297         BEQ      SRDONTWORRY
000024C2                          2298  SRACCOUNTFORZEROS:
000024C2  5882                    2299          ADDI.L  #4,D2
000024C4  93C2                    2300          SUB.L   D2,A1
000024C6                          2301  SRDONTWORRY:
000024C6  7000                    2302         MOVE.L   #0,D0
000024C8  7204                    2303         MOVE.L   #4,D1
000024CA  4E4F                    2304         TRAP     #15
000024CC                          2305         
000024CC                          2306      *----------SS/A7-----------*
000024CC  43F8 385C               2307         LEA      RSS,A1
000024D0  7207                    2308         MOVE.L   #7,D1
000024D2  7001                    2309         MOVE.L   #1,D0
000024D4  4E4F                    2310         TRAP     #15
000024D6  261F                    2311         MOVE.L   (SP)+,D3    
000024D8  4EB9 00002740           2312         JSR      HEXTOASCII
000024DE  224A                    2313         MOVE.L   A2,A1
000024E0  95CB                    2314         SUB.L    A3,A2
000024E2  240A                    2315         MOVE.L   A2,D2
000024E4  B4BC FFFFFFF8           2316         CMP.L    #-8,D2
000024EA  6700 0006               2317         BEQ      SSDONTWORRY
000024EE                          2318  SSACCOUNTFORZEROS:
000024EE  5082                    2319          ADDI.L  #8,D2
000024F0  93C2                    2320          SUB.L   D2,A1
000024F2                          2321  SSDONTWORRY:
000024F2  7000                    2322         MOVE.L   #0,D0
000024F4  7208                    2323         MOVE.L   #8,D1
000024F6  4E4F                    2324         TRAP     #15
000024F8                          2325         
000024F8                          2326      *----------PC-----------*
000024F8  43F8 3867               2327         LEA      RPC,A1
000024FC  7204                    2328         MOVE.L   #4,D1
000024FE  7001                    2329         MOVE.L   #1,D0
00002500  4E4F                    2330         TRAP     #15
00002502  261F                    2331         MOVE.L   (SP)+,D3    
00002504  4EB9 00002740           2332         JSR      HEXTOASCII
0000250A  224A                    2333         MOVE.L   A2,A1
0000250C  95CB                    2334         SUB.L    A3,A2
0000250E  240A                    2335         MOVE.L   A2,D2
00002510  B4BC FFFFFFF8           2336         CMP.L    #-8,D2
00002516  6700 0006               2337         BEQ      PCDONTWORRY
0000251A                          2338  PCACCOUNTFORZEROS:
0000251A  5082                    2339          ADDI.L  #8,D2
0000251C  93C2                    2340          SUB.L   D2,A1
0000251E                          2341  PCDONTWORRY:
0000251E  7000                    2342         MOVE.L   #0,D0
00002520  7208                    2343         MOVE.L   #8,D1
00002522  4E4F                    2344         TRAP     #15       
00002524                          2345         
00002524                          2346     *---DF HACK RESTORE---*
00002524  3F07                    2347     MOVE.W   D7,-(SP)
00002526  DFFC FFFFFFB8           2348     ADD.L    #-72,SP
0000252C  4CDF 7FFF               2349     MOVEM.L  (SP)+,D0-D7/A0-A6
00002530  DFFC 0000000C           2350     ADD.L    #12,SP  ;go back to original value
00002536  46DF                    2351     MOVE.W   (SP)+,SR
00002538                          2352          
00002538  6000 EB36               2353         BRA SHELL
0000253C                          2354  
0000253C                          2355  *--------------------------------------------------------------------------------------*
0000253C                          2356  
0000253C                          2357  
0000253C                          2358  ************************************EXCEPTIONS!*****************************************
0000253C                          2359  *--------------------------------------------------------------------------------------*
0000253C                          2360  
0000253C                          2361  BERR:
0000253C  48E7 C070               2362          MOVEM.L A1-A3/D0-D1,-(SP)
00002540  43F8 386F               2363          LEA     BERR_TEXT,A1
00002544  700D                    2364          MOVE.L  #13,D0
00002546  4E4F                    2365          TRAP    #15
00002548  43F8 3960               2366          LEA     SSW,A1
0000254C  700E                    2367          MOVE.L  #14,D0
0000254E  4E4F                    2368          TRAP    #15
00002550  362F 0014               2369          MOVE.W  (20,SP),D3
00002554  4EB9 00002740           2370          JSR     HEXTOASCII
0000255A  598B                    2371          SUB.L   #4,A3
0000255C  224B                    2372          MOVEA.L A3,A1
0000255E  7204                    2373          MOVE.L  #4,D1
00002560  7000                    2374          MOVE.L  #0,D0
00002562  4E4F                    2375          TRAP    #15
00002564  43F8 3966               2376          LEA     BA,A1
00002568  700E                    2377          MOVE.L  #14,D0
0000256A  4E4F                    2378          TRAP    #15
0000256C  262F 0016               2379          MOVE.L  (22,SP),D3
00002570  4EB9 00002740           2380          JSR     HEXTOASCII
00002576  518B                    2381          SUB.L   #8,A3
00002578  224B                    2382          MOVEA.L A3,A1
0000257A  7208                    2383          MOVE.L  #8,D1
0000257C  7000                    2384          MOVE.L  #0,D0
0000257E  4E4F                    2385          TRAP    #15
00002580  43F8 396B               2386          LEA     IR,A1
00002584  700E                    2387          MOVE.L  #14,D0
00002586  4E4F                    2388          TRAP    #15
00002588  362F 001A               2389          MOVE.W  (26,SP),D3
0000258C  4EB9 00002740           2390          JSR     HEXTOASCII
00002592  598B                    2391          SUB.L   #4,A3
00002594  224B                    2392          MOVEA.L A3,A1
00002596  7204                    2393          MOVE.L  #4,D1
00002598  7000                    2394          MOVE.L  #0,D0
0000259A  4E4F                    2395          TRAP    #15
0000259C  4CDF 0E03               2396          MOVEM.L (SP)+,A1-A3/D0-D1
000025A0  2E7C 01000000           2397          MOVE.L  #$01000000,SP   ;reset stack
000025A6  6000 EAC8               2398          BRA     SHELL
000025AA                          2399  
000025AA                          2400  AERR:
000025AA  48E7 C070               2401          MOVEM.L A1-A3/D0-D1,-(SP)
000025AE  43F8 3887               2402          LEA     AERR_TEXT,A1
000025B2  700D                    2403          MOVE.L  #13,D0
000025B4  4E4F                    2404          TRAP    #15
000025B6  43F8 3960               2405          LEA     SSW,A1
000025BA  700E                    2406          MOVE.L  #14,D0
000025BC  4E4F                    2407          TRAP    #15
000025BE  362F 0014               2408          MOVE.W  (20,SP),D3
000025C2  4EB9 00002740           2409          JSR     HEXTOASCII
000025C8  598B                    2410          SUB.L   #4,A3
000025CA  224B                    2411          MOVEA.L A3,A1
000025CC  7204                    2412          MOVE.L  #4,D1
000025CE  7000                    2413          MOVE.L  #0,D0
000025D0  4E4F                    2414          TRAP    #15
000025D2  43F8 3966               2415          LEA     BA,A1
000025D6  700E                    2416          MOVE.L  #14,D0
000025D8  4E4F                    2417          TRAP    #15
000025DA  262F 0016               2418          MOVE.L  (22,SP),D3
000025DE  4EB9 00002740           2419          JSR     HEXTOASCII
000025E4  518B                    2420          SUB.L   #8,A3
000025E6  224B                    2421          MOVEA.L A3,A1
000025E8  7208                    2422          MOVE.L  #8,D1
000025EA  7000                    2423          MOVE.L  #0,D0
000025EC  4E4F                    2424          TRAP    #15
000025EE  43F8 396B               2425          LEA     IR,A1
000025F2  700E                    2426          MOVE.L  #14,D0
000025F4  4E4F                    2427          TRAP    #15
000025F6  362F 001A               2428          MOVE.W  (26,SP),D3
000025FA  4EB9 00002740           2429          JSR     HEXTOASCII
00002600  598B                    2430          SUB.L   #4,A3
00002602  224B                    2431          MOVEA.L A3,A1
00002604  7204                    2432          MOVE.L  #4,D1
00002606  7000                    2433          MOVE.L  #0,D0
00002608  4E4F                    2434          TRAP    #15
0000260A  4CDF 0E03               2435          MOVEM.L (SP)+,A1-A3/D0-D1
0000260E  2E7C 01000000           2436          MOVE.L  #$01000000,SP   ;reset stack
00002614  6000 EA5A               2437          BRA     SHELL
00002618                          2438  
00002618                          2439  IERR:
00002618  48E7 8040               2440      MOVEM.L A1/D0,-(SP)
0000261C  43F8 38A4               2441      LEA IERR_TEXT,A1
00002620  700D                    2442      MOVE.L #13,D0
00002622  4E4F                    2443      TRAP #15
00002624  4CDF 0201               2444      MOVEM.L (SP)+,A1/D0
00002628  2E7C 01000000           2445      MOVE.L #$01000000,SP
0000262E  6000 EA40               2446      BRA SHELL
00002632                          2447  
00002632                          2448  PERR:
00002632  48E7 8040               2449      MOVEM.L A1/D0,-(SP)
00002636  43F8 38CD               2450      LEA PERR_TEXT,A1
0000263A  700D                    2451      MOVE.L #13,D0
0000263C  4E4F                    2452      TRAP #15
0000263E  4CDF 0201               2453      MOVEM.L (SP)+,A1/D0
00002642  2E7C 01000000           2454      MOVE.L #$01000000,SP
00002648  6000 EA26               2455      BRA SHELL
0000264C                          2456      
0000264C                          2457  ZERR:
0000264C  48E7 8040               2458      MOVEM.L A1/D0,-(SP)
00002650  43F8 38EB               2459      LEA ZERR_TEXT,A1
00002654  700D                    2460      MOVE.L #13,D0
00002656  4E4F                    2461      TRAP #15
00002658  4CDF 0201               2462      MOVEM.L (SP)+,A1/D0
0000265C  2E7C 01000000           2463      MOVE.L #$01000000,SP
00002662  6000 EA0C               2464      BRA SHELL
00002666                          2465  
00002666                          2466  ALERR:
00002666  48E7 8040               2467      MOVEM.L A1/D0,-(SP)
0000266A  43F8 390E               2468      LEA ALERR_TEXT,A1
0000266E  700D                    2469      MOVE.L #13,D0
00002670  4E4F                    2470      TRAP #15
00002672  4CDF 0201               2471      MOVEM.L (SP)+,A1/D0
00002676  2E7C 01000000           2472      MOVE.L #$01000000,SP
0000267C  6000 E9F2               2473      BRA SHELL
00002680                          2474      
00002680                          2475  FLERR:
00002680  48E7 8040               2476      MOVEM.L A1/D0,-(SP)
00002684  43F8 392A               2477      LEA FLERR_TEXT,A1
00002688  700D                    2478      MOVE.L #13,D0
0000268A  4E4F                    2479      TRAP #15
0000268C  4CDF 0201               2480      MOVEM.L (SP)+,A1/D0
00002690  2E7C 01000000           2481      MOVE.L #$01000000,SP
00002696  6000 E9D8               2482      BRA SHELL
0000269A                          2483      
0000269A                          2484  CHKERR:
0000269A  48E7 8040               2485      MOVEM.L A1/D0,-(SP)
0000269E  43F8 3946               2486      LEA CHKERR_TEXT,A1
000026A2  700D                    2487      MOVE.L #13,D0
000026A4  4E4F                    2488      TRAP #15
000026A6  4CDF 0201               2489      MOVEM.L (SP)+,A1/D0
000026AA  2E7C 01000000           2490      MOVE.L #$01000000,SP
000026B0  6000 E9BE               2491      BRA SHELL
000026B4                          2492  
000026B4                          2493  
000026B4                          2494  
000026B4                          2495  ****************************COMMON SUBROUTINES NEEDED**********************************
000026B4                          2496  
000026B4                          2497  
000026B4                          2498  *--------------------------------------------------------------------------------------*
000026B4  43F8 3755               2499  ERRORSR:        LEA   ERROR,A1    ;load message
000026B8  323C 002C               2500                  MOVE.W  #44,D1
000026BC  7000                    2501                  MOVE.L  #0,D0
000026BE  4E4F                    2502                  TRAP    #15
000026C0  6000 EA34               2503                  BRA     RESTORE
000026C4                          2504  *--------------------------------------------------------------------------------------*
000026C4                          2505  ASCII_TO_BCD:   *Number passed via D3 byte size only(to be expected)*
000026C4  B67C 0046               2506                  CMP #$46,D3
000026C8  6EEA                    2507                  BGT ERRORSR
000026CA  B67C 0040               2508                  CMP #$40,D3
000026CE  6E00 000A               2509                  BGT UPPER
000026D2  0483 00000030           2510                  SUBI.L  #$30,D3
000026D8  4E75                    2511                  RTS
000026DA  0483 00000031           2512  UPPER:          SUBI.L  #$31,D3 ;If ASCII number is A-F
000026E0  4E75                    2513                  RTS
000026E2                          2514  *--------------------------------------------------------------------------------------*
000026E2                          2515  
000026E2                          2516  BCD_TO_HEX:     *Number passed via D3 accepts BYTE ONLY*
000026E2  2803                    2517                  MOVE.L  D3,D4   
000026E4  2A03                    2518                  MOVE.L  D3,D5
000026E6  0284 000000F0           2519                  ANDI.L  #240,D4 ;upper byte
000026EC  0285 0000000F           2520                  ANDI.L  #15,D5  ;lower byte
000026F2  E89C                    2521                  ROR.L   #4,D4   ;get bits into correct place
000026F4  C8FC 000A               2522                  MULU    #10,D4  ;multiply by its tens place
000026F8  4283                    2523                  CLR.L   D3
000026FA  D684                    2524                  ADD.L   D4,D3
000026FC  D685                    2525                  ADD.L   D5,D3
000026FE  4E75                    2526                  RTS
00002700                          2527  *--------------------------------------------------------------------------------------*                
00002700                          2528  ASCII_ADDRESS:   *Address to be converted from ascii to hex passed through A2 and A3*
00002700                          2529                   *Returned in D5                                                    *
00002700  4283                    2530                  CLR.L   D3
00002702  4285                    2531                  CLR.L   D5
00002704  220A                    2532                  MOVE.L   A2,D1
00002706  200B                    2533                  MOVE.L   A3,D0
00002708  9081                    2534                  SUB.L   D1,D0   ;store the difference in D0
0000270A  7800                    2535                  MOVE.L  #0,D4   ;set up 10's place counter
0000270C  5380                    2536                  SUBI.L  #1,D0
0000270E  B07C 0000               2537  PLACECOUNTER:   CMP     #0,D0
00002712  6700 0008               2538                  BEQ     CONVERTADDRESS
00002716  5884                    2539                  ADDI.L  #4,D4
00002718  5380                    2540                  SUBI.L  #1,D0
0000271A  60F2                    2541                  BRA     PLACECOUNTER
0000271C  B6CA                    2542  CONVERTADDRESS  CMP     A2,A3
0000271E  6700 001E               2543                  BEQ     ADDRESSDONE
00002722  4283                    2544                  CLR.L   D3
00002724  161A                    2545                  MOVE.B  (A2)+,D3
00002726  48E7 EC30               2546                  MOVEM.L A2-A3/D0-D2/D4-D5,-(SP)   ;so regs dont get destroyed
0000272A  4EB8 26C4               2547                  JSR     ASCII_TO_BCD
0000272E  4EB8 26E2               2548                  JSR     BCD_TO_HEX
00002732  4CDF 0C37               2549                  MOVEM.L (SP)+,A2-A3/D0-D2/D4-D5
00002736  E9BB                    2550                  ROL.L     D4,D3
00002738  5984                    2551                  SUBI.L  #4,D4
0000273A  DA83                    2552                  ADD.L     D3,D5   ;get total
0000273C  60DE                    2553                  BRA     CONVERTADDRESS
0000273E  4E75                    2554  ADDRESSDONE     RTS
00002740                          2555  
00002740                          2556  *--------------------------------------------------------------------------------------*
00002740                          2557  HEXTOASCII: *Result returned in address buffer from A2 to A3, HEX number passed*
00002740                          2558              *through D3*
00002740  4284                    2559              CLR.L   D4
00002742  4285                    2560              CLR.L   D5
00002744  247C 00003A00           2561              MOVE.L  #$3A00,A2
0000274A  267C 00003A32           2562              MOVE.L  #$3A32,A3
00002750                          2563  KEEP_CONVERTING:
00002750  1803                    2564              MOVE.B  D3,D4  
00002752  1A03                    2565              MOVE.B  D3,D5 
00002754  E08B                    2566              LSR.L   #8,D3   ;prepare for next byte
00002756  0284 0000000F           2567              ANDI.L  #15,D4   ;get lower byte
0000275C  0285 000000F0           2568              ANDI.L  #240,D5 ;get upper byte'
00002762  E85D                    2569              ROR     #4,D5   ;move D5 into position
00002764  B83C 0009               2570              CMP.B     #$9,D4
00002768  6E00 000C               2571              BGT     A_TO_F
0000276C  0684 00000030           2572              ADDI.L  #$30,D4
00002772  6000 0008               2573              BRA     NEXTHEX
00002776  0684 00000037           2574  A_TO_F:     ADDI.L  #$37,D4
0000277C  BA3C 0009               2575  NEXTHEX:    CMP.B     #$9,D5
00002780  6E00 000C               2576              BGT     A_TO_F2
00002784  0685 00000030           2577              ADDI.L  #$30,D5
0000278A  6000 0008               2578              BRA     PUTBUFFER
0000278E  0685 00000037           2579  A_TO_F2:    ADDI.L  #$37,D5
00002794  1704                    2580  PUTBUFFER:  MOVE.B  D4,-(A3)
00002796  1705                    2581              MOVE.B  D5,-(A3)
00002798  B6CA                    2582              CMP      A2,A3
0000279A  66B4                    2583              BNE      KEEP_CONVERTING
0000279C  0C12 0030               2584  RID_ZEROS:  CMP.B   #$30,(A2)
000027A0  6700 0006               2585              BEQ     ADD
000027A4  6000 0006               2586              BRA     HEXASCIIDONE
000027A8  528A                    2587  ADD:        ADD.L   #1,A2   ;increment to find start of string
000027AA  60F0                    2588              BRA     RID_ZEROS
000027AC                          2589  HEXASCIIDONE:   
000027AC  267C 00003A32           2590              MOVE.L  #$3A32,A3    ;end of original number
000027B2  B7CA                    2591              CMP.L   A2,A3
000027B4  6700 0006               2592              BEQ     ZEROS
000027B8  6000 0004               2593              BRA     NOTZEROS
000027BC  518A                    2594  ZEROS       SUB.L   #8,A2               
000027BE  4E75                    2595  NOTZEROS    RTS
000027C0                          2596  *--------------------------------------------------------------------------------------*
000027C0  43F8 3781               2597  UNKNOWNCMD:     LEA   ERROR1,A1    ;load message
000027C4  323C 0015               2598                  MOVE.W  #21,D1
000027C8  7000                    2599                  MOVE.L  #0,D0
000027CA  4E4F                    2600                  TRAP    #15
000027CC  6000 E928               2601                  BRA     RESTORE
000027D0                          2602  
000027D0                          2603  
000027D0                          2604  NEXT:   ;for debugging single commands
000027D0                          2605              
000027D0                          2606              
000027D0                          2607              
000027D0                          2608              
000027D0                          2609  
000027D0                          2610  
000027D0                          2611         END    START        

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
A0ACCOUNTFORZEROS   235A
A0DONTWORRY         235E
A1ACCOUNTFORZEROS   2386
A1DONTWORRY         238A
A2ACCOUNTFORZEROS   23B2
A2DONTWORRY         23B6
A3ACCOUNTFORZEROS   23DE
A3DONTWORRY         23E2
A4ACCOUNTFORZEROS   240A
A4DONTWORRY         240E
A5ACCOUNTFORZEROS   2436
A5DONTWORRY         243A
A6ACCOUNTFORZEROS   2462
A6DONTWORRY         2466
ACMP                1BB2
ADD                 27A8
ADDRESSDONE         273E
AERR                25AA
AERR_TEXT           3887
AFADDCONV           1B8C
AGETFIRSTADDRESS    1B7A
AGETSECADDRESS      1B9A
ALERR               2666
ALERR_TEXT          390E
ARESETLOOP          1BB0
ASADDCONV           1BA4
ASCEND              1B6A
ASCII_ADDRESS       2700
ASCII_TO_BCD        26C4
ASWAP               1BC0
A_TO_F              2776
A_TO_F2             278E
BA                  3966
BCD_TO_HEX          26E2
BERR                253C
BERR_TEXT           386F
BF                  1EFA
BFGETENDADDRONE     1F18
BFGETENDDATA        1EFE
BFGETLASTEND        1F3E
BFNEXTADDR          1F08
BFNEXTADDRTWO       1F22
BFTEST              11C0
BLCKTEST            1134
BMOV                1F70
BMOVDONE            1FFA
BMOVTEST            119E
BSCH                20D4
BSCH1               37F7
BSCH2               37FD
BSCH3               380F
BSCHENDDATA         20D8
BSCHFADDEND         20F8
BSCHFIRSTADD        20E2
BSCHSECONDADD       2102
BSCHSECONDFIND      2110
BSCHTEST            115A
BTST                1FFE
BTST1               379A
BTST2               37AE
BTST3               37BF
BTST4               37D1
BTST5               37DC
BTSTDATALOOP        204C
BTSTGETENDADDRONE   201C
BTSTGETENDDATA      2002
BTSTGETLASTEND      2036
BTSTNEXTADDR        200C
BTSTNEXTADDRTWO     2026
BTSTTEST            117C
BUFFER              3000
BYTEBSCH            2142
CHKERR              269A
CHKERR_TEXT         3946
COMPLETE            20C6
COMPUTATION         1AFE
COMPUTEFIRSTADD     1F80
COMPUTEFOURTHADDRESS  1FC8
COMPUTESECONDADDRESS  1F98
COMPUTETHIRDADDRESS  1FB0
CONVERT             1AE2
CONVERTADDRESS      271C
CONVERTMINUS1       1AE0
D0ACCOUNTFORZEROS   21FA
D0DONTWORRY         21FE
D1ACCOUNTFORZEROS   2226
D1DONTWORRY         222A
D2ACCOUNTFORZEROS   2252
D2DONTWORRY         2256
D3ACCOUNTFORZEROS   227E
D3DONTWORRY         2282
D4ACCOUNTFORZEROS   22AA
D4DONTWORRY         22AE
D5ACCOUNTFORZEROS   22D6
D5DONTWORRY         22DA
D6ACCOUNTFORZEROS   2302
D6DONTWORRY         2306
D7ACCOUNTFORZEROS   232E
D7DONTWORRY         2332
DATALOOP            1F62
DATATRANSFER        1FF0
DCMP                1C10
DEBUG               3797
DEFAULT             1C60
DESCEND             1BC8
DF                  21D8
DFADDCONV           1BEA
DFTST               11CE
DGETFIRSTADDRESS    1BD8
DGETSECADDRESS      1BF8
DISPLOOP            1A5C
DONEASCEND          1C26
DONEDESCEND         1C26
DRESETLOOP          1C0E
DSADDCONV           1C02
DSWAP               1C1E
ECHO                130A
ECHOTEST            110E
EEND                130C
EFOUND              1316
ENDBF               1F6C
ENDBSCH             21B6
ENDCONVERT          1B10
ENDLP               1EF6
ENDPARSE            1CFE
ENDPARSEL           1EEE
ENDPARSEW           1DD8
ENDPTRMM            1C30
ENTER               1D00
ENTERL              1EF0
ENTERW              1DDA
ERROR               3755
ERROR1              3781
ERRORSR             26B4
EXECUTE             21C8
FAIL                2064
FINDEND             19C8
FINDEND1            1A1E
FINDEND2            1A2E
FINDLASTNUM         1AD6
FINDNEXT            1A28
FIRSTADDRESS        1F76
FLERR               2680
FLERR_TEXT          392A
FONT                1090000
FORMATGOOD          1CA6
FORMATGOOD1         1D60
FORMATGOOD2         1D7E
FORMATGOOD3         1E3A
FORMATGOOD4         1E58
FORMATGOOD5         1E76
FORMATGOOD6         1E94
FOUNDB              216C
FOUNDL              217C
FOUNDW              2174
FOURTHADDRESS       1FBE
GGETEND             21BE
GO                  21BA
GOBACK              1772
GOTST               121C
GREEN               FF00
HELP                1778
HELPORHXDC          1234
HELPTST             124A
HEXASCIIDONE        27AC
HEXTOASCII          2740
HIGHHEX             1AFA
HIGHHEXMM           1CEE
HIGHHEXMML          1EDC
HIGHHEXMMW          1DC6
HTXT                3063
HTXT1               3074
HTXT10              35E5
HTXT11              3622
HTXT12              365A
HTXT13              369C
HTXT14              36CF
HTXT15              3716
HTXT1A              30BF
HTXT1B              30FC
HTXT2               3110
HTXT3               315B
HTXT3A              31A0
HTXT3B              31D9
HTXT3C              31ED
HTXT3D              3202
HTXT3E              321F
HTXT4               3252
HTXT4A              3299
HTXT4B              32DE
HTXT4C              32F9
HTXT4D              3317
HTXT4E              3336
HTXT5               335A
HTXT5A              33A0
HTXT6               33A9
HTXT6A              33EF
HTXT6B              3437
HTXT7               345D
HTXT7A              34A1
HTXT7B              34E9
HTXT8               3501
HTXT8A              3548
HTXT9               3570
HTXT9A              35B8
HXDC                1AB6
HXDCTEST            12C8
IERR                2618
IERR_TEXT           38A4
IR                  396B
KEEP_CONVERTING     2750
LONG                1DE0
LONGBSCH            215E
MDSPCTEST           1298
MEMCONT             19D2
MEMDISP             1A14
MEMNEXT             1A38
MEMSET              19C0
MEMTEST             126C
MM                  1C2A
MMSPCTEST           12BA
MODIFYLOOP          1C74
MODIFYLOOPL         1DF4
MODIFYLOOPW         1D1A
MODIFYREGS          1324
MODIFYREGTEST       12F4
MRA                 136A
MRA0                15A8
MRA1                15E8
MRA2                1628
MRA3                1668
MRA4                16A8
MRA5                16E8
MRA6                1728
MRD                 1324
MRD0                13A8
MRD1                13E8
MRD2                1428
MRD3                1468
MRD4                14A8
MRD5                14E8
MRD6                1528
MRD7                1568
MRDFINDDATA         1768
MSSPCTEST           128A
NEXT                27D0
NEXTHEX             277C
NEXTMMSTEP          1CF2
NEXTMMSTEPL         1EE0
NEXTMMSTEPW         1DCA
NOTZEROS            27BE
OUTPUTBUFF          3050
OUTPUTNUM           1B2E
PARSELOOP           1CD6
PARSELOOPL          1EC4
PARSELOOPW          1DAE
PCACCOUNTFORZEROS   251A
PCDONTWORRY         251E
PERR                2632
PERR_TEXT           38CD
PLACECOUNTER        270E
PROMPT              3058
PUTBUFFER           2794
RA0                 3840
RA1                 3844
RA2                 3848
RA3                 384C
RA4                 3850
RA5                 3854
RA6                 3858
RD0                 3820
RD1                 3824
RD2                 3828
RD3                 382C
RD4                 3830
RD5                 3834
RD6                 3838
RD7                 383C
READ                2056
RESTORE             10F6
RID_ZEROS           279C
RPC                 3867
RSR                 386B
RSS                 385C
RUS                 3863
SECONDADDRESS       1F8E
SECONDLOOP          1A94
SHELL               1070
SIZECHECK           1C2E
SORTTEST            11E6
SORTW               1B44
SPACE               3796
SRACCOUNTFORZEROS   24C2
SRDONTWORRY         24C6
SSACCOUNTFORZEROS   24EE
SSDONTWORRY         24F2
SSW                 3960
START               1000
STOREDATA           1F48
STOREDATABTST       2040
SUCCESSTEXT         2180
TESTOP              211A
THIRDADDRESS        1FA6
UNKNOWNCMD          27C0
UPPER               26DA
USPACCOUNTFORZEROS  2494
USPDONTWORRY        2498
WORD                1D06
WORDBSCH            2150
X                   1C26
ZEROS               27BC
ZERR                264C
ZERR_TEXT           38EB

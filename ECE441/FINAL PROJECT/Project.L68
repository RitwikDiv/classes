00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.02
Created On: 4/25/2015 1:43:38 AM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :  Monitor Project
00000000                             3  * Written by :  Adam Sumner 
00000000                             4  * Date       :  4/28/2015
00000000                             5  * Description:  Monitor Final Project
00000000                             6  *-----------------------------------------------------------
00000000                             7  
00000000                             8  
00000000                             9  *---------------DISCLAIMER!-------------------------*
00000000                            10  *Subroutines are not as optimized as they should be!*
00000000                            11  *Things such as checking for spaces, getting addresses, etc. *
00000000                            12  *can easily be their own subroutines to save code space!*
00000000                            13  *Luckily code size is not a huge concern*
00000000                            14  *This is why there are no plans to optimize in the future*
00000000                            15  
00000000                            16  
00000000                            17  
00003000                            18      ORG    $3000
00003000                            19      
00003000                            20  BUFFER        DS.B      80              ;space for command storage 
00003050                            21  OUTPUTBUFF    DS.B      8               ;to output numbers easily
00003058= 4D 4F 4E 49 54 4F ...     22  PROMPT        DC.B      'MONITOR441>'   ;prompt definition
00003063                            23  
00003063                            24  *Help text*
00003063= 4C 69 73 74 20 6F ...     25  HTXT          DC.B      'List of Commands:'
00003074= 4D 44 53 50 20 3C ...     26  HTXT1         DC.B      'MDSP <address1> <address2> - Memory Display: Outputs the address and memory' 
000030BF= 63 6F 6E 74 65 6E ...     27  HTXT1A        DC.B      'contents from <address1> to <address2> amd from <address1> to' 
000030FC= 3C 61 64 64 72 65 ...     28  HTXT1B        DC.B      '<address2 + 16bytes>'
00003110= 48 58 44 45 43 20 ...     29  HTXT2         DC.B      'HXDEC <num> - Conversion: Converts a hexadecimal number to a decimal number'
0000315B= 53 4F 52 54 57 20 ...     30  HTXT3         DC.B      'SORTW <option> <address1> <address2> - Sort: Sorts a block of memory.'
000031A0= 3C 6F 70 74 69 6F ...     31  HTXT3A        DC.B      '<option> specifies the order in which the list is sorted:'
000031D9= 3B 41 20 2D 20 41 ...     32  HTXT3B        DC.B      ';A - Ascending Order'
000031ED= 3B 44 20 2D 20 44 ...     33  HTXT3C        DC.B      ';D - Descending Order'
00003202= 2D 28 64 65 66 61 ...     34  HTXT3D        DC.B      '-(default) - Descending Order'
0000321F= 53 6F 72 74 73 20 ...     35  HTXT3E        DC.B      'Sorts block of memory from <address1> to <address2>'
00003252= 4D 4D 20 3C 6F 70 ...     36  HTXT4         DC.B      'MM <option> <address> - Memory Modify: Display memory and, as required,'
00003299= 6D 6F 64 69 66 79 ...     37  HTXT4A        DC.B      'modify data or enter new data. <option> specifies the number of bytes'
000032DE= 64 69 73 70 6C 61 ...     38  HTXT4B        DC.B      'displayed for each address:'
000032F9= 2D 28 64 65 66 61 ...     39  HTXT4C        DC.B      '-(default) - Displays one byte'
00003317= 3B 57 20 2D 20 44 ...     40  HTXT4D        DC.B      ';W - Displays one word(2 bytes)'
00003336= 3B 4C 20 2D 20 44 ...     41  HTXT4E        DC.B      ';L - Displays one long word(4 bytes)'
0000335A= 4D 53 20 3C 64 61 ...     42  HTXT5         DC.B      'MS <data> <address> - Memory Set: Alters memory by setting <data> into' 
000033A0= 3C 61 64 64 72 65 ...     43  HTXT5A        DC.B      '<address>'
000033A9= 42 46 20 3C 64 61 ...     44  HTXT6         DC.B      'BF <data> <address1> <address2> - Block Fill: Fills memory starting at' 
000033EF= 3C 61 64 64 72 65 ...     45  HTXT6A        DC.B      '<address1> to <address2>. Both must be even addresses. This command only'
00003437= 77 6F 72 6B 73 20 ...     46  HTXT6B        DC.B      'works with a word-sized <data> pattern'
0000345D= 42 4D 4F 56 20 3C ...     47  HTXT7         DC.B      'BMOV <address1> <address2> <address3> <address4> - Block Move: Moves' 
000034A1= 61 20 64 75 70 6C ...     48  HTXT7A        DC.B      'a duplicate block of memory from <address1> to <address2> into the block'
000034E9= 3C 61 64 64 72 65 ...     49  HTXT7B        DC.B      '<address3> to <address4>'
00003501= 42 54 53 54 20 3C ...     50  HTXT8         DC.B      'BTST <data> <address1> <address2> - Block Test: Tests a block of memory'
00003548= 66 72 6F 6D 20 3C ...     51  HTXT8A        DC.B      'from <address1> to <address2> for <data>'
00003570= 42 53 43 48 20 3C ...     52  HTXT9         DC.B      'BSCH <data> <address1> <address2> - Block Search: Searches for <data> in'
000035B8= 69 6E 20 6D 65 6D ...     53  HTXT9A        DC.B      'in memory block from <address1> to <address2>'
000035E5= 47 4F 20 3C 61 64 ...     54  HTXT10        DC.B      'GO <address> - Execute Program: Executes program at <address>'
00003622= 44 46 20 2D 20 44 ...     55  HTXT11        DC.B      'DF - Display Formatted Registers: Displays all registers'
0000365A= 48 45 4C 50 20 2D ...     56  HTXT12        DC.B      'HELP - Help: Displays all available commands and their description'
0000369C                            57  
0000369C                            58  *Error Message*
0000369C= 45 52 52 4F 52 3A ...     59  ERROR         DC.B      'ERROR: TRY COMMAND AGAIN WITH CORRECT SYNTAX'
000036C8                            60  
000036C8                            61  *Space*
000036C8= 20                        62  SPACE         DC.B      ' '
000036C9                            63  
000036C9                            64  *Debugger Print Statement*
000036C9= 57 49 4E                  65  DEBUG         DC.B      'WIN'      
000036CC                            66  
000036CC                            67  *BTST Text*
000036CC= 4E 75 6D 62 65 72 ...     68  BTST1         DC.B      'Number written was: '
000036E0= 4E 75 6D 62 65 72 ...     69  BTST2         DC.B      'Number read was: '
000036F1= 42 6C 6F 63 6B 20 ...     70  BTST3         DC.B      'Block Test PASSES!'
00003703= 46 41 49 4C 55 52 ...     71  BTST4         DC.B      'FAILURE!!!!'  
0000370E= 45 72 72 6F 72 20 ...     72  BTST5         DC.B      'Error Occurred at address: '      
00003729                            73  
00003729                            74  *BSCH Text*
00003729= 44 61 74 61 3A 20         75  BSCH1         DC.B      'Data: '
0000372F= 46 6F 75 6E 64 20 ...     76  BSCH2         DC.B      'Found at address: '
00003741= 50 61 74 74 65 72 ...     77  BSCH3         DC.B      'Pattern not found'
00003752                            78  
00003752                            79  *DF Text*
00003752= 44 30 3A 20               80  RD0            DC.B      'D0: '
00003756= 44 31 3A 20               81  RD1            DC.B      'D1: '
0000375A= 44 32 3A 20               82  RD2            DC.B      'D2: '
0000375E= 44 33 3A 20               83  RD3            DC.B      'D3: '
00003762= 44 34 3A 20               84  RD4            DC.B      'D4: '
00003766= 44 35 3A 20               85  RD5            DC.B      'D5: '
0000376A= 44 36 3A 20               86  RD6            DC.B      'D6: '
0000376E= 44 37 3A 20               87  RD7            DC.B      'D7: '
00003772                            88  
00003772= 41 30 3A 20               89  RA0            DC.B      'A0: '
00003776= 41 31 3A 20               90  RA1            DC.B      'A1: '
0000377A= 41 32 3A 20               91  RA2            DC.B      'A2: '
0000377E= 41 33 3A 20               92  RA3            DC.B      'A3: '
00003782= 41 34 3A 20               93  RA4            DC.B      'A4: '
00003786= 41 35 3A 20               94  RA5            DC.B      'A5: '
0000378A= 41 36 3A 20               95  RA6            DC.B      'A6: '
0000378E                            96  
0000378E= 53 53 2F 41 37 3A 20      97  RSS            DC.B      'SS/A7: '
00003795= 55 53 3A 20               98  RUS            DC.B      'US: '
00003799= 50 43 3A 20               99  RPC            DC.B      'PC: '
0000379D= 53 52 3A 20              100  RSR            DC.B      'SR: '
000037A1                           101  
000037A1                           102  *Color definition for Font*
000037A1  =01090000                103  FONT        EQU     $01090000  
000037A1  =0000FF00                104  GREEN       EQU     $0000FF00
000037A1                           105  
00001000                           106      ORG     $1000
00001000                           107  START:  
00001000                           108          *Makes it look like a REAL terminal*
00001000  223C 0000FF00            109          MOVE.L  #GREEN,D1
00001006  243C 01090000            110          MOVE.L  #FONT,D2
0000100C  103C 0015                111          MOVE.B  #21,D0
00001010  4E4F                     112          TRAP    #15
00001012  4281                     113          CLR.L   D1
00001014  4282                     114          CLR.L   D2
00001016  4200                     115          CLR.B   D0
00001018                           116  
00001018                           117  *--------------------------------------------------------------------------------------*
00001018  4878 1018                118  SHELL:      PEA     *           ;save PC on Stack for DF
0000101C  588F                     119              ADD.L   #4,SP       ;get original value of stack pointer
0000101E  2F4F FFF8                120              MOVE.L  SP,-8(SP)   ;save it
00001022  DFFC FFFFFFF8            121              ADD.L   #-8,SP      ;update Stack position
00001028  40E7                     122              MOVE    SR,-(SP)    ;save Status register for use with DF
0000102A  2F0E                     123              MOVE.L  A6,-(SP)    ;temp save
0000102C  4E6E                     124              MOVE    USP,A6      ;for use with DF command
0000102E  2F0E                     125              MOVE.L  A6,-(SP)    ;store USP to STACK
00001030  588F                     126              ADD.L   #4,SP       
00001032  2C57                     127              MOVE.L  (SP),A6    ;restore original value
00001034  2F67 0004                128              MOVE.L  -(SP),4(SP)  ;move correct value to correct stack position
00001038  588F                     129              ADD.L   #4,SP       ;point stack to CORRECT PLACE
0000103A                           130              
0000103A                           131  
0000103A  48E7 FFFE                132              MOVEM.L D0-D7/A0-A6,-(SP)  ;save initial values of registers
0000103E  48E7 FFFE                133              MOVEM.L D0-D7/A0-A6,-(SP)  ;unorthodox implementation to save registers when using DF command
00001042                           134              
00001042                           135              
00001042                           136              
00001042                           137              
00001042                           138                
00001042  43F8 3058                139              LEA  PROMPT,A1      ;Load message            
00001046  323C 000B                140              MOVE.W  #11,D1      ;load n bytes
0000104A  103C 0001                141              MOVE.B  #1,D0       ;set up trap call
0000104E  4E4F                     142              TRAP    #15
00001050  43F8 3000                143              LEA     BUFFER,A1   ;set up storage for command
00001054  103C 0002                144              MOVE.B  #2,D0       ;load input trap call
00001058  4E4F                     145              TRAP    #15
0000105A  0C11 0048                146              CMP.B   #$48,(A1)   ;check for help/hxdc
0000105E  6700 0174                147              BEQ     HELPORHXDC
00001062  0C11 004D                148              CMP.B   #$4D,(A1)   ;check for memory command
00001066  6700 01A4                149              BEQ     MEMTEST
0000106A  0C11 0047                150              CMP.B   #$47,(A1)   ;check for go
0000106E  6700 014C                151              BEQ     GOTST
00001072  0C11 0044                152              CMP.B   #$44,(A1)   ;check for df
00001076  6700 00F6                153              BEQ     DFTST
0000107A  0C11 0042                154              CMP.B   #$42,(A1)   ;check for blck command
0000107E  6700 0054                155              BEQ     BLCKTEST
00001082  0C11 0053                156              CMP.B   #$53,(A1)   ;check for sort command
00001086  6700 00FE                157              BEQ     SORTTEST
0000108A  0C11 0045                158              CMP.B   #$45,(A1)   ;check for echo command
0000108E  6700 001E                159              BEQ     ECHOTEST
00001092  6000 0F4A                160              BRA     ERRORSR
00001096  4CDF 7FFF                161  RESTORE:    MOVEM.L (SP)+,D0-D7/A0-A6
0000109A  4CDF 7FFF                162              MOVEM.L (SP)+,D0-D7/A0-A6 ;double restore because of DF hack workaround
0000109E  588F                     163              ADD.L   #4,SP       ;account for USP, it'll fix itself (it shouldn't be used)
000010A0                           164                                  ;EASY68k simulator starts in supervisor mode
000010A0  46DF                     165              MOVE    (SP)+,SR
000010A2  201F                     166              MOVE.L  (SP)+,D0    ;save stack cuz it'll get destroyed
000010A4  588F                     167              ADD.L   #4,SP       ;get rid of PC, itll fix itself
000010A6  2E40                     168              MOVE.L  D0,SP
000010A8  4280                     169              CLR.L   D0          ;no longer needed
000010AA                           170  
000010AA  6000 FF6C                171              BRA     SHELL
000010AE                           172  *--------------------------------------------------------------------------------------*
000010AE                           173  
000010AE  5289                     174  ECHOTEST:   ADD.L   #1,A1
000010B0  0C19 0043                175              CMP.B   #$43,(A1)+   ;C?
000010B4  6600 0F28                176              BNE     ERRORSR
000010B8  0C19 0048                177              CMP.B   #$48,(A1)+   ;H?
000010BC  6600 0F20                178              BNE     ERRORSR
000010C0  0C19 004F                179              CMP.B   #$4F,(A1)+   ;O?
000010C4  6600 0F18                180              BNE     ERRORSR
000010C8  0C19 0020                181              CMP.B   #$20,(A1)+   ;SPACE?
000010CC  6700 01BC                182              BEQ     ECHO
000010D0  6000 0F0C                183              BRA     ERRORSR
000010D4                           184  *--------------------------------------------------------------------------------------*
000010D4                           185  
000010D4                           186  
000010D4                           187  *--------------------------------------------------------------------------------------*
000010D4                           188  
000010D4  5289                     189  BLCKTEST:   ADD.L   #1,A1
000010D6  0C11 0046                190              CMP.B   #$46,(A1)   ;BF?
000010DA  6700 0084                191              BEQ     BFTEST
000010DE  0C11 004D                192              CMP.B   #$4D,(A1)   ;BMOV?
000010E2  6700 005A                193              BEQ     BMOVTEST
000010E6  0C11 0054                194              CMP.B   #$54,(A1)   ;BTST?
000010EA  6700 0030                195              BEQ     BTSTTEST
000010EE  0C11 0053                196              CMP.B   #$53,(A1)   ;BSCH?
000010F2  6700 0006                197              BEQ     BSCHTEST
000010F6  6000 0EE6                198              BRA     ERRORSR
000010FA                           199  *--------------------------------------------------------------------------------------*
000010FA                           200  
000010FA  5289                     201  BSCHTEST:   ADD.L   #1,A1
000010FC  0C11 0043                202              CMP.B   #$43,(A1)
00001100  6600 0EDC                203              BNE     ERRORSR
00001104  5289                     204              ADD.L   #1,A1
00001106  0C11 0048                205              CMP.B   #$48,(A1)
0000110A  6600 0ED2                206              BNE     ERRORSR
0000110E  5289                     207              ADD.L   #1,A1
00001110  0C11 0020                208              CMP.B   #$20,(A1)
00001114  6600 0EC8                209              BNE     ERRORSR
00001118  6000 0A5C                210              BRA     BSCH
0000111C                           211                        
0000111C                           212  *--------------------------------------------------------------------------------------*
0000111C                           213  
0000111C                           214  BTSTTEST:   
0000111C  5289                     215              ADD.L   #1,A1
0000111E  0C11 0053                216              CMP.B   #$53,(A1)
00001122  6600 0EBA                217              BNE     ERRORSR
00001126  5289                     218              ADD.L   #1,A1
00001128  0C11 0054                219              CMP.B   #$54,(A1)
0000112C  6600 0EB0                220              BNE     ERRORSR
00001130  5289                     221              ADD.L   #1,A1
00001132  0C11 0020                222              CMP.B   #$20,(A1)
00001136  6600 0EA6                223              BNE     ERRORSR
0000113A  6000 0964                224              BRA     BTST
0000113E                           225  
0000113E                           226  *--------------------------------------------------------------------------------------*
0000113E                           227  
0000113E  5289                     228  BMOVTEST:   ADD.L   #1,A1
00001140  0C11 004F                229              CMP.B   #$4F,(A1)
00001144  6600 0E98                230              BNE     ERRORSR
00001148  5289                     231              ADD.L   #1,A1
0000114A  0C11 0056                232              CMP.B   #$56,(A1)
0000114E  6600 0E8E                233              BNE     ERRORSR
00001152  5289                     234              ADD.L   #1,A1
00001154  0C11 0020                235              CMP.B   #$20,(A1)
00001158  6600 0E84                236              BNE     ERRORSR
0000115C  6000 08B4                237              BRA     BMOV
00001160                           238  *--------------------------------------------------------------------------------------*
00001160  5289                     239  BFTEST:     ADD.L   #1,A1
00001162  0C11 0020                240              CMP.B   #$20,(A1)
00001166  6600 0E76                241              BNE     ERRORSR
0000116A  6000 0830                242              BRA     BF
0000116E                           243  *--------------------------------------------------------------------------------------*
0000116E                           244  
0000116E  5289                     245  DFTST:      ADD.L   #1,A1
00001170  0C11 0046                246              CMP.B   #$46,(A1)
00001174  6600 0E68                247              BNE     ERRORSR
00001178  5289                     248              ADD.L   #1,A1
0000117A  0C11 0000                249              CMP.B   #$00,(A1)
0000117E  6600 0E5E                250              BNE     ERRORSR
00001182  6000 0AF6                251              BRA     DF
00001186                           252  *--------------------------------------------------------------------------------------*
00001186                           253  
00001186  5289                     254  SORTTEST:    ADD.L   #1,A1
00001188  0C11 004F                255              CMP.B   #$4F,(A1)   ;O?
0000118C  6600 0E50                256              BNE     ERRORSR
00001190  5289                     257               ADD.L   #1,A1
00001192  0C11 0052                258              CMP.B   #$52,(A1)   ;R?
00001196  6600 0E46                259              BNE     ERRORSR
0000119A  5289                     260              ADD.L   #1,A1
0000119C  0C11 0054                261              CMP.B   #$54,(A1)   ;T?
000011A0  6600 0E3C                262              BNE     ERRORSR
000011A4  5289                     263              ADD.L   #1,A1
000011A6  0C11 0057                264              CMP.B   #$57,(A1)   ;W?
000011AA  6600 0E32                265              BNE     ERRORSR
000011AE  5289                     266              ADD.L   #1,A1
000011B0  0C11 0020                267              CMP.B   #$20,(A1)
000011B4  6600 0E28                268              BNE     ERRORSR
000011B8                           269  
000011B8  6000 0480                270              BRA     SORTW
000011BC                           271  *--------------------------------------------------------------------------------------*
000011BC                           272  
000011BC  5289                     273  GOTST:      ADD.L   #1,A1
000011BE  0C11 004F                274              CMP.B   #$4F,(A1)
000011C2  6600 0E1A                275              BNE     ERRORSR
000011C6  5289                     276              ADD.L   #1,A1
000011C8  0C19 0020                277              CMP.B   #$20,(A1)+
000011CC  6600 0E10                278              BNE     ERRORSR
000011D0  6000 0A8A                279              BRA     GO
000011D4                           280  *--------------------------------------------------------------------------------------*
000011D4                           281  
000011D4  5289                     282  HELPORHXDC: ADD.L   #1,A1
000011D6  0C11 0045                283              CMP.B   #$45,(A1)   ;is it help?
000011DA  6700 000E                284              BEQ     HELPTST
000011DE  0C11 0058                285              CMP.B   #$58,(A1)   ;or is it hxdc
000011E2  6700 0084                286              BEQ     HXDCTEST
000011E6  6000 0DF6                287              BRA     ERRORSR     
000011EA                           288  *--------------------------------------------------------------------------------------*
000011EA                           289  
000011EA                           290  HELPTST:   
000011EA  5289                     291             ADD.L   #1,A1   ; check next char
000011EC  0C11 004C                292             CMP.B    #$4C,(A1) ;check for L
000011F0  6600 0DEC                293             BNE      ERRORSR
000011F4  5289                     294             ADD.L   #1,A1
000011F6  0C11 0050                295             CMP.B    #$50,(A1)   ;check for P
000011FA  6600 0DE2                296             BNE      ERRORSR
000011FE  5289                     297             ADD.L   #1,A1   ;check for anything else
00001200  0C11 0000                298             CMP.B    #$00,(A1)
00001204  6600 0DD8                299             BNE      ERRORSR
00001208  6000 009A                300             BRA      HELP
0000120C                           301              
0000120C                           302  
0000120C                           303   
0000120C                           304  *--------------------------------------------------------------------------------------*
0000120C                           305              
0000120C  5289                     306  MEMTEST:    ADD.L   #1,A1
0000120E  0C11 0053                307              CMP.B   #$53,(A1)
00001212  6700 0016                308              BEQ     MSSPCTEST
00001216  0C11 0044                309              CMP.B   #$44,(A1)
0000121A  6700 001C                310              BEQ     MDSPCTEST
0000121E  0C11 004D                311              CMP.B   #$4D,(A1)
00001222  6700 0036                312              BEQ     MMSPCTEST
00001226  6000 0DB6                313              BRA     ERRORSR
0000122A                           314              
0000122A  5289                     315  MSSPCTEST   ADD.L   #1,A1
0000122C  0C11 0020                316              CMP.B   #$20,(A1)
00001230  6700 0284                317              BEQ     MEMSET
00001234  6000 0DA8                318              BRA     ERRORSR
00001238                           319              
00001238                           320  MDSPCTEST:  
00001238  5289                     321              ADD.L   #1,A1
0000123A  0C11 0053                322              CMP.B   #$53,(A1)
0000123E  6600 0D9E                323              BNE     ERRORSR
00001242  5289                     324              ADD.L   #1,A1
00001244  0C11 0050                325              CMP.B   #$50,(A1)
00001248  6600 0D94                326              BNE     ERRORSR
0000124C  5289                     327              ADD.L   #1,A1
0000124E  0C11 0020                328              CMP.B   #$20,(A1)
00001252  6700 02B6                329              BEQ     MEMDISP          
00001256  6000 0D86                330              BRA     ERRORSR
0000125A                           331             
0000125A  5289                     332  MMSPCTEST:  ADD.L   #1,A1
0000125C  0C11 0020                333              CMP.B   #$20,(A1)
00001260  6700 04BE                334              BEQ     MM          
00001264  6000 0D78                335              BRA     ERRORSR
00001268                           336  *--------------------------------------------------------------------------------------*
00001268                           337  HXDCTEST:   
00001268  5289                     338              ADD.L   #1,A1
0000126A  0C11 0044                339              CMP.B   #$44,(A1)
0000126E  6600 0D6E                340              BNE     ERRORSR
00001272  5289                     341              ADD.L   #1,A1
00001274  0C11 0043                342              CMP.B   #$43,(A1)
00001278  6600 0D64                343              BNE     ERRORSR
0000127C  5289                     344              ADD.L   #1,A1
0000127E  0C11 0020                345              CMP.B   #$20,(A1)
00001282  6600 0D5A                346              BNE     ERRORSR
00001286  6000 0324                347              BRA     HXDC
0000128A                           348  *----------------------------USER DEFINED COMMANDS---------------------------------*
0000128A                           349  *--------------------------------------------------------------------------------------*
0000128A                           350  ECHO:
0000128A  2449                     351          MOVE.L  A1,A2   ;setup to find end of string
0000128C  0C1A 0000                352  EEND:   CMP.B   #$00,(A2)+
00001290  6700 0004                353          BEQ     EFOUND
00001294  60F6                     354          BRA     EEND
00001296                           355  EFOUND:
00001296  538A                     356          SUB.L   #1,A2   ;off by one
00001298  95C9                     357          SUB.L   A1,A2   ;find out how many bytes
0000129A  220A                     358          MOVE.L  A2,D1   ;place it for trap function
0000129C  7000                     359          MOVE.L  #0,D0
0000129E  4E4F                     360          TRAP    #15
000012A0                           361          
000012A0  6000 FDF4                362          BRA RESTORE
000012A4                           363  
000012A4                           364  
000012A4                           365  
000012A4                           366  
000012A4                           367  *----------------------------COMMAND DEFINITION START---------------------------------*
000012A4                           368  *--------------------------------------------------------------------------------------*
000012A4  43F8 3063                369  HELP:       LEA     HTXT,A1     ;list of commands test
000012A8  323C 0011                370              MOVE.W  #17,D1
000012AC  103C 0000                371              MOVE.B  #0,D0
000012B0  4E4F                     372              TRAP    #15
000012B2  323C 0000                373              MOVE.W  #0,D1       ;newline
000012B6  4E4F                     374              TRAP    #15
000012B8                           375              
000012B8  43F8 3074                376              LEA     HTXT1,A1    ;mem display command
000012BC  323C 004B                377              MOVE.W  #75,D1
000012C0  103C 0000                378              MOVE.B  #0,D0
000012C4  4E4F                     379              TRAP    #15
000012C6  43F8 30BF                380              LEA     HTXT1A,A1   ;mem display
000012CA  323C 003D                381              MOVE.W  #61,D1
000012CE  103C 0000                382              MOVE.B  #0,D0
000012D2  4E4F                     383              TRAP    #15
000012D4  43F8 30FC                384              LEA     HTXT1B,A1   ;mem display
000012D8  323C 0014                385              MOVE.W  #20,D1
000012DC  103C 0000                386              MOVE.B  #0,D0
000012E0  4E4F                     387              TRAP    #15
000012E2  323C 0000                388              MOVE.W  #0,D1       ;newline
000012E6  4E4F                     389              TRAP    #15
000012E8                           390              
000012E8  43F8 3110                391              LEA     HTXT2,A1    ;hxdec command text
000012EC  323C 004B                392              MOVE.W  #75,D1
000012F0  103C 0000                393              MOVE.B  #0,D0
000012F4  4E4F                     394              TRAP    #15
000012F6  123C 0000                395              MOVE.B  #0,D1       ;newline
000012FA  4E4F                     396              TRAP    #15
000012FC                           397              
000012FC  43F8 315B                398              LEA     HTXT3,A1    ;sort command text
00001300  323C 0045                399              MOVE.W  #69,D1
00001304  103C 0000                400              MOVE.B  #0,D0
00001308  4E4F                     401              TRAP    #15
0000130A  43F8 31A0                402              LEA     HTXT3A,A1    ;sort command text continued
0000130E  323C 0039                403              MOVE.W  #57,D1
00001312  103C 0000                404              MOVE.B  #0,D0
00001316  4E4F                     405              TRAP    #15
00001318  43F8 31D9                406              LEA     HTXT3B,A1    ;sort command text continued
0000131C  323C 0014                407              MOVE.W  #20,D1
00001320  103C 0000                408              MOVE.B  #0,D0
00001324  4E4F                     409              TRAP    #15
00001326  43F8 31ED                410              LEA     HTXT3C,A1    ;sort command text continued
0000132A  323C 0015                411              MOVE.W  #21,D1
0000132E  103C 0000                412              MOVE.B  #0,D0
00001332  4E4F                     413              TRAP    #15
00001334  43F8 3202                414              LEA     HTXT3D,A1    ;sort command text continued
00001338  323C 001D                415              MOVE.W  #29,D1
0000133C  103C 0000                416              MOVE.B  #0,D0
00001340  4E4F                     417              TRAP    #15
00001342  43F8 321F                418              LEA     HTXT3E,A1    ;sort command text continued
00001346  323C 0033                419              MOVE.W  #51,D1
0000134A  103C 0000                420              MOVE.B  #0,D0
0000134E  4E4F                     421              TRAP    #15
00001350  123C 0000                422              MOVE.B  #0,D1       ;newline
00001354  4E4F                     423              TRAP    #15
00001356                           424              
00001356  43F8 3252                425              LEA     HTXT4,A1    ;memory modify command text 
0000135A  323C 0047                426              MOVE.W  #71,D1
0000135E  103C 0000                427              MOVE.B  #0,D0
00001362  4E4F                     428              TRAP    #15
00001364  43F8 3299                429              LEA     HTXT4A,A1    ;mem modify command text continued
00001368  323C 0045                430              MOVE.W  #69,D1
0000136C  103C 0000                431              MOVE.B  #0,D0
00001370  4E4F                     432              TRAP    #15
00001372  43F8 32DE                433              LEA     HTXT4B,A1    ;mem modify command text continued
00001376  323C 001B                434              MOVE.W  #27,D1
0000137A  103C 0000                435              MOVE.B  #0,D0
0000137E  4E4F                     436              TRAP    #15
00001380  43F8 32F9                437              LEA     HTXT4C,A1    ;mem modify command text continued
00001384  323C 001E                438              MOVE.W  #30,D1
00001388  103C 0000                439              MOVE.B  #0,D0
0000138C  4E4F                     440              TRAP    #15
0000138E  43F8 3317                441              LEA     HTXT4D,A1    ;mem modify command text continued
00001392  323C 001F                442              MOVE.W  #31,D1
00001396  103C 0000                443              MOVE.B  #0,D0
0000139A  4E4F                     444              TRAP    #15
0000139C  43F8 3336                445              LEA     HTXT4E,A1    ;mem modify command text continued
000013A0  323C 0024                446              MOVE.W  #36,D1
000013A4  103C 0000                447              MOVE.B  #0,D0
000013A8  4E4F                     448              TRAP    #15
000013AA  123C 0000                449              MOVE.B  #0,D1
000013AE  4E4F                     450              TRAP    #15         ;newline
000013B0                           451              
000013B0  43F8 335A                452              LEA     HTXT5,A1    ;memory set command text 
000013B4  323C 0046                453              MOVE.W  #70,D1
000013B8  103C 0000                454              MOVE.B  #0,D0
000013BC  4E4F                     455              TRAP    #15
000013BE  43F8 33A0                456              LEA     HTXT5A,A1    ;memory set command text continued
000013C2  323C 0009                457              MOVE.W  #9,D1
000013C6  103C 0000                458              MOVE.B  #0,D0
000013CA  4E4F                     459              TRAP    #15
000013CC  123C 0000                460              MOVE.B  #0,D1       ;newline
000013D0  4E4F                     461              TRAP    #15
000013D2                           462              
000013D2  43F8 33A9                463              LEA     HTXT6,A1    ;block fill command text
000013D6  323C 0045                464              MOVE.W  #69,D1
000013DA  103C 0000                465              MOVE.B  #0,D0
000013DE  4E4F                     466              TRAP    #15
000013E0  43F8 33EF                467              LEA     HTXT6A,A1    ;block fill command text
000013E4  323C 0048                468              MOVE.W  #72,D1
000013E8  103C 0000                469              MOVE.B  #0,D0
000013EC  4E4F                     470              TRAP    #15
000013EE  43F8 3437                471              LEA     HTXT6B,A1    ;block fill command text
000013F2  323C 0026                472              MOVE.W  #38,D1
000013F6  103C 0000                473              MOVE.B  #0,D0
000013FA  4E4F                     474              TRAP    #15
000013FC  123C 0000                475              MOVE.B  #0,D1
00001400  4E4F                     476              TRAP    #15         ;newline
00001402                           477              
00001402                           478              
00001402  43F8 345D                479              LEA     HTXT7,A1    ;block move command text
00001406  323C 0044                480              MOVE.W  #68,D1
0000140A  103C 0000                481              MOVE.B  #0,D0
0000140E  4E4F                     482              TRAP    #15
00001410  43F8 34A1                483              LEA     HTXT7A,A1    ;block move command text
00001414  323C 0048                484              MOVE.W  #72,D1
00001418  103C 0000                485              MOVE.B  #0,D0
0000141C  4E4F                     486              TRAP    #15
0000141E  43F8 34E9                487              LEA     HTXT7B,A1    ;block move command text
00001422  323C 0018                488              MOVE.W  #24,D1
00001426  103C 0000                489              MOVE.B  #0,D0
0000142A  4E4F                     490              TRAP    #15
0000142C  123C 0000                491              MOVE.B  #0,D1       ;newline
00001430  4E4F                     492              TRAP    #15
00001432                           493              
00001432  43F8 3501                494              LEA     HTXT8,A1    ;block test command text
00001436  323C 0047                495              MOVE.W  #71,D1
0000143A  103C 0000                496              MOVE.B  #0,D0
0000143E  4E4F                     497              TRAP    #15
00001440  43F8 3548                498              LEA     HTXT8A,A1    ;block test command text
00001444  323C 0028                499              MOVE.W  #40,D1
00001448  103C 0000                500              MOVE.B  #0,D0
0000144C  4E4F                     501              TRAP    #15
0000144E  123C 0000                502              MOVE.B  #0,D1       ;newline
00001452  4E4F                     503              TRAP    #15
00001454                           504              
00001454  43F8 3570                505              LEA     HTXT9,A1    ;block search command text
00001458  323C 0046                506              MOVE.W  #70,D1
0000145C  103C 0000                507              MOVE.B  #0,D0
00001460  4E4F                     508              TRAP    #15
00001462  43F8 35B8                509              LEA     HTXT9A,A1    ;block search command text
00001466  323C 002D                510              MOVE.W  #45,D1
0000146A  103C 0000                511              MOVE.B  #0,D0
0000146E  4E4F                     512              TRAP    #15
00001470  123C 0000                513              MOVE.B  #0,D1       ;newline
00001474  4E4F                     514              TRAP    #15
00001476                           515              
00001476  43F8 35E5                516              LEA     HTXT10,A1    ;go command text
0000147A  323C 003D                517              MOVE.W  #61,D1
0000147E  103C 0000                518              MOVE.B  #0,D0
00001482  4E4F                     519              TRAP    #15
00001484  123C 0000                520              MOVE.B  #0,D1      ;newline
00001488  4E4F                     521              TRAP    #15
0000148A                           522  
0000148A  43F8 3622                523              LEA     HTXT11,A1   ;df command text   
0000148E  323C 0038                524              MOVE.W  #56,D1
00001492  103C 0000                525              MOVE.B  #0,D0
00001496  4E4F                     526              TRAP    #15
00001498  123C 0000                527              MOVE.B  #0,D1
0000149C  4E4F                     528              TRAP    #15
0000149E                           529              
0000149E  43F8 365A                530              LEA     HTXT12,A1   ;help command text
000014A2  323C 0042                531              MOVE.W  #66,D1
000014A6  103C 0000                532              MOVE.B  #0,D0
000014AA  4E4F                     533              TRAP    #15
000014AC  123C 0000                534              MOVE.B  #0,D1       ;newline
000014B0  4E4F                     535              TRAP    #15   
000014B2  6000 FBE2                536              BRA     RESTORE  
000014B6                           537  *--------------------------------------------------------------------------------------*
000014B6                           538  *Fix ASCII String input? ask in lab*
000014B6  45F8 3000                539  MEMSET:     LEA     BUFFER,A2
000014BA  568A                     540              ADD.L   #3,A2
000014BC  264A                     541              MOVE.L  A2,A3   ;set up to find end
000014BE  0C1B 0000                542  FINDEND:    CMP.B   #$00,(A3)+
000014C2  6700 0004                543              BEQ     MEMCONT
000014C6  60F6                     544              BRA     FINDEND
000014C8  538B                     545  MEMCONT:    SUB.L  #1,A3   ;get rid of off by one erro
000014CA  121A                     546              MOVE.B  (A2)+,D1
000014CC  1412                     547              MOVE.B  (A2),D2
000014CE  1601                     548              MOVE.B  D1,D3       ;pass value to subroutine
000014D0  4EB9 00001FEE            549              JSR     ASCII_TO_BCD           
000014D6  1203                     550              MOVE.B  D3,D1       ;get converted value
000014D8  1602                     551              MOVE.B  D2,D3       ;pass value
000014DA  4EB9 00001FEE            552              JSR     ASCII_TO_BCD
000014E0  1403                     553              MOVE.B  D3,D2       ;get returned value
000014E2  1601                     554              MOVE.B  D1,D3
000014E4  4EB9 0000200C            555              JSR     BCD_TO_HEX
000014EA  1203                     556              MOVE.B  D3,D1
000014EC  1602                     557              MOVE.B  D2,D3
000014EE  4EB9 0000200C            558              JSR     BCD_TO_HEX
000014F4  1403                     559              MOVE.B  D3,D2
000014F6  E999                     560              ROL.L   #4,D1       ;put data in correct place
000014F8  D441                     561              ADD     D1,D2       ;get combined data input
000014FA  548A                     562              ADD.L   #2,A2       ;go to start of address
000014FC  4EB9 0000202A            563              JSR     ASCII_ADDRESS  ;get address in workable form
00001502  2845                     564              MOVE.L  D5,A4       ;load target address
00001504  1882                     565              MOVE.B  D2,(A4)       ;put data in target address
00001506  6000 FB8E                566              BRA     RESTORE                 ;return to shell
0000150A                           567  *--------------------------------------------------------------------------------------*
0000150A  45F8 3000                568  MEMDISP:    LEA     BUFFER,A2
0000150E  7C01                     569              MOVE.L  #1,D6       ;counter for how many times to loop
00001510  5A8A                     570              ADD.L   #5,A2       ;get first address
00001512  264A                     571              MOVE.L  A2,A3       
00001514  0C1B 0020                572  FINDEND1:   CMP.B   #$20,(A3)+
00001518  6700 0004                573              BEQ     FINDNEXT
0000151C  60F6                     574              BRA     FINDEND1  
0000151E  284B                     575  FINDNEXT:   MOVE.L  A3,A4
00001520  2A4B                     576              MOVE.L  A3,A5
00001522  538B                     577              SUB.L   #1,A3   ;get rid of off by one error
00001524  0C1D 0000                578  FINDEND2:   CMP.B   #$00,(A5)+
00001528  6700 0004                579              BEQ     MEMNEXT
0000152C  60F6                     580              BRA     FINDEND2
0000152E  538D                     581  MEMNEXT:    SUB.L   #1,A5   ;off by one error
00001530  4EB9 0000202A            582              JSR     ASCII_ADDRESS
00001536  2C45                     583              MOVE.L  D5,A6   ;put 1st address in A6
00001538  244C                     584              MOVE.L  A4,A2
0000153A  264D                     585              MOVE.L  A5,A3
0000153C  4EB9 0000202A            586              JSR ASCII_ADDRESS
00001542  2A45                     587              MOVE.L  D5,A5   ;second address in A5
00001544  204E                     588              MOVE.L  A6,A0   ;for second run through
00001546  224D                     589              MOVE.L  A5,A1   ;see above comment
00001548  D3FC 00000010            590              ADD.L   #16,A1 ;16 byte offset
0000154E  48E7 0040                591              MOVEM.L A1,-(SP)
00001552  BBCE                     592  DISPLOOP:   CMP.L   A6,A5
00001554  6D00 0034                593              BLT     SECONDLOOP
00001558  260E                     594              MOVE.L  A6,D3
0000155A  4EB9 0000206A            595              JSR     HEXTOASCII
00001560  97CA                     596              SUB.L   A2,A3
00001562  220B                     597              MOVE.L  A3,D1   ;number of ascii values to display
00001564  224A                     598              MOVE.L  A2,A1
00001566  7001                     599              MOVE.L  #1,D0
00001568  4E4F                     600              TRAP    #15
0000156A  43F8 36C8                601              LEA     SPACE,A1
0000156E  7201                     602              MOVE.L #1,D1
00001570  4E4F                     603              TRAP    #15
00001572  4283                     604              CLR.L   D3
00001574  1616                     605              MOVE.B  (A6),D3
00001576  4EB9 0000206A            606              JSR     HEXTOASCII
0000157C  97CA                     607              SUB.L   A2,A3
0000157E  220B                     608              MOVE.L  A3,D1
00001580  224A                     609              MOVE.L  A2,A1
00001582  7000                     610              MOVE.L  #0,D0
00001584  4E4F                     611              TRAP    #15
00001586  528E                     612              ADD.L   #1,A6
00001588  60C8                     613              BRA     DISPLOOP
0000158A                           614              
0000158A                           615  SECONDLOOP: 
0000158A  103C 0000                616              MOVE.B  #0,D0
0000158E  123C 0000                617              MOVE.B  #0,D1
00001592  4E4F                     618              TRAP    #15
00001594  4CDF 0200                619              MOVEM.L (SP)+,A1
00001598  2C48                     620              MOVE.L  A0,A6   ;reinit
0000159A  2A49                     621              MOVE.L  A1,A5
0000159C  5386                     622              SUBI.L  #1,D6
0000159E  BCBC 00000000            623              CMP.L   #$0,D6
000015A4  67AC                     624              BEQ     DISPLOOP
000015A6  598F                     625              SUB.L   #4,SP   ;off by long error on stack
000015A8  6000 FAEC                626              BRA     RESTORE
000015AC                           627              
000015AC                           628  *--------------------------------------------------------------------------------------*
000015AC                           629  
000015AC  45F8 3000                630  HXDC:   LEA BUFFER,A2   ;load buffer
000015B0  5A8A                     631          ADD.L   #5,A2   ; start of number
000015B2  264A                     632          MOVE.L  A2,A3   ;set up end pointer
000015B4  7201                     633          MOVE.L  #1,D1   ;set up 16's place
000015B6  4282                     634          CLR.L   D2      ;clear total
000015B8  4283                     635          CLR.L   D3      ;temp holder for number
000015BA  4286                     636          CLR.L   D6      ;Final Value in BCD
000015BC  283C 00002710            637          MOVE.L  #10000,D4    ;maximum 10's place of converted number
000015C2  7A10                     638          MOVE.L  #16,D5      ;Max number of rotates needed
000015C4  4BF8 3050                639          LEA OUTPUTBUFF,A5
000015C8  49F8 3050                640          LEA OUTPUTBUFF,A4   ;set up start pointer
000015CC                           641  FINDLASTNUM:    
000015CC  0C1B 0000                642          CMP.B #$00,(A3)+
000015D0  6700 0004                643          BEQ     CONVERTMINUS1
000015D4  60F6                     644          BRA     FINDLASTNUM
000015D6                           645  CONVERTMINUS1:   
000015D6  538B                     646               SUB.L   #1,A3 ; cure off by 1 error
000015D8                           647  CONVERT:
000015D8  538B                     648              SUB.L   #1,A3
000015DA  B4CB                     649              CMP   A3,A2
000015DC  6E00 0028                650              BGT   ENDCONVERT
000015E0  0C13 0040                651              CMP.B   #$40,(A3)
000015E4  6E00 000A                652              BGT     HIGHHEX
000015E8  0413 0030                653              SUBI.B  #$30,(A3)   ;get hex value
000015EC  6000 0006                654              BRA     COMPUTATION
000015F0  0413 0037                655  HIGHHEX:     SUBI.B  #$37,(A3)  ;get hex value
000015F4                           656  COMPUTATION:
000015F4  1613                     657              MOVE.B  (A3),D3 
000015F6  C6C1                     658              MULU    D1,D3   ;get 16's place
000015F8                           659             ; DIVU    #16,D3  ;get rid of off by 1 exponent error
000015F8  C2FC 0010                660              MULU    #16,D1  ;inc 16's place counter
000015FC  1883                     661              MOVE.B  D3,(A4)
000015FE  538C                     662              SUB.L   #1,A4
00001600  D483                     663              ADD.L   D3,D2   ;store it in total for debugging 
00001602  4283                     664              CLR.L   D3      ;get rid of any numbers in there   
00001604  60D2                     665              BRA     CONVERT     
00001606                           666  ENDCONVERT:                  ;must convert back to ascii for display
00001606  4283                     667              CLR.L   D3      ;Cleared for workability
00001608  84C4                     668              DIVU    D4,D2   ;get 10's place digit
0000160A  3602                     669              MOVE.W  D2,D3   ;extract 10's place digit to D3
0000160C  EBBB                     670              ROL.L   D5,D3   ;put it in its place
0000160E  4242                     671              CLR.W   D2      ;get rid of whole number
00001610  4842                     672              SWAP    D2      ;keep remainder
00001612  5985                     673              SUBI.L  #4,D5   ;dec rotate counter
00001614  DC83                     674              ADD.L   D3,D6   ;put it into it's place
00001616  88FC 000A                675              DIVU    #10,D4  ;go down a 10's place
0000161A  B87C 0000                676              CMP.W   #0,D4   ;are we done
0000161E  6700 0004                677              BEQ     OUTPUTNUM
00001622  60E2                     678              BRA     ENDCONVERT
00001624                           679              
00001624                           680  OUTPUTNUM:
00001624  2606                     681             MOVE.L   D6,D3   ;put into register for conversion to ASCII
00001626  4EB9 0000206A            682             JSR      HEXTOASCII
0000162C  224A                     683             MOVEA.L  A2,A1   ;get start of number
0000162E  96CA                     684             SUBA     A2,A3   ;get how many bytes to output
00001630  220B                     685             MOVE.L   A3,D1   ;for Trap call
00001632  7000                     686             MOVE.L   #0,D0   
00001634  4E4F                     687             TRAP     #15
00001636                           688             
00001636  6000 FA5E                689             BRA RESTORE
0000163A                           690  
0000163A                           691  *--------------------------------------------------------------------------------------*
0000163A                           692  
0000163A  5289                     693  SORTW:  ADD.L   #1,A1       ;increment to check for semicolon/dash
0000163C  0C11 002D                694          CMP.B   #$2D,(A1)   ;check for default
00001640  6700 007C                695          BEQ     DESCEND
00001644  0C19 003B                696          CMP.B   #$3B,(A1)+
00001648  6600 0994                697          BNE     ERRORSR
0000164C  0C11 0041                698          CMP.B   #$41,(A1)   ;is it ascending?
00001650  6700 000E                699          BEQ     ASCEND
00001654  0C11 0044                700          CMP.B   #$44,(A1)   ;or descending?
00001658  6600 0984                701          BNE     ERRORSR
0000165C  6000 0060                702          BRA     DESCEND
00001660                           703          
00001660                           704  ASCEND:
00001660  5289                     705         ADD.L    #1,A1   ;inc
00001662  0C11 0020                706         CMP.B    #$20,(A1)   ;check space
00001666  6600 0976                707         BNE      ERRORSR
0000166A  5289                     708         ADD.L    #1,A1   ;start of 1st address
0000166C  2449                     709         MOVE.L   A1,A2
0000166E  264A                     710         MOVE.L   A2,A3
00001670                           711  AGETFIRSTADDRESS:
00001670  0C13 0000                712         CMP.B    #$00,(A3)
00001674  6700 0968                713         BEQ      ERRORSR     ;incorrect syntax
00001678  0C1B 0020                714         CMP.B    #$20,(A3)+  ;trying to find the end
0000167C  6700 0004                715         BEQ      AFADDCONV
00001680  60EE                     716         BRA      AGETFIRSTADDRESS
00001682                           717  AFADDCONV:
00001682  538B                     718         SUB.L    #1,A3   ;off by one error
00001684  4EB9 0000202A            719         JSR ASCII_ADDRESS    ;D5 now has that address 
0000168A  2845                     720         MOVE.L D5,A4
0000168C  528B                     721         ADD.L    #1,A3   ;start of second address
0000168E  244B                     722         MOVE.L   A3,A2   ;setup for second address
00001690                           723  AGETSECADDRESS:
00001690  0C1B 0000                724         CMP.B    #$00,(A3)+  ;trying to find the end
00001694  6700 0004                725         BEQ      ASADDCONV
00001698  60F6                     726         BRA      AGETSECADDRESS
0000169A                           727  ASADDCONV:
0000169A  538B                     728          SUB.L   #1,A3   ;off by one
0000169C  4EB9 0000202A            729          JSR     ASCII_ADDRESS
000016A2  2A45                     730          MOVE.L  D5,A5
000016A4  2C4C                     731          MOVEA.L  A4,A6  ;CLR A6
000016A6                           732          
000016A6  284E                     733  ARESETLOOP: MOVE.L  A6,A4    ;reset to top of loop
000016A8  B94C                     734  ACMP:       CMP.W   (A4)+,(A4)+  ;check adjacent mem
000016AA  630A                     735              BLS.S   ASWAP    
000016AC  558C                     736              SUBQ.L  #2,A4
000016AE  BBCC                     737              CMP.L   A4,A5   ;done?
000016B0  66F6                     738              BNE     ACMP     ;nope
000016B2  6000 0068                739              BRA     DONEASCEND  ;yep
000016B6  2024                     740  ASWAP:       MOVE.L  -(A4),D0    ;start bubbling 
000016B8  4840                     741              SWAP.W  D0
000016BA  2880                     742              MOVE.L  D0,(A4)
000016BC  60E8                     743              BRA     ARESETLOOP
000016BE                           744  
000016BE                           745  
000016BE                           746  DESCEND:
000016BE  5289                     747         ADD.L    #1,A1   ;inc
000016C0  0C11 0020                748         CMP.B    #$20,(A1)   ;check space
000016C4  6600 0918                749         BNE      ERRORSR
000016C8  5289                     750         ADD.L    #1,A1   ;start of 1st address
000016CA  2449                     751         MOVE.L   A1,A2
000016CC  264A                     752         MOVE.L   A2,A3
000016CE                           753  DGETFIRSTADDRESS:
000016CE  0C13 0000                754         CMP.B    #$00,(A3)
000016D2  6700 090A                755         BEQ      ERRORSR     ;incorrect syntax
000016D6  0C1B 0020                756         CMP.B    #$20,(A3)+  ;trying to find the end
000016DA  6700 0004                757         BEQ      DFADDCONV
000016DE  60EE                     758         BRA      DGETFIRSTADDRESS
000016E0                           759  DFADDCONV:
000016E0  538B                     760         SUB.L    #1,A3   ;off by one error
000016E2  4EB9 0000202A            761         JSR ASCII_ADDRESS    ;D5 now has that address 
000016E8  2845                     762         MOVE.L D5,A4
000016EA  528B                     763         ADD.L    #1,A3   ;start of second address
000016EC  244B                     764         MOVE.L   A3,A2   ;setup for second address
000016EE                           765  DGETSECADDRESS:
000016EE  0C1B 0000                766         CMP.B    #$00,(A3)+  ;trying to find the end
000016F2  6700 0004                767         BEQ      DSADDCONV
000016F6  60F6                     768         BRA      DGETSECADDRESS
000016F8                           769  DSADDCONV:
000016F8  538B                     770          SUB.L   #1,A3   ;off by one
000016FA  4EB9 0000202A            771          JSR     ASCII_ADDRESS
00001700  2A45                     772          MOVE.L  D5,A5
00001702  2C4C                     773          MOVEA.L  A4,A6  ;CLR A6
00001704                           774          
00001704  284E                     775  DRESETLOOP: MOVE.L  A6,A4    ;reset to top of loop
00001706  B94C                     776  DCMP:       CMP.W   (A4)+,(A4)+  ;check adjacent mem
00001708  620A                     777              BHI.S   DSWAP    
0000170A  558C                     778              SUBQ.L  #2,A4
0000170C  BBCC                     779              CMP.L   A4,A5   ;done?
0000170E  66F6                     780              BNE     DCMP     ;nope
00001710  6000 000A                781              BRA     DONEDESCEND  ;yep
00001714  2024                     782  DSWAP:       MOVE.L  -(A4),D0    ;start bubbling 
00001716  4840                     783              SWAP.W  D0
00001718  2880                     784              MOVE.L  D0,(A4)
0000171A  60E8                     785              BRA     DRESETLOOP
0000171C                           786  x
0000171C                           787  DONEASCEND:
0000171C                           788  DONEDESCEND:
0000171C  6000 F978                789              BRA RESTORE
00001720                           790  
00001720                           791  *--------------------------------------------------------------------------------------*
00001720                           792  
00001720  4282                     793  MM:    CLR.L    D2      ;used for storing values
00001722  4286                     794         CLR.L    D6      
00001724                           795  SIZECHECK:  
00001724  2649                     796          MOVE.L  A1,A3   ;set up to find end ptr
00001726                           797  ENDPTRMM:
00001726  0C1B 0000                798          CMP.B   #$00,(A3)+
0000172A  66FA                     799          BNE     ENDPTRMM
0000172C  538B                     800          SUB.L   #1,A3   ;off by one error
0000172E  5289                     801          ADD.L   #1,A1   ;inc pointer to start of specifier
00001730  0C11 002D                802          CMP.B   #$2D,(A1)   ;check for default
00001734  6700 0020                803          BEQ     DEFAULT        
00001738  0C11 003B                804          CMP.B   #$3B,(A1)
0000173C  6600 08A0                805          BNE     ERRORSR
00001740  5289                     806          ADD.L   #1,A1   ;find out which size
00001742  0C11 0057                807          CMP.B   #$57,(A1) ; word
00001746  6700 00A8                808          BEQ     WORD
0000174A  0C11 004C                809          CMP.B   #$4C,(A1)   ;long
0000174E  6700 0162                810          BEQ     LONG
00001752  6000 088A                811          BRA     ERRORSR
00001756                           812  
00001756                           813  ***************************************************
00001756                           814  
00001756                           815  DEFAULT:
00001756                           816          
00001756  5489                     817          ADD.L   #2,A1       ;set up for subroutine
00001758  3449                     818          MOVE    A1,A2       ;set up for subroutine
0000175A  48E7 4270                819          MOVEM.L D1/D6/A1-A3,-(SP)
0000175E  4EB9 0000202A            820          JSR     ASCII_ADDRESS
00001764  4CDF 0E42                821          MOVEM.L (SP)+,D1/D6/A1-A3
00001768  2845                     822          MOVE.L  D5,A4       ;set up address to modify
0000176A                           823         
0000176A                           824  MODIFYLOOP:
0000176A                           825          *-------Display Memory First-----*
0000176A  260C                     826          MOVE.L  A4,D3       ;set up for subroutine
0000176C  4EB9 0000206A            827          JSR     HEXTOASCII  ;convert new address to ascii for output
00001772  96CA                     828          SUBA    A2,A3       ;get num of bytes to produce
00001774  7001                     829          MOVE.L  #1,D0
00001776  220B                     830          MOVE.L  A3,D1
00001778  224A                     831          MOVE.L  A2,A1
0000177A  4E4F                     832          TRAP    #15
0000177C                           833          
0000177C                           834          *add colon to denote containing data*
0000177C  12BC 003A                835          MOVE.B  #$3A,(A1)
00001780  7201                     836          MOVE.L  #1,D1   ;display only the colon
00001782  7001                     837          MOVE.L  #1,D0
00001784  4E4F                     838          TRAP    #15
00001786                           839          
00001786  1614                     840          MOVE.B  (A4),D3
00001788  4EB9 0000206A            841          JSR     HEXTOASCII
0000178E  7202                     842          MOVE.L  #2,D1
00001790  224A                     843          MOVE.L  A2,A1
00001792  103C 0001                844          MOVE.B  #1,D0
00001796  4E4F                     845          TRAP    #15
00001798                           846          
00001798  12BC 0020                847          MOVE.B  #$20,(A1)
0000179C  7201                     848          MOVE.L  #1,D1   ;space between held data and input
0000179E  7001                     849          MOVE.L  #1,D0
000017A0  4E4F                     850          TRAP    #15
000017A2                           851  
000017A2                           852          
000017A2                           853          *-----Enter Input-------*
000017A2  4283                     854          CLR.L   D3
000017A4  7C04                     855          MOVE.L  #4,D6
000017A6  43F8 3000                856          LEA     BUFFER,A1   ;set up storage for command
000017AA  103C 0002                857          MOVE.B  #2,D0       ;load input trap call
000017AE  4E4F                     858          TRAP    #15
000017B0  0C11 002E                859          CMP.B   #$2E,(A1)
000017B4  6700 01E2                860          BEQ     ENDLP
000017B8  0C11 0000                861          CMP.B   #$00,(A1)
000017BC  6700 002C                862          BEQ     ENTER
000017C0                           863          
000017C0                           864  PARSELOOP:
000017C0  0C11 0000                865          CMP.B   #$00,(A1)
000017C4  6700 0022                866          BEQ     ENDPARSE        
000017C8  0C11 0040                867          CMP.B   #$40,(A1)
000017CC  6E00 000A                868          BGT     HIGHHEXMM
000017D0  0411 0030                869          SUBI.B  #$30,(A1)   ;get hex value
000017D4  6000 0006                870          BRA     NEXTMMSTEP
000017D8  0411 0037                871  HIGHHEXMM: SUBI.B  #$37,(A1)  ;get hex value
000017DC                           872  NEXTMMSTEP:
000017DC  1411                     873          MOVE.B  (A1),D2
000017DE  EDBA                     874          ROL.L   D6,D2
000017E0  5986                     875          SUBI.L  #4,D6
000017E2  5289                     876          ADD.L   #1,A1
000017E4  D602                     877          ADD.B   D2,D3   ;total byte stored in D3
000017E6  60D8                     878          BRA     PARSELOOP
000017E8                           879  ENDPARSE:
000017E8  1883                     880          MOVE.B  D3,(A4)   ;commit memory change 
000017EA  528C                     881  ENTER:  ADD.L   #1,A4   ;increment address
000017EC  6000 FF7C                882          BRA     MODIFYLOOP
000017F0                           883          
000017F0                           884  ***************************************************
000017F0                           885  
000017F0                           886  WORD:
000017F0                           887              
000017F0  5489                     888          ADD.L   #2,A1       ;set up for subroutine
000017F2  3449                     889          MOVE    A1,A2       ;set up for subroutine
000017F4  48E7 4270                890          MOVEM.L D1/D6/A1-A3,-(SP)
000017F8  4EB9 0000202A            891          JSR     ASCII_ADDRESS
000017FE  4CDF 0E42                892          MOVEM.L (SP)+,D1/D6/A1-A3
00001802  2845                     893          MOVE.L  D5,A4       ;set up address to modify
00001804                           894         
00001804                           895  MODIFYLOOPW:
00001804                           896          *-------Display Memory First-----*
00001804  200C                     897          MOVE.L  A4,D0
00001806  80FC 0002                898          DIVU    #2,D0
0000180A  4840                     899          SWAP    D0      ;check if it's an odd address
0000180C  B07C 0000                900          CMP.W   #$00,D0
00001810  6600 07CC                901          BNE     ERRORSR
00001814  260C                     902          MOVE.L  A4,D3       ;set up for subroutine
00001816  2A4C                     903          MOVE.L  A4,A5       ;next byte of memory may not be needed
00001818  528D                     904          ADD.L   #1,A5
0000181A  4EB9 0000206A            905          JSR     HEXTOASCII  ;convert new address to ascii for output
00001820  96CA                     906          SUBA    A2,A3       ;get num of bytes to produce
00001822  7001                     907          MOVE.L  #1,D0
00001824  220B                     908          MOVE.L  A3,D1
00001826  224A                     909          MOVE.L  A2,A1
00001828  4E4F                     910          TRAP    #15
0000182A                           911          
0000182A                           912          *add colon to denote containing data*
0000182A  12BC 003A                913          MOVE.B  #$3A,(A1)
0000182E  7201                     914          MOVE.L  #1,D1   ;display only the colon
00001830  7001                     915          MOVE.L  #1,D0
00001832  4E4F                     916          TRAP    #15
00001834                           917          
00001834  1614                     918          MOVE.B  (A4),D3
00001836  4EB9 0000206A            919          JSR     HEXTOASCII
0000183C  7202                     920          MOVE.L  #2,D1
0000183E  224A                     921          MOVE.L  A2,A1
00001840  103C 0001                922          MOVE.B  #1,D0
00001844  4E4F                     923          TRAP    #15
00001846                           924          
00001846  1615                     925          MOVE.B  (A5),D3
00001848  4EB9 0000206A            926          JSR     HEXTOASCII
0000184E  7202                     927          MOVE.L  #2,D1
00001850  224A                     928          MOVE.L  A2,A1
00001852  103C 0001                929          MOVE.B  #1,D0
00001856  4E4F                     930          TRAP    #15
00001858                           931  
00001858                           932          
00001858  12BC 0020                933          MOVE.B  #$20,(A1)
0000185C  7201                     934          MOVE.L  #1,D1   ;space between held data and input
0000185E  7001                     935          MOVE.L  #1,D0
00001860  4E4F                     936          TRAP    #15
00001862                           937  
00001862                           938          
00001862                           939          *-----Enter Input-------*
00001862  4283                     940          CLR.L   D3
00001864  7C0C                     941          MOVE.L  #12,D6
00001866  43F8 3000                942          LEA     BUFFER,A1   ;set up storage for command
0000186A  103C 0002                943          MOVE.B  #2,D0       ;load input trap call
0000186E  4E4F                     944          TRAP    #15
00001870  0C11 002E                945          CMP.B   #$2E,(A1)
00001874  6700 0122                946          BEQ     ENDLP
00001878  0C11 0000                947          CMP.B   #$00,(A1)
0000187C  6700 002E                948          BEQ     ENTERW
00001880                           949          
00001880                           950  PARSELOOPW:
00001880  0C11 0000                951          CMP.B   #$00,(A1)
00001884  6700 0024                952          BEQ     ENDPARSEW        
00001888  0C11 0040                953          CMP.B   #$40,(A1)
0000188C  6E00 000A                954          BGT     HIGHHEXMMW
00001890  0411 0030                955          SUBI.B  #$30,(A1)   ;get hex value
00001894  6000 0006                956          BRA     NEXTMMSTEPW
00001898  0411 0037                957  HIGHHEXMMW: SUBI.B  #$37,(A1)  ;get hex value
0000189C                           958  NEXTMMSTEPW:
0000189C  1411                     959          MOVE.B  (A1),D2
0000189E  EDBA                     960          ROL.L   D6,D2
000018A0  5986                     961          SUBI.L  #4,D6
000018A2  5289                     962          ADD.L   #1,A1
000018A4  D682                     963          ADD.L   D2,D3   ;total byte stored in D3
000018A6  4282                     964          CLR.L   D2      ;clear for next rotate
000018A8  60D6                     965          BRA     PARSELOOPW
000018AA                           966  ENDPARSEW:
000018AA                           967          
000018AA  3883                     968          MOVE.W  D3,(A4)   ;commit memory change 
000018AC  548C                     969  ENTERW:  ADD.L   #2,A4   ;increment address
000018AE  6000 FF54                970          BRA     MODIFYLOOPW
000018B2                           971  
000018B2                           972  ***************************************************
000018B2                           973  
000018B2                           974  LONG:  
000018B2  5489                     975          ADD.L   #2,A1       ;set up for subroutine
000018B4  3449                     976          MOVE    A1,A2       ;set up for subroutine
000018B6  48E7 4270                977          MOVEM.L D1/D6/A1-A3,-(SP)
000018BA  4EB9 0000202A            978          JSR     ASCII_ADDRESS
000018C0  4CDF 0E42                979          MOVEM.L (SP)+,D1/D6/A1-A3
000018C4  2845                     980          MOVE.L  D5,A4       ;set up address to modify
000018C6                           981         
000018C6                           982  MODIFYLOOPL:
000018C6                           983          *-------Display Memory First-----*
000018C6  200C                     984          MOVE.L  A4,D0
000018C8  80FC 0002                985          DIVU    #2,D0
000018CC  4840                     986          SWAP    D0      ;check if it's an odd address
000018CE  B07C 0000                987          CMP.W   #$00,D0
000018D2  6600 070A                988          BNE     ERRORSR
000018D6  260C                     989          MOVE.L  A4,D3       ;set up for subroutine
000018D8  2A4C                     990          MOVE.L  A4,A5       ;next byte of memory may not be needed
000018DA  528D                     991          ADD.L   #1,A5
000018DC  4EB9 0000206A            992          JSR     HEXTOASCII  ;convert new address to ascii for output
000018E2  96CA                     993          SUBA    A2,A3       ;get num of bytes to produce
000018E4  7001                     994          MOVE.L  #1,D0
000018E6  220B                     995          MOVE.L  A3,D1
000018E8  224A                     996          MOVE.L  A2,A1
000018EA  4E4F                     997          TRAP    #15
000018EC                           998          
000018EC                           999          *add colon to denote containing data*
000018EC  12BC 003A               1000          MOVE.B  #$3A,(A1)
000018F0  7201                    1001          MOVE.L  #1,D1   ;display only the colon
000018F2  7001                    1002          MOVE.L  #1,D0
000018F4  4E4F                    1003          TRAP    #15
000018F6                          1004          
000018F6  1614                    1005          MOVE.B  (A4),D3
000018F8  4EB9 0000206A           1006          JSR     HEXTOASCII
000018FE  7202                    1007          MOVE.L  #2,D1
00001900  224A                    1008          MOVE.L  A2,A1
00001902  103C 0001               1009          MOVE.B  #1,D0
00001906  4E4F                    1010          TRAP    #15
00001908                          1011          
00001908  161D                    1012          MOVE.B  (A5)+,D3
0000190A  4EB9 0000206A           1013          JSR     HEXTOASCII
00001910  7202                    1014          MOVE.L  #2,D1
00001912  224A                    1015          MOVE.L  A2,A1
00001914  103C 0001               1016          MOVE.B  #1,D0
00001918  4E4F                    1017          TRAP    #15
0000191A                          1018          
0000191A  161D                    1019          MOVE.B  (A5)+,D3
0000191C  4EB9 0000206A           1020          JSR     HEXTOASCII
00001922  7202                    1021          MOVE.L  #2,D1
00001924  224A                    1022          MOVE.L  A2,A1
00001926  103C 0001               1023          MOVE.B  #1,D0
0000192A  4E4F                    1024          TRAP    #15
0000192C  161D                    1025          MOVE.B  (A5)+,D3
0000192E  4EB9 0000206A           1026          JSR     HEXTOASCII
00001934  7202                    1027          MOVE.L  #2,D1
00001936  224A                    1028          MOVE.L  A2,A1
00001938  103C 0001               1029          MOVE.B  #1,D0
0000193C  4E4F                    1030          TRAP    #15
0000193E                          1031     
0000193E  12BC 0020               1032          MOVE.B  #$20,(A1)
00001942  7201                    1033          MOVE.L  #1,D1   ;space between held data and input
00001944  7001                    1034          MOVE.L  #1,D0
00001946  4E4F                    1035          TRAP    #15
00001948                          1036  
00001948                          1037          
00001948                          1038          *-----Enter Input-------*
00001948  4283                    1039          CLR.L   D3
0000194A  7C1C                    1040          MOVE.L  #28,D6
0000194C  43F8 3000               1041          LEA     BUFFER,A1   ;set up storage for command
00001950  103C 0002               1042          MOVE.B  #2,D0       ;load input trap call
00001954  4E4F                    1043          TRAP    #15
00001956  0C11 002E               1044          CMP.B   #$2E,(A1)
0000195A  6700 003C               1045          BEQ     ENDLP
0000195E  0C11 0000               1046          CMP.B   #$00,(A1)
00001962  6700 002E               1047          BEQ     ENTERL
00001966                          1048          
00001966                          1049  PARSELOOPL:
00001966  0C11 0000               1050          CMP.B   #$00,(A1)
0000196A  6700 0024               1051          BEQ     ENDPARSEL        
0000196E  0C11 0040               1052          CMP.B   #$40,(A1)
00001972  6E00 000A               1053          BGT     HIGHHEXMML
00001976  0411 0030               1054          SUBI.B  #$30,(A1)   ;get hex value
0000197A  6000 0006               1055          BRA     NEXTMMSTEPL
0000197E  0411 0037               1056  HIGHHEXMML: SUBI.B  #$37,(A1)  ;get hex value
00001982                          1057  NEXTMMSTEPL:
00001982  1411                    1058          MOVE.B  (A1),D2
00001984  EDBA                    1059          ROL.L   D6,D2
00001986  5986                    1060          SUBI.L  #4,D6
00001988  5289                    1061          ADD.L   #1,A1
0000198A  D682                    1062          ADD.L   D2,D3   ;total byte stored in D3
0000198C  4282                    1063          CLR.L   D2      ;clear for next rotate
0000198E  60D6                    1064          BRA     PARSELOOPL
00001990                          1065  ENDPARSEL:
00001990  2883                    1066          MOVE.L  D3,(A4)   ;commit memory change 
00001992  588C                    1067  ENTERL:  ADD.L   #4,A4   ;increment address
00001994  6000 FF30               1068          BRA     MODIFYLOOPL
00001998                          1069  
00001998                          1070  
00001998  6000 F6FC               1071  ENDLP:  BRA RESTORE
0000199C                          1072          
0000199C                          1073          
0000199C                          1074  *--------------------------------------------------------------------------------------*
0000199C                          1075  
0000199C                          1076  BF:    
0000199C  5289                    1077         ADD.L    #1,A1   ;first byte of data
0000199E  2649                    1078         MOVE.L   A1,A3   ;for end ptr
000019A0                          1079  BFGETENDDATA:
000019A0  0C1B 0020               1080          CMP.B   #$20,(A3)+
000019A4  6700 0004               1081          BEQ     BFNEXTADDR
000019A8  60F6                    1082          BRA     BFGETENDDATA
000019AA                          1083  BFNEXTADDR:
000019AA  2449                    1084          MOVE.L  A1,A2   ;for subroutine
000019AC  538B                    1085          SUB.L   #1,A3   ;off by one error
000019AE  4EB9 0000202A           1086          JSR     ASCII_ADDRESS
000019B4  2F05                    1087          MOVE.L  D5,-(SP)    ;save data on the stack
000019B6                          1088          
000019B6  528B                    1089          ADD.L   #1,A3   ;inc end ptr to first byte of address
000019B8  244B                    1090          MOVE.L  A3,A2   ;set start ptr
000019BA                          1091  BFGETENDADDRONE:
000019BA  0C1B 0020               1092          CMP.B   #$20,(A3)+
000019BE  6700 0004               1093          BEQ     BFNEXTADDRTWO
000019C2  60F6                    1094          BRA     BFGETENDADDRONE
000019C4                          1095          
000019C4                          1096  BFNEXTADDRTWO:
000019C4  538B                    1097          SUB.L   #1,A3   ;off by one error
000019C6  4EB9 0000202A           1098          JSR     ASCII_ADDRESS   ;convert address to hex
000019CC  2A45                    1099          MOVE.L  D5,A5       ;store address 1 in A5
000019CE  8AFC 0002               1100          DIVU    #2,D5
000019D2  4845                    1101          SWAP    D5
000019D4  BA7C 0000               1102          CMP.W   #$00,D5
000019D8  6600 0604               1103          BNE     ERRORSR
000019DC                          1104          
000019DC  528B                    1105          ADD.L   #1,A3   ;inc end ptr to first byte of address
000019DE  244B                    1106          MOVE.L  A3,A2   ;set start ptr
000019E0                          1107  BFGETLASTEND:
000019E0  0C1B 0000               1108          CMP.B   #$00,(A3)+
000019E4  6700 0004               1109          BEQ     STOREDATA
000019E8  60F6                    1110          BRA     BFGETLASTEND
000019EA                          1111          
000019EA                          1112  STOREDATA:
000019EA  538B                    1113          SUB.L   #1,A3   ;off by one error
000019EC  4EB9 0000202A           1114          JSR     ASCII_ADDRESS
000019F2  2C45                    1115          MOVE.L  D5,A6   ;end address in A6
000019F4  8AFC 0002               1116          DIVU    #2,D5
000019F8  4845                    1117          SWAP    D5
000019FA  BA7C 0000               1118          CMP.W   #$00,D5
000019FE  6600 05DE               1119          BNE     ERRORSR
00001A02  2A1F                    1120          MOVE.L  (SP)+,D5
00001A04                          1121          
00001A04                          1122  DATALOOP:
00001A04  BDCD                    1123          CMP.L   A5,A6
00001A06  6D00 0006               1124          BLT     ENDBF
00001A0A  3AC5                    1125          MOVE.W  D5,(A5)+
00001A0C  60F6                    1126          BRA     DATALOOP
00001A0E                          1127  
00001A0E  6000 F686               1128  ENDBF:  BRA RESTORE
00001A12                          1129  *--------------------------------------------------------------------------------------*
00001A12                          1130  
00001A12  5289                    1131  BMOV:   ADD.L   #1,A1   ;get to start of first address
00001A14  2449                    1132          MOVE.L  A1,A2   ;set up start ptr
00001A16  264A                    1133          MOVE.L  A2,A3   ;set up end ptr
00001A18                          1134          
00001A18                          1135  FIRSTADDRESS:
00001A18  0C1B 0020               1136          CMP.B #$20,(A3)+
00001A1C  6700 0004               1137          BEQ     COMPUTEFIRSTADD
00001A20  60F6                    1138          BRA     FIRSTADDRESS
00001A22                          1139          
00001A22                          1140  COMPUTEFIRSTADD:
00001A22  538B                    1141          SUB.L   #1,A3   ;off by one error
00001A24  4EB9 0000202A           1142          JSR     ASCII_ADDRESS
00001A2A  2045                    1143          MOVE.L  D5,A0   ; save 1st address
00001A2C                          1144          
00001A2C  528B                    1145          ADD.L   #1,A3
00001A2E  244B                    1146          MOVE.L  A3,A2
00001A30                          1147  SECONDADDRESS:
00001A30  0C1B 0020               1148          CMP.B   #$20,(A3)+
00001A34  6700 0004               1149          BEQ     COMPUTESECONDADDRESS
00001A38  60F6                    1150          BRA     SECONDADDRESS
00001A3A                          1151          
00001A3A                          1152  COMPUTESECONDADDRESS:
00001A3A  538B                    1153          SUB.L   #1,A3   ;off by one error
00001A3C  4EB9 0000202A           1154          JSR     ASCII_ADDRESS
00001A42  2845                    1155          MOVE.L  D5,A4   ;save 2nd address
00001A44                          1156  
00001A44  528B                    1157          ADD.L   #1,A3
00001A46  244B                    1158          MOVE.L  A3,A2
00001A48                          1159  THIRDADDRESS:
00001A48  0C1B 0020               1160          CMP.B   #$20,(A3)+
00001A4C  6700 0004               1161          BEQ     COMPUTETHIRDADDRESS
00001A50  60F6                    1162          BRA     THIRDADDRESS
00001A52                          1163          
00001A52                          1164  COMPUTETHIRDADDRESS:
00001A52  538B                    1165          SUB.L   #1,A3
00001A54  4EB9 0000202A           1166          JSR     ASCII_ADDRESS
00001A5A  2A45                    1167          MOVE.L  D5,A5   ;save 3rd address
00001A5C                          1168          
00001A5C  528B                    1169          ADD.L   #1,A3
00001A5E  244B                    1170          MOVE.L  A3,A2
00001A60                          1171  FOURTHADDRESS:
00001A60  0C1B 0000               1172          CMP.B   #$00,(A3)+
00001A64  6700 0004               1173          BEQ     COMPUTEFOURTHADDRESS
00001A68  60F6                    1174          BRA     FOURTHADDRESS
00001A6A                          1175          
00001A6A                          1176  COMPUTEFOURTHADDRESS:
00001A6A  538B                    1177          SUB.L   #1,A3
00001A6C  4EB9 0000202A           1178          JSR     ASCII_ADDRESS
00001A72  2C45                    1179          MOVE.L  D5,A6   ;save 3rd address
00001A74                          1180          
00001A74                          1181          
00001A74                          1182  
00001A74                          1183          *Check for matching dimensions*
00001A74  2008                    1184          MOVE.L  A0,D0
00001A76  220C                    1185          MOVE.L  A4,D1
00001A78  2A0D                    1186          MOVE.L  A5,D5
00001A7A  2C0E                    1187          MOVE.L  A6,D6
00001A7C  9280                    1188          SUB.L   D0,D1
00001A7E  9C85                    1189          SUB.L   D5,D6
00001A80  BC81                    1190          CMP.L   D1,D6
00001A82  6600 055A               1191          BNE     ERRORSR
00001A86  B9C8                    1192          CMP.L   A0,A4
00001A88  6D00 0554               1193          BLT     ERRORSR
00001A8C  BDCD                    1194          CMP.L   A5,A6
00001A8E  6D00 054E               1195          BLT     ERRORSR
00001A92                          1196  
00001A92                          1197  DATATRANSFER:
00001A92  B9C8                    1198          CMP.L   A0,A4
00001A94  6D00 0006               1199          BLT     BMOVDONE
00001A98  1AD8                    1200          MOVE.B  (A0)+,(A5)+
00001A9A  60F6                    1201          BRA     DATATRANSFER
00001A9C                          1202          
00001A9C                          1203  
00001A9C                          1204  
00001A9C                          1205  BMOVDONE:
00001A9C  6000 F5F8               1206          BRA RESTORE
00001AA0                          1207  
00001AA0                          1208  *--------------------------------------------------------------------------------------*
00001AA0                          1209  
00001AA0                          1210  BTST:   
00001AA0  5289                    1211         ADD.L    #1,A1   ;first byte of data
00001AA2  2649                    1212         MOVE.L   A1,A3   ;for end ptr
00001AA4                          1213  BTSTGETENDDATA:
00001AA4  0C1B 0020               1214          CMP.B   #$20,(A3)+
00001AA8  6700 0004               1215          BEQ     BTSTNEXTADDR
00001AAC  60F6                    1216          BRA     BTSTGETENDDATA
00001AAE                          1217  BTSTNEXTADDR:
00001AAE  2449                    1218          MOVE.L  A1,A2   ;for subroutine
00001AB0  538B                    1219          SUB.L   #1,A3   ;off by one error
00001AB2  4EB9 0000202A           1220          JSR     ASCII_ADDRESS
00001AB8  2F05                    1221          MOVE.L  D5,-(SP)    ;save data on the stack
00001ABA                          1222          
00001ABA  528B                    1223          ADD.L   #1,A3   ;inc end ptr to first byte of address
00001ABC  244B                    1224          MOVE.L  A3,A2   ;set start ptr
00001ABE                          1225  BTSTGETENDADDRONE:
00001ABE  0C1B 0020               1226          CMP.B   #$20,(A3)+
00001AC2  6700 0004               1227          BEQ     BTSTNEXTADDRTWO
00001AC6  60F6                    1228          BRA     BTSTGETENDADDRONE
00001AC8                          1229          
00001AC8                          1230  BTSTNEXTADDRTWO:
00001AC8  538B                    1231          SUB.L   #1,A3   ;off by one error
00001ACA  4EB9 0000202A           1232          JSR     ASCII_ADDRESS   ;convert address to hex
00001AD0  2A45                    1233          MOVE.L  D5,A5       ;store address 1 in A5
00001AD2  2845                    1234          MOVE.L  D5,A4       ;for second run through
00001AD4                          1235                
00001AD4  528B                    1236          ADD.L   #1,A3   ;inc end ptr to first byte of address
00001AD6  244B                    1237          MOVE.L  A3,A2   ;set start ptr
00001AD8                          1238  BTSTGETLASTEND:
00001AD8  0C1B 0000               1239          CMP.B   #$00,(A3)+
00001ADC  6700 0004               1240          BEQ     STOREDATABTST
00001AE0  60F6                    1241          BRA     BTSTGETLASTEND
00001AE2                          1242  
00001AE2                          1243  
00001AE2                          1244  STOREDATABTST:
00001AE2  538B                    1245          SUB.L   #1,A3   ;off by one error
00001AE4  4EB9 0000202A           1246          JSR     ASCII_ADDRESS
00001AEA  2C45                    1247          MOVE.L  D5,A6   ;end address in A6
00001AEC  2A1F                    1248          MOVE.L  (SP)+,D5
00001AEE                          1249          
00001AEE                          1250  BTSTDATALOOP:
00001AEE  BDCD                    1251          CMP.L   A5,A6
00001AF0  6D00 0006               1252          BLT     READ
00001AF4  1AC5                    1253          MOVE.B  D5,(A5)+
00001AF6  60F6                    1254          BRA     BTSTDATALOOP
00001AF8                          1255  
00001AF8                          1256  
00001AF8                          1257  READ:
00001AF8  BDCC                    1258          CMP.L   A4,A6
00001AFA  6D00 006C               1259          BLT     COMPLETE
00001AFE  BA1C                    1260          CMP.B   (A4)+,D5
00001B00  6600 0004               1261          BNE     FAIL
00001B04  60F2                    1262          BRA     READ
00001B06                          1263          
00001B06                          1264  FAIL:
00001B06  43F8 3703               1265          LEA     BTST4,A1
00001B0A  720B                    1266          MOVE.L  #11,D1
00001B0C  7000                    1267          MOVE.L  #0,D0
00001B0E  4E4F                    1268          TRAP    #15
00001B10                          1269          
00001B10  43F8 36CC               1270          LEA     BTST1,A1
00001B14  7001                    1271          MOVE.L  #1,D0
00001B16  7214                    1272          MOVE.L  #20,D1
00001B18  4E4F                    1273          TRAP    #15
00001B1A                          1274          
00001B1A  1605                    1275          MOVE.B  D5,D3   ;for subroutine
00001B1C  4EB9 0000206A           1276          JSR     HEXTOASCII
00001B22  224A                    1277          MOVE.L     A2,A1
00001B24  7000                    1278          MOVE.L  #0,D0
00001B26  97CA                    1279          SUBA.L  A2,A3   ;number of bytes
00001B28  220B                    1280          MOVE.L  A3,D1
00001B2A  4E4F                    1281          TRAP    #15
00001B2C                          1282          
00001B2C                          1283          
00001B2C  43F8 36E0               1284          LEA     BTST2,A1
00001B30  7001                    1285          MOVE.L  #1,D0
00001B32  7211                    1286          MOVE.L  #17,D1
00001B34  4E4F                    1287          TRAP    #15
00001B36                          1288          
00001B36                          1289          
00001B36  538C                    1290          SUB.L   #1,A4   ;go back to address that failed
00001B38  1614                    1291          MOVE.B  (A4),D3
00001B3A  4EB9 0000206A           1292          JSR     HEXTOASCII  ;convert for output
00001B40  224A                    1293          MOVE.L     A2,A1
00001B42  7000                    1294          MOVE.L  #0,D0
00001B44  97CA                    1295          SUBA.L  A2,A3   ;number of bytes
00001B46  220B                    1296          MOVE.L  A3,D1
00001B48  4E4F                    1297          TRAP    #15
00001B4A                          1298          
00001B4A  43F8 370E               1299          LEA     BTST5,A1
00001B4E  721B                    1300          MOVE.L  #27,D1
00001B50  103C 0001               1301          MOVE.B  #1,D0
00001B54  4E4F                    1302          TRAP    #15
00001B56  260C                    1303          MOVE.L  A4,D3
00001B58  4EB9 0000206A           1304          JSR     HEXTOASCII
00001B5E  224A                    1305          MOVE.L     A2,A1
00001B60  7000                    1306          MOVE.L  #0,D0
00001B62  97CA                    1307          SUBA.L  A2,A3   ;number of bytes
00001B64  220B                    1308          MOVE.L  A3,D1
00001B66  4E4F                    1309          TRAP    #15
00001B68                          1310  
00001B68                          1311  
00001B68                          1312          
00001B68                          1313  COMPLETE:
00001B68                          1314  
00001B68  43F8 36F1               1315          LEA     BTST3,A1
00001B6C  7212                    1316          MOVE.L  #18,D1
00001B6E  7000                    1317          MOVE.L  #0,D0
00001B70  4E4F                    1318          TRAP    #15
00001B72  6000 F522               1319          BRA RESTORE
00001B76                          1320  
00001B76                          1321  *--------------------------------------------------------------------------------------*
00001B76                          1322  
00001B76                          1323  BSCH:   
00001B76  5289                    1324          ADD.L   #1,A1   ;start of data
00001B78  2449                    1325          MOVE.L  A1,A2   ;set up bac ptr
00001B7A                          1326          
00001B7A                          1327  BSCHENDDATA:
00001B7A  0C1A 0020               1328          CMP.B   #$20,(A2)+
00001B7E  6700 0004               1329          BEQ     BSCHFIRSTADD
00001B82  60F6                    1330          BRA     BSCHENDDATA
00001B84                          1331  
00001B84                          1332  
00001B84                          1333  BSCHFIRSTADD:
00001B84  538A                    1334          SUB.L   #1,A2
00001B86  264A                    1335          MOVE.L  A2,A3
00001B88  2449                    1336          MOVE.L  A1,A2
00001B8A  4EB9 0000202A           1337          JSR     ASCII_ADDRESS
00001B90  97C9                    1338          SUB.L   A1,A3   ;see how many bytes
00001B92  2C0B                    1339          MOVE.L  A3,D6   ;store byte/word/long in D6   
00001B94  528A                    1340          ADD.L   #1,A2   ;set up for start of next address     
00001B96  264A                    1341          MOVE.L  A2,A3   ;set up for end ptr
00001B98  2F05                    1342          MOVE.L  D5,-(SP)    ;save data to stack
00001B9A                          1343          
00001B9A                          1344          
00001B9A                          1345  BSCHFADDEND:
00001B9A  0C1B 0020               1346          CMP.B   #$20,(A3)+
00001B9E  6700 0004               1347          BEQ     BSCHSECONDADD
00001BA2  60F6                    1348          BRA     BSCHFADDEND
00001BA4                          1349          
00001BA4                          1350          
00001BA4                          1351  BSCHSECONDADD:
00001BA4  538B                    1352          SUB.L   #1,A3   ;off by one
00001BA6  4EB9 0000202A           1353          JSR     ASCII_ADDRESS
00001BAC  2A45                    1354          MOVE.L  D5,A5   ;first address destination
00001BAE  528B                    1355          ADD.L   #1,A3   ;start it at next address
00001BB0  244B                    1356          MOVE.L  A3,A2   ; set up for next address
00001BB2                          1357          
00001BB2                          1358          
00001BB2                          1359  BSCHSECONDFIND:
00001BB2  0C1B 0000               1360          CMP.B   #$00,(A3)+
00001BB6  6700 0004               1361          BEQ     TESTOP
00001BBA  60F6                    1362          BRA     BSCHSECONDFIND
00001BBC                          1363          
00001BBC                          1364          
00001BBC                          1365  TESTOP: 
00001BBC  538B                    1366          SUB.L   #1,A3   ;off by one
00001BBE  4EB9 0000202A           1367          JSR     ASCII_ADDRESS
00001BC4  2C45                    1368          MOVE.L  D5,A6   ;end address at A6
00001BC6  2A1F                    1369          MOVE.L  (SP)+,D5    ;restore data
00001BC8  BC3C 0002               1370          CMP.B   #2,D6
00001BCC  6700 0016               1371          BEQ     BYTEBSCH
00001BD0  BC3C 0004               1372          CMP.B   #4,D6
00001BD4  6700 001C               1373          BEQ     WORDBSCH
00001BD8  BC3C 0008               1374          CMP.B   #8,D6
00001BDC  6700 0022               1375          BEQ     LONGBSCH
00001BE0  6000 03FC               1376          BRA     ERRORSR
00001BE4                          1377          
00001BE4                          1378  BYTEBSCH:
00001BE4  BDCD                    1379          CMP.L   A5,A6
00001BE6  6D00 0070               1380          BLT     ENDBSCH
00001BEA  BA1D                    1381          CMP.B   (A5)+,D5
00001BEC  6700 0020               1382          BEQ     FOUNDB
00001BF0  60F2                    1383          BRA     BYTEBSCH
00001BF2                          1384  
00001BF2                          1385  WORDBSCH:
00001BF2  BDCD                    1386          CMP.L   A5,A6
00001BF4  6D00 0062               1387          BLT     ENDBSCH
00001BF8  BA5D                    1388          CMP.W   (A5)+,D5
00001BFA  6700 001A               1389          BEQ     FOUNDW
00001BFE  60F2                    1390          BRA     WORDBSCH
00001C00                          1391  
00001C00                          1392  LONGBSCH:
00001C00  BDCD                    1393          CMP.L   A5,A6
00001C02  6D00 0054               1394          BLT     ENDBSCH
00001C06  BA9D                    1395          CMP.L   (A5)+,D5
00001C08  6700 0014               1396          BEQ     FOUNDL
00001C0C  60F2                    1397          BRA     LONGBSCH
00001C0E                          1398  
00001C0E                          1399  
00001C0E                          1400  
00001C0E                          1401  FOUNDB:
00001C0E  538D                    1402          SUB.L   #1,A5
00001C10  1615                    1403          MOVE.B  (A5),D3
00001C12  6000 000E               1404          BRA     SUCCESSTEXT
00001C16                          1405  FOUNDW:
00001C16  558D                    1406          SUB.L   #2,A5
00001C18  3615                    1407          MOVE.W  (A5),D3
00001C1A  6000 0006               1408          BRA     SUCCESSTEXT
00001C1E                          1409  FOUNDL:
00001C1E  598D                    1410          SUB.L   #4,A5
00001C20  2615                    1411          MOVE.L  (A5),D3
00001C22                          1412          
00001C22                          1413  SUCCESSTEXT:
00001C22  43F8 3729               1414          LEA BSCH1,A1
00001C26  7206                    1415          MOVE.L  #6,D1
00001C28  7001                    1416          MOVE.L  #1,D0
00001C2A  4E4F                    1417          TRAP    #15
00001C2C                          1418  
00001C2C  4EB9 0000206A           1419          JSR     HEXTOASCII
00001C32  224A                    1420          MOVE.L  A2,A1
00001C34  97CA                    1421          SUB.L   A2,A3
00001C36  220B                    1422          MOVE.L  A3,D1   ;how many bytes
00001C38  7000                    1423          MOVE.L  #0,D0
00001C3A  4E4F                    1424          TRAP    #15
00001C3C                          1425          
00001C3C  43F8 372F               1426          LEA BSCH2,A1
00001C40  7212                    1427          MOVE.L  #18,D1
00001C42  7001                    1428          MOVE.L  #1,D0
00001C44  4E4F                    1429          TRAP    #15
00001C46                          1430          
00001C46  260D                    1431          MOVE.L  A5,D3
00001C48  4EB9 0000206A           1432          JSR     HEXTOASCII
00001C4E  224A                    1433          MOVE.L  A2,A1
00001C50  97CA                    1434          SUB.L   A2,A3
00001C52  220B                    1435          MOVE.L  A3,D1   ;how many bytes
00001C54  7000                    1436          MOVE.L  #0,D0
00001C56  4E4F                    1437          TRAP    #15
00001C58                          1438  
00001C58                          1439          
00001C58                          1440  ENDBSCH:        
00001C58  6000 F43C               1441          BRA RESTORE
00001C5C                          1442  
00001C5C                          1443  *--------------------------------------------------------------------------------------*
00001C5C                          1444  
00001C5C                          1445  GO:    
00001C5C  2449                    1446          MOVE.L  A1,A2   ;setup for hex conversion
00001C5E  264A                    1447          MOVE.L  A2,A3   
00001C60                          1448  GGETEND:
00001C60  0C1B 0000               1449          CMP.B   #$00,(A3)+
00001C64  6700 0004               1450          BEQ     EXECUTE
00001C68  60F6                    1451          BRA     GGETEND
00001C6A                          1452          
00001C6A                          1453  EXECUTE:
00001C6A  538B                    1454          SUB.L   #1,A3   ;off by one error
00001C6C  4EB9 0000202A           1455          JSR     ASCII_ADDRESS
00001C72  2045                    1456          MOVE.L  D5,A0   
00001C74  4E90                    1457          JSR     (A0)    ;go to program
00001C76                          1458          **NOTE: THE PROGRAM MUST HAVE RTS OR CONTROL WILL NOT BE RETURNED BACK TO MONITOR441!!!**
00001C76  6000 F41E               1459          BRA RESTORE
00001C7A                          1460  
00001C7A                          1461  *--------------------------------------------------------------------------------------*
00001C7A                          1462  
00001C7A                          1463  DF:    *Registers have already been saved to STACK, just need to pop them off first*
00001C7A                          1464          *Stack looks like this*
00001C7A                          1465          
00001C7A                          1466          *-------------*
00001C7A                          1467          *|D0-D7/A0-A6|*
00001C7A                          1468          *|     USP   |*
00001C7A                          1469          *|     SR    |*
00001C7A                          1470          *|     SSP   |*
00001C7A                          1471          *|     PC    |*
00001C7A                          1472          *-------------*
00001C7A                          1473          *I should've used loops for efficiency but runtime is not a design constraint*
00001C7A                          1474          *Maybe fix this in the future?*
00001C7A                          1475          
00001C7A                          1476            *----------D0-----------*
00001C7A  43F8 3752               1477         LEA      RD0,A1
00001C7E  7204                    1478         MOVE.L   #4,D1
00001C80  7001                    1479         MOVE.L   #1,D0
00001C82  4E4F                    1480         TRAP     #15
00001C84  261F                    1481         MOVE.L   (SP)+,D3    
00001C86  4EB9 0000206A           1482         JSR      HEXTOASCII
00001C8C  224A                    1483         MOVE.L   A2,A1
00001C8E  95CB                    1484         SUB.L    A3,A2
00001C90  240A                    1485         MOVE.L   A2,D2
00001C92  B4BC FFFFFFF8           1486         CMP.L    #-8,D2
00001C98  6700 0006               1487         BEQ      D0DONTWORRY
00001C9C                          1488  D0ACCOUNTFORZEROS:
00001C9C  5082                    1489          ADDI.L  #8,D2
00001C9E  93C2                    1490          SUB.L   D2,A1
00001CA0                          1491  D0DONTWORRY:
00001CA0  7000                    1492         MOVE.L   #0,D0
00001CA2  7208                    1493         MOVE.L   #8,D1
00001CA4  4E4F                    1494         TRAP     #15
00001CA6                          1495         
00001CA6                          1496             *----------D1-----------*
00001CA6  43F8 3756               1497         LEA      RD1,A1
00001CAA  7204                    1498         MOVE.L   #4,D1
00001CAC  7001                    1499         MOVE.L   #1,D0
00001CAE  4E4F                    1500         TRAP     #15
00001CB0  261F                    1501         MOVE.L   (SP)+,D3    
00001CB2  4EB9 0000206A           1502         JSR      HEXTOASCII
00001CB8  224A                    1503         MOVE.L   A2,A1
00001CBA  95CB                    1504         SUB.L    A3,A2
00001CBC  240A                    1505         MOVE.L   A2,D2
00001CBE  B4BC FFFFFFF8           1506         CMP.L    #-8,D2
00001CC4  6700 0006               1507         BEQ      D1DONTWORRY
00001CC8                          1508  D1ACCOUNTFORZEROS:
00001CC8  5082                    1509          ADDI.L  #8,D2
00001CCA  93C2                    1510          SUB.L   D2,A1
00001CCC                          1511  D1DONTWORRY:
00001CCC  7000                    1512         MOVE.L   #0,D0
00001CCE  7208                    1513         MOVE.L   #8,D1
00001CD0  4E4F                    1514         TRAP     #15
00001CD2                          1515         
00001CD2                          1516             *----------D2-----------*
00001CD2  43F8 375A               1517         LEA      RD2,A1
00001CD6  7204                    1518         MOVE.L   #4,D1
00001CD8  7001                    1519         MOVE.L   #1,D0
00001CDA  4E4F                    1520         TRAP     #15
00001CDC  261F                    1521         MOVE.L   (SP)+,D3   
00001CDE  4EB9 0000206A           1522         JSR      HEXTOASCII
00001CE4  224A                    1523         MOVE.L   A2,A1
00001CE6  95CB                    1524         SUB.L    A3,A2
00001CE8  240A                    1525         MOVE.L   A2,D2
00001CEA  B4BC FFFFFFF8           1526         CMP.L    #-8,D2
00001CF0  6700 0006               1527         BEQ      D2DONTWORRY
00001CF4                          1528  D2ACCOUNTFORZEROS:
00001CF4  5082                    1529          ADDI.L  #8,D2
00001CF6  93C2                    1530          SUB.L   D2,A1
00001CF8                          1531  D2DONTWORRY:
00001CF8  7000                    1532         MOVE.L   #0,D0
00001CFA  7208                    1533         MOVE.L   #8,D1
00001CFC  4E4F                    1534         TRAP     #15
00001CFE                          1535         
00001CFE                          1536              *----------D3-----------*
00001CFE  43F8 375E               1537         LEA      RD3,A1
00001D02  7204                    1538         MOVE.L   #4,D1
00001D04  7001                    1539         MOVE.L   #1,D0
00001D06  4E4F                    1540         TRAP     #15   
00001D08  261F                    1541         MOVE.L   (SP)+,D3  
00001D0A  4EB9 0000206A           1542         JSR      HEXTOASCII
00001D10  224A                    1543         MOVE.L   A2,A1
00001D12  95CB                    1544         SUB.L    A3,A2
00001D14  240A                    1545         MOVE.L   A2,D2
00001D16  B4BC FFFFFFF8           1546         CMP.L    #-8,D2
00001D1C  6700 0006               1547         BEQ      D3DONTWORRY
00001D20                          1548  D3ACCOUNTFORZEROS:
00001D20  5082                    1549          ADDI.L  #8,D2
00001D22  93C2                    1550          SUB.L   D2,A1
00001D24                          1551  D3DONTWORRY:
00001D24  7000                    1552         MOVE.L   #0,D0
00001D26  7208                    1553         MOVE.L   #8,D1
00001D28  4E4F                    1554         TRAP     #15
00001D2A                          1555         
00001D2A                          1556              *----------D4-----------*
00001D2A  43F8 3762               1557         LEA      RD4,A1
00001D2E  7204                    1558         MOVE.L   #4,D1
00001D30  7001                    1559         MOVE.L   #1,D0
00001D32  4E4F                    1560         TRAP     #15
00001D34  261F                    1561         MOVE.L   (SP)+,D3    
00001D36  4EB9 0000206A           1562         JSR      HEXTOASCII
00001D3C  224A                    1563         MOVE.L   A2,A1
00001D3E  95CB                    1564         SUB.L    A3,A2
00001D40  240A                    1565         MOVE.L   A2,D2
00001D42  B4BC FFFFFFF8           1566         CMP.L    #-8,D2
00001D48  6700 0006               1567         BEQ      D4DONTWORRY
00001D4C                          1568  D4ACCOUNTFORZEROS:
00001D4C  5082                    1569          ADDI.L  #8,D2
00001D4E  93C2                    1570          SUB.L   D2,A1
00001D50                          1571  D4DONTWORRY:
00001D50  7000                    1572         MOVE.L   #0,D0
00001D52  7208                    1573         MOVE.L   #8,D1
00001D54  4E4F                    1574         TRAP     #15
00001D56                          1575         
00001D56                          1576         *----------D5-----------*
00001D56  43F8 3766               1577         LEA      RD5,A1
00001D5A  7204                    1578         MOVE.L   #4,D1
00001D5C  7001                    1579         MOVE.L   #1,D0
00001D5E  4E4F                    1580         TRAP     #15
00001D60  261F                    1581         MOVE.L   (SP)+,D3    
00001D62  4EB9 0000206A           1582         JSR      HEXTOASCII
00001D68  224A                    1583         MOVE.L   A2,A1
00001D6A  95CB                    1584         SUB.L    A3,A2
00001D6C  240A                    1585         MOVE.L   A2,D2
00001D6E  B4BC FFFFFFF8           1586         CMP.L    #-8,D2
00001D74  6700 0006               1587         BEQ      D5DONTWORRY
00001D78                          1588  D5ACCOUNTFORZEROS:
00001D78  5082                    1589          ADDI.L  #8,D2
00001D7A  93C2                    1590          SUB.L   D2,A1
00001D7C                          1591  D5DONTWORRY:
00001D7C  7000                    1592         MOVE.L   #0,D0
00001D7E  7208                    1593         MOVE.L   #8,D1
00001D80  4E4F                    1594         TRAP     #15
00001D82                          1595  
00001D82                          1596          *----------D6-----------*
00001D82  43F8 376A               1597         LEA      RD6,A1
00001D86  7204                    1598         MOVE.L   #4,D1
00001D88  7001                    1599         MOVE.L   #1,D0
00001D8A  4E4F                    1600         TRAP     #15
00001D8C  261F                    1601         MOVE.L   (SP)+,D3    
00001D8E  4EB9 0000206A           1602         JSR      HEXTOASCII
00001D94  224A                    1603         MOVE.L   A2,A1
00001D96  95CB                    1604         SUB.L    A3,A2
00001D98  240A                    1605         MOVE.L   A2,D2
00001D9A  B4BC FFFFFFF8           1606         CMP.L    #-8,D2
00001DA0  6700 0006               1607         BEQ      D6DONTWORRY
00001DA4                          1608  D6ACCOUNTFORZEROS:
00001DA4  5082                    1609          ADDI.L  #8,D2
00001DA6  93C2                    1610          SUB.L   D2,A1
00001DA8                          1611  D6DONTWORRY:
00001DA8  7000                    1612         MOVE.L   #0,D0
00001DAA  7208                    1613         MOVE.L   #8,D1
00001DAC  4E4F                    1614         TRAP     #15
00001DAE                          1615         
00001DAE                          1616           *----------D7-----------*
00001DAE  43F8 376E               1617         LEA      RD7,A1
00001DB2  7204                    1618         MOVE.L   #4,D1
00001DB4  7001                    1619         MOVE.L   #1,D0
00001DB6  4E4F                    1620         TRAP     #15
00001DB8  261F                    1621         MOVE.L   (SP)+,D3    
00001DBA  4EB9 0000206A           1622         JSR      HEXTOASCII
00001DC0  224A                    1623         MOVE.L   A2,A1
00001DC2  95CB                    1624         SUB.L    A3,A2
00001DC4  240A                    1625         MOVE.L   A2,D2
00001DC6  B4BC FFFFFFF8           1626         CMP.L    #-8,D2
00001DCC  6700 0006               1627         BEQ      D7DONTWORRY
00001DD0                          1628  D7ACCOUNTFORZEROS:
00001DD0  5082                    1629          ADDI.L  #8,D2
00001DD2  93C2                    1630          SUB.L   D2,A1
00001DD4                          1631  D7DONTWORRY:
00001DD4  7000                    1632         MOVE.L   #0,D0
00001DD6  7208                    1633         MOVE.L   #8,D1
00001DD8  4E4F                    1634         TRAP     #15
00001DDA                          1635  
00001DDA                          1636     *----------A0-----------*
00001DDA  43F8 3772               1637         LEA      RA0,A1
00001DDE  7204                    1638         MOVE.L   #4,D1
00001DE0  7001                    1639         MOVE.L   #1,D0
00001DE2  4E4F                    1640         TRAP     #15
00001DE4  261F                    1641         MOVE.L   (SP)+,D3    
00001DE6  4EB9 0000206A           1642         JSR      HEXTOASCII
00001DEC  224A                    1643         MOVE.L   A2,A1
00001DEE  95CB                    1644         SUB.L    A3,A2
00001DF0  240A                    1645         MOVE.L   A2,D2
00001DF2  B4BC FFFFFFF8           1646         CMP.L    #-8,D2
00001DF8  6700 0006               1647         BEQ      A0DONTWORRY
00001DFC                          1648  A0ACCOUNTFORZEROS:
00001DFC  5082                    1649          ADDI.L  #8,D2
00001DFE  93C2                    1650          SUB.L   D2,A1
00001E00                          1651  A0DONTWORRY:
00001E00  7000                    1652         MOVE.L   #0,D0
00001E02  7208                    1653         MOVE.L   #8,D1
00001E04  4E4F                    1654         TRAP     #15
00001E06                          1655         
00001E06                          1656            *----------A1-----------*
00001E06  43F8 3776               1657         LEA      RA1,A1
00001E0A  7204                    1658         MOVE.L   #4,D1
00001E0C  7001                    1659         MOVE.L   #1,D0
00001E0E  4E4F                    1660         TRAP     #15
00001E10  261F                    1661         MOVE.L   (SP)+,D3    
00001E12  4EB9 0000206A           1662         JSR      HEXTOASCII
00001E18  224A                    1663         MOVE.L   A2,A1
00001E1A  95CB                    1664         SUB.L    A3,A2
00001E1C  240A                    1665         MOVE.L   A2,D2
00001E1E  B4BC FFFFFFF8           1666         CMP.L    #-8,D2
00001E24  6700 0006               1667         BEQ      A1DONTWORRY
00001E28                          1668  A1ACCOUNTFORZEROS:
00001E28  5082                    1669          ADDI.L  #8,D2
00001E2A  93C2                    1670          SUB.L   D2,A1
00001E2C                          1671  A1DONTWORRY:
00001E2C  7000                    1672         MOVE.L   #0,D0
00001E2E  7208                    1673         MOVE.L   #8,D1
00001E30  4E4F                    1674         TRAP     #15
00001E32                          1675         
00001E32                          1676          *----------A2-----------*
00001E32  43F8 377A               1677         LEA      RA2,A1
00001E36  7204                    1678         MOVE.L   #4,D1
00001E38  7001                    1679         MOVE.L   #1,D0
00001E3A  4E4F                    1680         TRAP     #15
00001E3C  261F                    1681         MOVE.L   (SP)+,D3    
00001E3E  4EB9 0000206A           1682         JSR      HEXTOASCII
00001E44  224A                    1683         MOVE.L   A2,A1
00001E46  95CB                    1684         SUB.L    A3,A2
00001E48  240A                    1685         MOVE.L   A2,D2
00001E4A  B4BC FFFFFFF8           1686         CMP.L    #-8,D2
00001E50  6700 0006               1687         BEQ      A2DONTWORRY
00001E54                          1688  A2ACCOUNTFORZEROS:
00001E54  5082                    1689          ADDI.L  #8,D2
00001E56  93C2                    1690          SUB.L   D2,A1
00001E58                          1691  A2DONTWORRY:
00001E58  7000                    1692         MOVE.L   #0,D0
00001E5A  7208                    1693         MOVE.L   #8,D1
00001E5C  4E4F                    1694         TRAP     #15
00001E5E                          1695         
00001E5E                          1696           *----------A3-----------*
00001E5E  43F8 377E               1697         LEA      RA3,A1
00001E62  7204                    1698         MOVE.L   #4,D1
00001E64  7001                    1699         MOVE.L   #1,D0
00001E66  4E4F                    1700         TRAP     #15
00001E68  261F                    1701         MOVE.L   (SP)+,D3    
00001E6A  4EB9 0000206A           1702         JSR      HEXTOASCII
00001E70  224A                    1703         MOVE.L   A2,A1
00001E72  95CB                    1704         SUB.L    A3,A2
00001E74  240A                    1705         MOVE.L   A2,D2
00001E76  B4BC FFFFFFF8           1706         CMP.L    #-8,D2
00001E7C  6700 0006               1707         BEQ      A3DONTWORRY
00001E80                          1708  A3ACCOUNTFORZEROS:
00001E80  5082                    1709          ADDI.L  #8,D2
00001E82  93C2                    1710          SUB.L   D2,A1
00001E84                          1711  A3DONTWORRY:
00001E84  7000                    1712         MOVE.L   #0,D0
00001E86  7208                    1713         MOVE.L   #8,D1
00001E88  4E4F                    1714         TRAP     #15
00001E8A                          1715         
00001E8A                          1716          *----------A4-----------*
00001E8A  43F8 377E               1717         LEA      RA3,A1
00001E8E  7204                    1718         MOVE.L   #4,D1
00001E90  7001                    1719         MOVE.L   #1,D0
00001E92  4E4F                    1720         TRAP     #15
00001E94  261F                    1721         MOVE.L   (SP)+,D3    
00001E96  4EB9 0000206A           1722         JSR      HEXTOASCII
00001E9C  224A                    1723         MOVE.L   A2,A1
00001E9E  95CB                    1724         SUB.L    A3,A2
00001EA0  240A                    1725         MOVE.L   A2,D2
00001EA2  B4BC FFFFFFF8           1726         CMP.L    #-8,D2
00001EA8  6700 0006               1727         BEQ      A4DONTWORRY
00001EAC                          1728  A4ACCOUNTFORZEROS:
00001EAC  5082                    1729          ADDI.L  #8,D2
00001EAE  93C2                    1730          SUB.L   D2,A1
00001EB0                          1731  A4DONTWORRY:
00001EB0  7000                    1732         MOVE.L   #0,D0
00001EB2  7208                    1733         MOVE.L   #8,D1
00001EB4  4E4F                    1734         TRAP     #15
00001EB6                          1735         
00001EB6                          1736         *----------A5-----------*
00001EB6  43F8 377E               1737         LEA      RA3,A1
00001EBA  7204                    1738         MOVE.L   #4,D1
00001EBC  7001                    1739         MOVE.L   #1,D0
00001EBE  4E4F                    1740         TRAP     #15
00001EC0  261F                    1741         MOVE.L   (SP)+,D3    
00001EC2  4EB9 0000206A           1742         JSR      HEXTOASCII
00001EC8  224A                    1743         MOVE.L   A2,A1
00001ECA  95CB                    1744         SUB.L    A3,A2
00001ECC  240A                    1745         MOVE.L   A2,D2
00001ECE  B4BC FFFFFFF8           1746         CMP.L    #-8,D2
00001ED4  6700 0006               1747         BEQ      A5DONTWORRY
00001ED8                          1748  A5ACCOUNTFORZEROS:
00001ED8  5082                    1749          ADDI.L  #8,D2
00001EDA  93C2                    1750          SUB.L   D2,A1
00001EDC                          1751  A5DONTWORRY:
00001EDC  7000                    1752         MOVE.L   #0,D0
00001EDE  7208                    1753         MOVE.L   #8,D1
00001EE0  4E4F                    1754         TRAP     #15
00001EE2                          1755         
00001EE2                          1756         *----------A6-----------*
00001EE2  43F8 377E               1757         LEA      RA3,A1
00001EE6  7204                    1758         MOVE.L   #4,D1
00001EE8  7001                    1759         MOVE.L   #1,D0
00001EEA  4E4F                    1760         TRAP     #15
00001EEC  261F                    1761         MOVE.L   (SP)+,D3    
00001EEE  4EB9 0000206A           1762         JSR      HEXTOASCII
00001EF4  224A                    1763         MOVE.L   A2,A1
00001EF6  95CB                    1764         SUB.L    A3,A2
00001EF8  240A                    1765         MOVE.L   A2,D2
00001EFA  B4BC FFFFFFF8           1766         CMP.L    #-8,D2
00001F00  6700 0006               1767         BEQ      A6DONTWORRY
00001F04                          1768  A6ACCOUNTFORZEROS:
00001F04  5082                    1769          ADDI.L  #8,D2
00001F06  93C2                    1770          SUB.L   D2,A1
00001F08                          1771  A6DONTWORRY:
00001F08  7000                    1772         MOVE.L   #0,D0
00001F0A  7208                    1773         MOVE.L   #8,D1
00001F0C  4E4F                    1774         TRAP     #15
00001F0E                          1775       *-----HACK---*
00001F0E  DFFC 0000003C           1776       ADD.L  #60,SP  ;should put stack in correct place
00001F14                          1777       
00001F14                          1778                *----------USP-----------*
00001F14  43F8 3795               1779         LEA      RUS,A1
00001F18  7204                    1780         MOVE.L   #4,D1
00001F1A  7001                    1781         MOVE.L   #1,D0
00001F1C  4E4F                    1782         TRAP     #15
00001F1E  261F                    1783         MOVE.L   (SP)+,D3    
00001F20  4EB9 0000206A           1784         JSR      HEXTOASCII
00001F26  224A                    1785         MOVE.L   A2,A1
00001F28  95CB                    1786         SUB.L    A3,A2
00001F2A  240A                    1787         MOVE.L   A2,D2
00001F2C  B4BC FFFFFFF8           1788         CMP.L    #-8,D2
00001F32  6700 0006               1789         BEQ      USPDONTWORRY
00001F36                          1790  USPACCOUNTFORZEROS:
00001F36  5082                    1791          ADDI.L  #8,D2
00001F38  93C2                    1792          SUB.L   D2,A1
00001F3A                          1793  USPDONTWORRY:
00001F3A  7000                    1794         MOVE.L   #0,D0
00001F3C  7208                    1795         MOVE.L   #8,D1
00001F3E  4E4F                    1796         TRAP     #15
00001F40                          1797  
00001F40                          1798                *----------SR-----------*
00001F40  43F8 379D               1799         LEA      RSR,A1
00001F44  7204                    1800         MOVE.L   #4,D1
00001F46  7001                    1801         MOVE.L   #1,D0
00001F48  4E4F                    1802         TRAP     #15
00001F4A  361F                    1803         MOVE.W   (SP)+,D3
00001F4C  3E03                    1804         MOVE.W   D3,D7   ;temp storage to restore before return    
00001F4E  4EB9 0000206A           1805         JSR      HEXTOASCII
00001F54  224A                    1806         MOVE.L   A2,A1
00001F56  95CB                    1807         SUB.L    A3,A2
00001F58  240A                    1808         MOVE.L   A2,D2
00001F5A  B4BC FFFFFFFC           1809         CMP.L    #-4,D2
00001F60  6700 0006               1810         BEQ      SRDONTWORRY
00001F64                          1811  SRACCOUNTFORZEROS:
00001F64  5882                    1812          ADDI.L  #4,D2
00001F66  93C2                    1813          SUB.L   D2,A1
00001F68                          1814  SRDONTWORRY:
00001F68  7000                    1815         MOVE.L   #0,D0
00001F6A  7204                    1816         MOVE.L   #4,D1
00001F6C  4E4F                    1817         TRAP     #15
00001F6E                          1818         
00001F6E                          1819      *----------SS/A7-----------*
00001F6E  43F8 378E               1820         LEA      RSS,A1
00001F72  7207                    1821         MOVE.L   #7,D1
00001F74  7001                    1822         MOVE.L   #1,D0
00001F76  4E4F                    1823         TRAP     #15
00001F78  261F                    1824         MOVE.L   (SP)+,D3    
00001F7A  4EB9 0000206A           1825         JSR      HEXTOASCII
00001F80  224A                    1826         MOVE.L   A2,A1
00001F82  95CB                    1827         SUB.L    A3,A2
00001F84  240A                    1828         MOVE.L   A2,D2
00001F86  B4BC FFFFFFF8           1829         CMP.L    #-8,D2
00001F8C  6700 0006               1830         BEQ      SSDONTWORRY
00001F90                          1831  SSACCOUNTFORZEROS:
00001F90  5082                    1832          ADDI.L  #8,D2
00001F92  93C2                    1833          SUB.L   D2,A1
00001F94                          1834  SSDONTWORRY:
00001F94  7000                    1835         MOVE.L   #0,D0
00001F96  7208                    1836         MOVE.L   #8,D1
00001F98  4E4F                    1837         TRAP     #15
00001F9A                          1838         
00001F9A                          1839      *----------PC-----------*
00001F9A  43F8 3799               1840         LEA      RPC,A1
00001F9E  7204                    1841         MOVE.L   #4,D1
00001FA0  7001                    1842         MOVE.L   #1,D0
00001FA2  4E4F                    1843         TRAP     #15
00001FA4  261F                    1844         MOVE.L   (SP)+,D3    
00001FA6  4EB9 0000206A           1845         JSR      HEXTOASCII
00001FAC  224A                    1846         MOVE.L   A2,A1
00001FAE  95CB                    1847         SUB.L    A3,A2
00001FB0  240A                    1848         MOVE.L   A2,D2
00001FB2  B4BC FFFFFFF8           1849         CMP.L    #-8,D2
00001FB8  6700 0006               1850         BEQ      PCDONTWORRY
00001FBC                          1851  PCACCOUNTFORZEROS:
00001FBC  5082                    1852          ADDI.L  #8,D2
00001FBE  93C2                    1853          SUB.L   D2,A1
00001FC0                          1854  PCDONTWORRY:
00001FC0  7000                    1855         MOVE.L   #0,D0
00001FC2  7208                    1856         MOVE.L   #8,D1
00001FC4  4E4F                    1857         TRAP     #15       
00001FC6                          1858         
00001FC6                          1859     *---DF HACK RESTORE---*
00001FC6  3F07                    1860     MOVE.W   D7,-(SP)
00001FC8  DFFC FFFFFFB8           1861     ADD.L    #-72,SP
00001FCE  4CDF 7FFF               1862     MOVEM.L  (SP)+,D0-D7/A0-A6
00001FD2  DFFC 0000000C           1863     ADD.L    #12,SP  ;go back to original value
00001FD8  46DF                    1864     MOVE.W   (SP)+,SR
00001FDA                          1865          
00001FDA  6000 F03C               1866         BRA SHELL
00001FDE                          1867  
00001FDE                          1868  *--------------------------------------------------------------------------------------*
00001FDE                          1869  
00001FDE                          1870  
00001FDE                          1871  
00001FDE                          1872  ****************************COMMON SUBROUTINES NEEDED**********************************
00001FDE                          1873  
00001FDE                          1874  
00001FDE                          1875  *--------------------------------------------------------------------------------------*
00001FDE  43F8 369C               1876  ERRORSR:        LEA   ERROR,A1    ;load message
00001FE2  323C 002C               1877                  MOVE.W  #44,D1
00001FE6  7000                    1878                  MOVE.L  #0,D0
00001FE8  4E4F                    1879                  TRAP    #15
00001FEA  6000 F0AA               1880                  BRA     RESTORE
00001FEE                          1881  *--------------------------------------------------------------------------------------*
00001FEE                          1882  ASCII_TO_BCD:   *Number passed via D3 byte size only(to be expected)*
00001FEE  B67C 0046               1883                  CMP #$46,D3
00001FF2  6EEA                    1884                  BGT ERRORSR
00001FF4  B67C 0040               1885                  CMP #$40,D3
00001FF8  6E00 000A               1886                  BGT UPPER
00001FFC  0483 00000030           1887                  SUBI.L  #$30,D3
00002002  4E75                    1888                  RTS
00002004  0483 00000031           1889  UPPER:          SUBI.L  #$31,D3 ;If ASCII number is A-F
0000200A  4E75                    1890                  RTS
0000200C                          1891  *--------------------------------------------------------------------------------------*
0000200C                          1892  
0000200C                          1893  BCD_TO_HEX:     *Number passed via D3 accepts BYTE ONLY*
0000200C  2803                    1894                  MOVE.L  D3,D4   
0000200E  2A03                    1895                  MOVE.L  D3,D5
00002010  0284 000000F0           1896                  ANDI.L  #240,D4 ;upper byte
00002016  0285 0000000F           1897                  ANDI.L  #15,D5  ;lower byte
0000201C  E89C                    1898                  ROR.L   #4,D4   ;get bits into correct place
0000201E  C8FC 000A               1899                  MULU    #10,D4  ;multiply by its tens place
00002022  4283                    1900                  CLR.L   D3
00002024  D684                    1901                  ADD.L   D4,D3
00002026  D685                    1902                  ADD.L   D5,D3
00002028  4E75                    1903                  RTS
0000202A                          1904  *--------------------------------------------------------------------------------------*                
0000202A                          1905  ASCII_ADDRESS:   *Address to be converted from ascii to hex passed through A2 and A3*
0000202A                          1906                   *Returned in D5                                                    *
0000202A  4283                    1907                  CLR.L   D3
0000202C  4285                    1908                  CLR.L   D5
0000202E  220A                    1909                  MOVE.L   A2,D1
00002030  200B                    1910                  MOVE.L   A3,D0
00002032  9081                    1911                  SUB.L   D1,D0   ;store the difference in D0
00002034  7800                    1912                  MOVE.L  #0,D4   ;set up 10's place counter
00002036  5380                    1913                  SUBI.L  #1,D0
00002038  B07C 0000               1914  PLACECOUNTER:   CMP     #0,D0
0000203C  6700 0008               1915                  BEQ     CONVERTADDRESS
00002040  5884                    1916                  ADDI.L  #4,D4
00002042  5380                    1917                  SUBI.L  #1,D0
00002044  60F2                    1918                  BRA     PLACECOUNTER
00002046  B6CA                    1919  CONVERTADDRESS  CMP     A2,A3
00002048  6700 001E               1920                  BEQ     ADDRESSDONE
0000204C  4283                    1921                  CLR.L   D3
0000204E  161A                    1922                  MOVE.B  (A2)+,D3
00002050  48E7 EC30               1923                  MOVEM.L A2-A3/D0-D2/D4-D5,-(SP)   ;so regs dont get destroyed
00002054  4EB8 1FEE               1924                  JSR     ASCII_TO_BCD
00002058  4EB8 200C               1925                  JSR     BCD_TO_HEX
0000205C  4CDF 0C37               1926                  MOVEM.L (SP)+,A2-A3/D0-D2/D4-D5
00002060  E9BB                    1927                  ROL.L     D4,D3
00002062  5984                    1928                  SUBI.L  #4,D4
00002064  DA83                    1929                  ADD.L     D3,D5   ;get total
00002066  60DE                    1930                  BRA     CONVERTADDRESS
00002068  4E75                    1931  ADDRESSDONE     RTS
0000206A                          1932  
0000206A                          1933  *--------------------------------------------------------------------------------------*
0000206A                          1934  HEXTOASCII: *Result returned in address buffer from A2 to A3, HEX number passed*
0000206A                          1935              *through D3*
0000206A  4284                    1936              CLR.L   D4
0000206C  4285                    1937              CLR.L   D5
0000206E  247C 00003900           1938              MOVE.L  #$3900,A2
00002074  267C 00003932           1939              MOVE.L  #$3932,A3
0000207A                          1940  KEEP_CONVERTING:
0000207A  1803                    1941              MOVE.B  D3,D4  
0000207C  1A03                    1942              MOVE.B  D3,D5 
0000207E  E08B                    1943              LSR.L   #8,D3   ;prepare for next byte
00002080  0284 0000000F           1944              ANDI.L  #15,D4   ;get lower byte
00002086  0285 000000F0           1945              ANDI.L  #240,D5 ;get upper byte'
0000208C  E85D                    1946              ROR     #4,D5   ;move D5 into position
0000208E  B83C 0009               1947              CMP.B     #$9,D4
00002092  6E00 000C               1948              BGT     A_TO_F
00002096  0684 00000030           1949              ADDI.L  #$30,D4
0000209C  6000 0008               1950              BRA     NEXTHEX
000020A0  0684 00000037           1951  A_TO_F:     ADDI.L  #$37,D4
000020A6  BA3C 0009               1952  NEXTHEX:    CMP.B     #$9,D5
000020AA  6E00 000C               1953              BGT     A_TO_F2
000020AE  0685 00000030           1954              ADDI.L  #$30,D5
000020B4  6000 0008               1955              BRA     PUTBUFFER
000020B8  0685 00000037           1956  A_TO_F2:    ADDI.L  #$37,D5
000020BE  1704                    1957  PUTBUFFER:  MOVE.B  D4,-(A3)
000020C0  1705                    1958              MOVE.B  D5,-(A3)
000020C2  B6CA                    1959              CMP      A2,A3
000020C4  66B4                    1960              BNE      KEEP_CONVERTING
000020C6  0C12 0030               1961  RID_ZEROS:  CMP.B   #$30,(A2)
000020CA  6700 0006               1962              BEQ     ADD
000020CE  6000 0006               1963              BRA     HEXASCIIDONE
000020D2  528A                    1964  ADD:        ADD.L   #1,A2   ;increment to find start of string
000020D4  60F0                    1965              BRA     RID_ZEROS
000020D6                          1966  HEXASCIIDONE:   
000020D6  267C 00003932           1967              MOVE.L  #$3932,A3    ;end of original number
000020DC  B7CA                    1968              CMP.L   A2,A3
000020DE  6700 0006               1969              BEQ     ZEROS
000020E2  6000 0004               1970              BRA     NOTZEROS
000020E6  518A                    1971  ZEROS       SUB.L   #8,A2               
000020E8  4E75                    1972  NOTZEROS    RTS
000020EA                          1973  *--------------------------------------------------------------------------------------*
000020EA                          1974  
000020EA                          1975  
000020EA                          1976  NEXT:   ;for debugging single commands
000020EA                          1977              
000020EA                          1978              
000020EA                          1979              
000020EA                          1980              
000020EA                          1981  
000020EA                          1982  
000020EA                          1983         END    START        

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
A0ACCOUNTFORZEROS   1DFC
A0DONTWORRY         1E00
A1ACCOUNTFORZEROS   1E28
A1DONTWORRY         1E2C
A2ACCOUNTFORZEROS   1E54
A2DONTWORRY         1E58
A3ACCOUNTFORZEROS   1E80
A3DONTWORRY         1E84
A4ACCOUNTFORZEROS   1EAC
A4DONTWORRY         1EB0
A5ACCOUNTFORZEROS   1ED8
A5DONTWORRY         1EDC
A6ACCOUNTFORZEROS   1F04
A6DONTWORRY         1F08
ACMP                16A8
ADD                 20D2
ADDRESSDONE         2068
AFADDCONV           1682
AGETFIRSTADDRESS    1670
AGETSECADDRESS      1690
ARESETLOOP          16A6
ASADDCONV           169A
ASCEND              1660
ASCII_ADDRESS       202A
ASCII_TO_BCD        1FEE
ASWAP               16B6
A_TO_F              20A0
A_TO_F2             20B8
BCD_TO_HEX          200C
BF                  199C
BFGETENDADDRONE     19BA
BFGETENDDATA        19A0
BFGETLASTEND        19E0
BFNEXTADDR          19AA
BFNEXTADDRTWO       19C4
BFTEST              1160
BLCKTEST            10D4
BMOV                1A12
BMOVDONE            1A9C
BMOVTEST            113E
BSCH                1B76
BSCH1               3729
BSCH2               372F
BSCH3               3741
BSCHENDDATA         1B7A
BSCHFADDEND         1B9A
BSCHFIRSTADD        1B84
BSCHSECONDADD       1BA4
BSCHSECONDFIND      1BB2
BSCHTEST            10FA
BTST                1AA0
BTST1               36CC
BTST2               36E0
BTST3               36F1
BTST4               3703
BTST5               370E
BTSTDATALOOP        1AEE
BTSTGETENDADDRONE   1ABE
BTSTGETENDDATA      1AA4
BTSTGETLASTEND      1AD8
BTSTNEXTADDR        1AAE
BTSTNEXTADDRTWO     1AC8
BTSTTEST            111C
BUFFER              3000
BYTEBSCH            1BE4
COMPLETE            1B68
COMPUTATION         15F4
COMPUTEFIRSTADD     1A22
COMPUTEFOURTHADDRESS  1A6A
COMPUTESECONDADDRESS  1A3A
COMPUTETHIRDADDRESS  1A52
CONVERT             15D8
CONVERTADDRESS      2046
CONVERTMINUS1       15D6
D0ACCOUNTFORZEROS   1C9C
D0DONTWORRY         1CA0
D1ACCOUNTFORZEROS   1CC8
D1DONTWORRY         1CCC
D2ACCOUNTFORZEROS   1CF4
D2DONTWORRY         1CF8
D3ACCOUNTFORZEROS   1D20
D3DONTWORRY         1D24
D4ACCOUNTFORZEROS   1D4C
D4DONTWORRY         1D50
D5ACCOUNTFORZEROS   1D78
D5DONTWORRY         1D7C
D6ACCOUNTFORZEROS   1DA4
D6DONTWORRY         1DA8
D7ACCOUNTFORZEROS   1DD0
D7DONTWORRY         1DD4
DATALOOP            1A04
DATATRANSFER        1A92
DCMP                1706
DEBUG               36C9
DEFAULT             1756
DESCEND             16BE
DF                  1C7A
DFADDCONV           16E0
DFTST               116E
DGETFIRSTADDRESS    16CE
DGETSECADDRESS      16EE
DISPLOOP            1552
DONEASCEND          171C
DONEDESCEND         171C
DRESETLOOP          1704
DSADDCONV           16F8
DSWAP               1714
ECHO                128A
ECHOTEST            10AE
EEND                128C
EFOUND              1296
ENDBF               1A0E
ENDBSCH             1C58
ENDCONVERT          1606
ENDLP               1998
ENDPARSE            17E8
ENDPARSEL           1990
ENDPARSEW           18AA
ENDPTRMM            1726
ENTER               17EA
ENTERL              1992
ENTERW              18AC
ERROR               369C
ERRORSR             1FDE
EXECUTE             1C6A
FAIL                1B06
FINDEND             14BE
FINDEND1            1514
FINDEND2            1524
FINDLASTNUM         15CC
FINDNEXT            151E
FIRSTADDRESS        1A18
FONT                1090000
FOUNDB              1C0E
FOUNDL              1C1E
FOUNDW              1C16
FOURTHADDRESS       1A60
GGETEND             1C60
GO                  1C5C
GOTST               11BC
GREEN               FF00
HELP                12A4
HELPORHXDC          11D4
HELPTST             11EA
HEXASCIIDONE        20D6
HEXTOASCII          206A
HIGHHEX             15F0
HIGHHEXMM           17D8
HIGHHEXMML          197E
HIGHHEXMMW          1898
HTXT                3063
HTXT1               3074
HTXT10              35E5
HTXT11              3622
HTXT12              365A
HTXT1A              30BF
HTXT1B              30FC
HTXT2               3110
HTXT3               315B
HTXT3A              31A0
HTXT3B              31D9
HTXT3C              31ED
HTXT3D              3202
HTXT3E              321F
HTXT4               3252
HTXT4A              3299
HTXT4B              32DE
HTXT4C              32F9
HTXT4D              3317
HTXT4E              3336
HTXT5               335A
HTXT5A              33A0
HTXT6               33A9
HTXT6A              33EF
HTXT6B              3437
HTXT7               345D
HTXT7A              34A1
HTXT7B              34E9
HTXT8               3501
HTXT8A              3548
HTXT9               3570
HTXT9A              35B8
HXDC                15AC
HXDCTEST            1268
KEEP_CONVERTING     207A
LONG                18B2
LONGBSCH            1C00
MDSPCTEST           1238
MEMCONT             14C8
MEMDISP             150A
MEMNEXT             152E
MEMSET              14B6
MEMTEST             120C
MM                  1720
MMSPCTEST           125A
MODIFYLOOP          176A
MODIFYLOOPL         18C6
MODIFYLOOPW         1804
MSSPCTEST           122A
NEXT                20EA
NEXTHEX             20A6
NEXTMMSTEP          17DC
NEXTMMSTEPL         1982
NEXTMMSTEPW         189C
NOTZEROS            20E8
OUTPUTBUFF          3050
OUTPUTNUM           1624
PARSELOOP           17C0
PARSELOOPL          1966
PARSELOOPW          1880
PCACCOUNTFORZEROS   1FBC
PCDONTWORRY         1FC0
PLACECOUNTER        2038
PROMPT              3058
PUTBUFFER           20BE
RA0                 3772
RA1                 3776
RA2                 377A
RA3                 377E
RA4                 3782
RA5                 3786
RA6                 378A
RD0                 3752
RD1                 3756
RD2                 375A
RD3                 375E
RD4                 3762
RD5                 3766
RD6                 376A
RD7                 376E
READ                1AF8
RESTORE             1096
RID_ZEROS           20C6
RPC                 3799
RSR                 379D
RSS                 378E
RUS                 3795
SECONDADDRESS       1A30
SECONDLOOP          158A
SHELL               1018
SIZECHECK           1724
SORTTEST            1186
SORTW               163A
SPACE               36C8
SRACCOUNTFORZEROS   1F64
SRDONTWORRY         1F68
SSACCOUNTFORZEROS   1F90
SSDONTWORRY         1F94
START               1000
STOREDATA           19EA
STOREDATABTST       1AE2
SUCCESSTEXT         1C22
TESTOP              1BBC
THIRDADDRESS        1A48
UPPER               2004
USPACCOUNTFORZEROS  1F36
USPDONTWORRY        1F3A
WORD                17F0
WORDBSCH            1BF2
X                   171C
ZEROS               20E6

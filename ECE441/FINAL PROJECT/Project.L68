00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.02
Created On: 4/28/2015 2:31:45 AM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :  Monitor Project
00000000                             3  * Written by :  Adam Sumner 
00000000                             4  * Date       :  4/28/2015
00000000                             5  * Description:  Monitor Final Project
00000000                             6  *-----------------------------------------------------------
00000000                             7  
00000000                             8  
00000000                             9  *---------------DISCLAIMER!-------------------------*
00000000                            10  *Subroutines are not as optimized as they should be!*
00000000                            11  *Things such as checking for spaces, getting addresses, etc. *
00000000                            12  *can easily be their own subroutines to save code space!*
00000000                            13  *Luckily code size is not a huge concern*
00000000                            14  *This is why there are no plans to optimize in the future*
00000000                            15  
00000000                            16  
00000000                            17  
00003000                            18      ORG    $3000
00003000                            19      
00003000                            20  BUFFER        DS.B      80              ;space for command storage 
00003050                            21  OUTPUTBUFF    DS.B      8               ;to output numbers easily
00003058= 4D 4F 4E 49 54 4F ...     22  PROMPT        DC.B      'MONITOR441>'   ;prompt definition
00003063                            23  
00003063                            24  *Help text*
00003063= 4C 69 73 74 20 6F ...     25  HTXT          DC.B      'List of Commands:'
00003074= 4D 44 53 50 20 3C ...     26  HTXT1         DC.B      'MDSP <address1> <address2> - Memory Display: Outputs the address and memory' 
000030BF= 63 6F 6E 74 65 6E ...     27  HTXT1A        DC.B      'contents from <address1> to <address2> and from <address1> to' 
000030FC= 3C 61 64 64 72 65 ...     28  HTXT1B        DC.B      '<address2 + 16bytes>'
00003110= 48 58 44 45 43 20 ...     29  HTXT2         DC.B      'HXDEC <num> - Conversion: Converts a hexadecimal number to a decimal number'
0000315B= 53 4F 52 54 57 20 ...     30  HTXT3         DC.B      'SORTW <option> <address1> <address2> - Sort: Sorts a block of memory.'
000031A0= 3C 6F 70 74 69 6F ...     31  HTXT3A        DC.B      '<option> specifies the order in which the list is sorted:'
000031D9= 3B 41 20 2D 20 41 ...     32  HTXT3B        DC.B      ';A - Ascending Order'
000031ED= 3B 44 20 2D 20 44 ...     33  HTXT3C        DC.B      ';D - Descending Order'
00003202= 2D 28 64 65 66 61 ...     34  HTXT3D        DC.B      '-(default) - Descending Order'
0000321F= 53 6F 72 74 73 20 ...     35  HTXT3E        DC.B      'Sorts block of memory from <address1> to <address2>'
00003252= 4D 4D 20 3C 6F 70 ...     36  HTXT4         DC.B      'MM <option> <address> - Memory Modify: Display memory and, as required,'
00003299= 6D 6F 64 69 66 79 ...     37  HTXT4A        DC.B      'modify data or enter new data. <option> specifies the number of bytes'
000032DE= 64 69 73 70 6C 61 ...     38  HTXT4B        DC.B      'displayed for each address:'
000032F9= 2D 28 64 65 66 61 ...     39  HTXT4C        DC.B      '-(default) - Displays one byte'
00003317= 3B 57 20 2D 20 44 ...     40  HTXT4D        DC.B      ';W - Displays one word(2 bytes)'
00003336= 3B 4C 20 2D 20 44 ...     41  HTXT4E        DC.B      ';L - Displays one long word(4 bytes)'
0000335A= 4D 53 20 3C 64 61 ...     42  HTXT5         DC.B      'MS <data> <address> - Memory Set: Alters memory by setting <data> into' 
000033A0= 3C 61 64 64 72 65 ...     43  HTXT5A        DC.B      '<address>. Only accepts byte'
000033BC= 42 46 20 3C 64 61 ...     44  HTXT6         DC.B      'BF <data> <address1> <address2> - Block Fill: Fills memory starting at' 
00003402= 3C 61 64 64 72 65 ...     45  HTXT6A        DC.B      '<address1> to <address2>. Both must be even addresses. This command only'
0000344A= 77 6F 72 6B 73 20 ...     46  HTXT6B        DC.B      'works with a word-sized <data> pattern'
00003470= 42 4D 4F 56 20 3C ...     47  HTXT7         DC.B      'BMOV <address1> <address2> <address3> <address4> - Block Move: Moves' 
000034B4= 61 20 64 75 70 6C ...     48  HTXT7A        DC.B      'a duplicate block of memory from <address1> to <address2> into the block'
000034FC= 3C 61 64 64 72 65 ...     49  HTXT7B        DC.B      '<address3> to <address4>'
00003514= 42 54 53 54 20 3C ...     50  HTXT8         DC.B      'BTST <data> <address1> <address2> - Block Test: Tests a block of memory'
0000355B= 66 72 6F 6D 20 3C ...     51  HTXT8A        DC.B      'from <address1> to <address2> for <data>. Only accepts Byte'
00003596= 42 53 43 48 20 3C ...     52  HTXT9         DC.B      'BSCH <data> <address1> <address2> - Block Search: Searches for <data> in'
000035DE= 69 6E 20 6D 65 6D ...     53  HTXT9A        DC.B      'in memory block from <address1> to <address2>'
0000360B= 47 4F 20 3C 61 64 ...     54  HTXT10        DC.B      'GO <address> - Execute Program: Executes program at <address>'
00003648= 44 46 20 2D 20 44 ...     55  HTXT11        DC.B      'DF - Display Formatted Registers: Displays all registers'
00003680= 48 45 4C 50 20 2D ...     56  HTXT12        DC.B      'HELP - Help: Displays all available commands and their description'
000036C2= 45 43 48 4F 20 3C ...     57  HTXT13        DC.B      'ECHO <data> - Echo: Displays <data> to the terminal'
000036F5= 2E 3C 52 65 67 69 ...     58  HTXT14        DC.B      '.<Register Type><Register Number> <data>- Modify Register: Modifies the'
0000373C= 63 6F 6E 74 65 6E ...     59  HTXT15        DC.B      'contents of register <Register Type><Register Number> to <data>'
0000377B                            60  
0000377B                            61  *Error Message*
0000377B= 45 52 52 4F 52 3A ...     62  ERROR         DC.B      'ERROR: TRY COMMAND AGAIN WITH CORRECT SYNTAX'
000037A7= 45 52 52 4F 52 3A ...     63  ERROR1        DC.B      'ERROR: UNKOWN COMMAND'
000037BC                            64  *Space*
000037BC= 20                        65  SPACE         DC.B      ' '
000037BD                            66  
000037BD                            67  *Debugger Print Statement*
000037BD= 57 49 4E                  68  DEBUG         DC.B      'WIN'      
000037C0                            69  
000037C0                            70  *BTST Text*
000037C0= 4E 75 6D 62 65 72 ...     71  BTST1         DC.B      'Number written was: '
000037D4= 4E 75 6D 62 65 72 ...     72  BTST2         DC.B      'Number read was: '
000037E5= 42 6C 6F 63 6B 20 ...     73  BTST3         DC.B      'Block Test PASSES!'
000037F7= 46 41 49 4C 55 52 ...     74  BTST4         DC.B      'FAILURE!!!!'  
00003802= 45 72 72 6F 72 20 ...     75  BTST5         DC.B      'Error Occurred at address: '      
0000381D                            76  
0000381D                            77  *BSCH Text*
0000381D= 44 61 74 61 3A 20         78  BSCH1         DC.B      'Data: '
00003823= 46 6F 75 6E 64 20 ...     79  BSCH2         DC.B      'Found at address: '
00003835= 50 61 74 74 65 72 ...     80  BSCH3         DC.B      'Pattern not found'
00003846                            81  
00003846                            82  *DF Text*
00003846= 44 30 3A 20               83  RD0            DC.B      'D0: '
0000384A= 44 31 3A 20               84  RD1            DC.B      'D1: '
0000384E= 44 32 3A 20               85  RD2            DC.B      'D2: '
00003852= 44 33 3A 20               86  RD3            DC.B      'D3: '
00003856= 44 34 3A 20               87  RD4            DC.B      'D4: '
0000385A= 44 35 3A 20               88  RD5            DC.B      'D5: '
0000385E= 44 36 3A 20               89  RD6            DC.B      'D6: '
00003862= 44 37 3A 20               90  RD7            DC.B      'D7: '
00003866                            91  
00003866= 41 30 3A 20               92  RA0            DC.B      'A0: '
0000386A= 41 31 3A 20               93  RA1            DC.B      'A1: '
0000386E= 41 32 3A 20               94  RA2            DC.B      'A2: '
00003872= 41 33 3A 20               95  RA3            DC.B      'A3: '
00003876= 41 34 3A 20               96  RA4            DC.B      'A4: '
0000387A= 41 35 3A 20               97  RA5            DC.B      'A5: '
0000387E= 41 36 3A 20               98  RA6            DC.B      'A6: '
00003882                            99  
00003882= 53 53 2F 41 37 3A 20     100  RSS            DC.B      'SS/A7: '
00003889= 55 53 3A 20              101  RUS            DC.B      'US: '
0000388D= 50 43 3A 20              102  RPC            DC.B      'PC: '
00003891= 53 52 3A 20              103  RSR            DC.B      'SR: '
00003895                           104  
00003895                           105  *Exception Messages*
00003895= 41 20 42 75 73 20 ...    106  BERR_TEXT      DC.B 'A Bus Error Occured! :(',0
000038AD= 41 6E 20 41 64 64 ...    107  AERR_TEXT      DC.B 'An Address Error Occured! :(',0
000038CA= 41 6E 20 49 6C 6C ...    108  IERR_TEXT      DC.B 'An Illegal Instruction Error Occured! :(',0
000038F3= 41 20 50 72 69 76 ...    109  PERR_TEXT      DC.B 'A Privilege Error Occured! :(',0
00003911= 41 20 44 69 76 69 ...    110  ZERR_TEXT      DC.B 'A Divide by Zero Error Occured! :(',0
00003934= 41 6E 20 41 20 4C ...    111  ALERR_TEXT      DC.B 'An A Line Error Occured! :(',0
00003950= 41 6E 20 46 20 4C ...    112  FLERR_TEXT      DC.B 'An F Line Error Occured! :(',0
0000396C= 41 20 43 68 65 63 ...    113  CHKERR_TEXT      DC.B 'A Check Error Occured! :(',0
00003986                           114  
00003986= 53 53 57 3A 20 00        115  SSW            DC.B 'SSW: ',0
0000398C= 42 41 3A 20 00           116  BA             DC.B 'BA: ',0
00003991= 49 52 3A 20 00           117  IR             DC.B 'IR: ',0
00003996                           118  
00003996                           119  *Color definition for Font*
00003996  =01090000                120  FONT        EQU     $01090000  
00003996  =0000FF00                121  GREEN       EQU     $0000FF00
00003996                           122  
00001000                           123      ORG     $1000
00001000                           124  START:  
00001000  48E7 E040                125          MOVEM.L D0-D2/A1,-(SP)
00001004                           126          *Makes it look like a REAL terminal*
00001004  223C 0000FF00            127          MOVE.L  #GREEN,D1
0000100A  243C 01090000            128          MOVE.L  #FONT,D2
00001010  103C 0015                129          MOVE.B  #21,D0
00001014  4E4F                     130          TRAP    #15
00001016  4281                     131          CLR.L   D1
00001018  4282                     132          CLR.L   D2
0000101A  4200                     133          CLR.B   D0
0000101C                           134          *Load custom exceptions*
0000101C  43F9 0000259E            135          LEA BERR,A1 ;init exception handlers
00001022  21C9 0008                136          MOVE.L A1,$8
00001026  43F9 0000260C            137          LEA AERR,A1
0000102C  21C9 000C                138          MOVE.L A1,$C
00001030  43F9 0000267A            139          LEA IERR,A1
00001036  21C9 0010                140          MOVE.L A1,$10
0000103A  43F9 000026AE            141          LEA ZERR,A1
00001040  21C9 0014                142          MOVE.L A1,$14
00001044  43F9 000026FC            143          LEA CHKERR,A1
0000104A  21C9 0018                144          MOVE.L  A1,$18
0000104E  43F9 00002694            145          LEA PERR,A1
00001054  21C9 0020                146          MOVE.L A1,$20
00001058  43F9 000026C8            147          LEA ALERR,A1
0000105E  21C9 0028                148          MOVE.L A1,$28
00001062  43F9 000026E2            149          LEA FLERR,A1
00001068  21C9 002C                150          MOVE.L A1,$2C
0000106C  4CDF 0207                151          MOVEM.L (SP)+,D0-D2/A1  ;restore any preset values
00001070                           152  
00001070                           153  *--------------------------------------------------------------------------------------*
00001070                           154  SHELL:       
00001070  4878 1070                155              PEA     *           ;save PC on Stack for DF
00001074  588F                     156              ADD.L   #4,SP       ;get original value of stack pointer
00001076  2F4F FFF8                157              MOVE.L  SP,-8(SP)   ;save it
0000107A  DFFC FFFFFFF8            158              ADD.L   #-8,SP      ;update Stack position
00001080  40E7                     159              MOVE    SR,-(SP)    ;save Status register for use with DF
00001082  2F0E                     160              MOVE.L  A6,-(SP)    ;temp save
00001084  4E6E                     161              MOVE    USP,A6      ;for use with DF command
00001086  2F0E                     162              MOVE.L  A6,-(SP)    ;store USP to STACK
00001088  588F                     163              ADD.L   #4,SP       
0000108A  2C57                     164              MOVE.L  (SP),A6    ;restore original value
0000108C  2F67 0004                165              MOVE.L  -(SP),4(SP)  ;move correct value to correct stack position
00001090  588F                     166              ADD.L   #4,SP       ;point stack to CORRECT PLACE
00001092                           167              
00001092                           168  
00001092  48E7 FFFE                169              MOVEM.L D0-D7/A0-A6,-(SP)  ;save initial values of registers
00001096  48E7 FFFE                170              MOVEM.L D0-D7/A0-A6,-(SP)  ;unorthodox implementation to save registers when using DF command
0000109A                           171               
0000109A                           172                
0000109A  43F8 3058                173              LEA  PROMPT,A1      ;Load message            
0000109E  323C 000B                174              MOVE.W  #11,D1      ;load n bytes
000010A2  103C 0001                175              MOVE.B  #1,D0       ;set up trap call
000010A6  4E4F                     176              TRAP    #15
000010A8  43F8 3000                177              LEA     BUFFER,A1   ;set up storage for command
000010AC  103C 0002                178              MOVE.B  #2,D0       ;load input trap call
000010B0  4E4F                     179              TRAP    #15
000010B2  0C11 0048                180              CMP.B   #$48,(A1)   ;check for help/hxdc
000010B6  6700 017C                181              BEQ     HELPORHXDC
000010BA  0C11 004D                182              CMP.B   #$4D,(A1)   ;check for memory command
000010BE  6700 01AC                183              BEQ     MEMTEST
000010C2  0C11 0047                184              CMP.B   #$47,(A1)   ;check for go
000010C6  6700 0154                185              BEQ     GOTST
000010CA  0C11 0044                186              CMP.B   #$44,(A1)   ;check for df
000010CE  6700 00FE                187              BEQ     DFTST
000010D2  0C11 0042                188              CMP.B   #$42,(A1)   ;check for blck command
000010D6  6700 005C                189              BEQ     BLCKTEST
000010DA  0C11 0053                190              CMP.B   #$53,(A1)   ;check for sort command
000010DE  6700 0106                191              BEQ     SORTTEST
000010E2  0C11 0045                192              CMP.B   #$45,(A1)   ;check for echo command
000010E6  6700 0026                193              BEQ     ECHOTEST
000010EA  0C11 002E                194              CMP.B   #$2E,(A1)   ;check for modify register command
000010EE  6700 0204                195              BEQ     MODIFYREGTEST
000010F2  6000 172E                196              BRA     UNKNOWNCMD
000010F6  4CDF 7FFF                197  RESTORE:    MOVEM.L (SP)+,D0-D7/A0-A6
000010FA  4CDF 7FFF                198              MOVEM.L (SP)+,D0-D7/A0-A6 ;double restore because of DF hack workaround
000010FE  588F                     199              ADD.L   #4,SP       ;account for USP, it'll fix itself (it shouldn't be used)
00001100                           200                                  ;EASY68k simulator starts in supervisor mode
00001100  46DF                     201              MOVE    (SP)+,SR
00001102  201F                     202              MOVE.L  (SP)+,D0    ;save stack cuz it'll get destroyed
00001104  588F                     203              ADD.L   #4,SP       ;get rid of PC, itll fix itself
00001106  2E40                     204              MOVE.L  D0,SP
00001108  4280                     205              CLR.L   D0          ;no longer needed
0000110A                           206  
0000110A  6000 FF64                207              BRA     SHELL
0000110E                           208  *--------------------------------------------------------------------------------------*
0000110E                           209  
0000110E  5289                     210  ECHOTEST:   ADD.L   #1,A1
00001110  0C19 0043                211              CMP.B   #$43,(A1)+   ;C?
00001114  6600 170C                212              BNE     UNKNOWNCMD
00001118  0C19 0048                213              CMP.B   #$48,(A1)+   ;H?
0000111C  6600 1704                214              BNE     UNKNOWNCMD
00001120  0C19 004F                215              CMP.B   #$4F,(A1)+   ;O?
00001124  6600 16FC                216              BNE     UNKNOWNCMD
00001128  0C19 0020                217              CMP.B   #$20,(A1)+   ;SPACE?
0000112C  6700 01DC                218              BEQ     ECHO
00001130  6000 15E4                219              BRA     ERRORSR
00001134                           220  *--------------------------------------------------------------------------------------*
00001134                           221  
00001134                           222  
00001134                           223  *--------------------------------------------------------------------------------------*
00001134                           224  
00001134  5289                     225  BLCKTEST:   ADD.L   #1,A1
00001136  0C11 0046                226              CMP.B   #$46,(A1)   ;BF?
0000113A  6700 0084                227              BEQ     BFTEST
0000113E  0C11 004D                228              CMP.B   #$4D,(A1)   ;BMOV?
00001142  6700 005A                229              BEQ     BMOVTEST
00001146  0C11 0054                230              CMP.B   #$54,(A1)   ;BTST?
0000114A  6700 0030                231              BEQ     BTSTTEST
0000114E  0C11 0053                232              CMP.B   #$53,(A1)   ;BSCH?
00001152  6700 0006                233              BEQ     BSCHTEST
00001156  6000 16CA                234              BRA     UNKNOWNCMD
0000115A                           235  *--------------------------------------------------------------------------------------*
0000115A                           236  
0000115A  5289                     237  BSCHTEST:   ADD.L   #1,A1
0000115C  0C11 0043                238              CMP.B   #$43,(A1)
00001160  6600 16C0                239              BNE     UNKNOWNCMD
00001164  5289                     240              ADD.L   #1,A1
00001166  0C11 0048                241              CMP.B   #$48,(A1)
0000116A  6600 16B6                242              BNE     UNKNOWNCMD
0000116E  5289                     243              ADD.L   #1,A1
00001170  0C11 0020                244              CMP.B   #$20,(A1)
00001174  6600 15A0                245              BNE     ERRORSR
00001178  6000 0FBC                246              BRA     BSCH
0000117C                           247                        
0000117C                           248  *--------------------------------------------------------------------------------------*
0000117C                           249  
0000117C                           250  BTSTTEST:   
0000117C  5289                     251              ADD.L   #1,A1
0000117E  0C11 0053                252              CMP.B   #$53,(A1)
00001182  6600 169E                253              BNE     UNKNOWNCMD
00001186  5289                     254              ADD.L   #1,A1
00001188  0C11 0054                255              CMP.B   #$54,(A1)
0000118C  6600 1694                256              BNE     UNKNOWNCMD
00001190  5289                     257              ADD.L   #1,A1
00001192  0C11 0020                258              CMP.B   #$20,(A1)
00001196  6600 157E                259              BNE     ERRORSR
0000119A  6000 0EC4                260              BRA     BTST
0000119E                           261  
0000119E                           262  *--------------------------------------------------------------------------------------*
0000119E                           263  
0000119E  5289                     264  BMOVTEST:   ADD.L   #1,A1
000011A0  0C11 004F                265              CMP.B   #$4F,(A1)
000011A4  6600 167C                266              BNE     UNKNOWNCMD
000011A8  5289                     267              ADD.L   #1,A1
000011AA  0C11 0056                268              CMP.B   #$56,(A1)
000011AE  6600 1672                269              BNE     UNKNOWNCMD
000011B2  5289                     270              ADD.L   #1,A1
000011B4  0C11 0020                271              CMP.B   #$20,(A1)
000011B8  6600 155C                272              BNE     ERRORSR
000011BC  6000 0E12                273              BRA     BMOV
000011C0                           274  *--------------------------------------------------------------------------------------*
000011C0  5289                     275  BFTEST:     ADD.L   #1,A1
000011C2  0C11 0020                276              CMP.B   #$20,(A1)
000011C6  6600 154E                277              BNE     ERRORSR
000011CA  6000 0D8E                278              BRA     BF
000011CE                           279  *--------------------------------------------------------------------------------------*
000011CE                           280  
000011CE  5289                     281  DFTST:      ADD.L   #1,A1
000011D0  0C11 0046                282              CMP.B   #$46,(A1)
000011D4  6600 164C                283              BNE     UNKNOWNCMD
000011D8  5289                     284              ADD.L   #1,A1
000011DA  0C11 0000                285              CMP.B   #$00,(A1)
000011DE  6600 1536                286              BNE     ERRORSR
000011E2  6000 1056                287              BRA     DF
000011E6                           288  *--------------------------------------------------------------------------------------*
000011E6                           289  
000011E6  5289                     290  SORTTEST:    ADD.L   #1,A1
000011E8  0C11 004F                291              CMP.B   #$4F,(A1)   ;O?
000011EC  6600 1634                292              BNE     UNKNOWNCMD
000011F0  5289                     293               ADD.L   #1,A1
000011F2  0C11 0052                294              CMP.B   #$52,(A1)   ;R?
000011F6  6600 162A                295              BNE     UNKNOWNCMD
000011FA  5289                     296              ADD.L   #1,A1
000011FC  0C11 0054                297              CMP.B   #$54,(A1)   ;T?
00001200  6600 1620                298              BNE     UNKNOWNCMD
00001204  5289                     299              ADD.L   #1,A1
00001206  0C11 0057                300              CMP.B   #$57,(A1)   ;W?
0000120A  6600 1616                301              BNE     UNKNOWNCMD
0000120E  5289                     302              ADD.L   #1,A1
00001210  0C11 0020                303              CMP.B   #$20,(A1)
00001214  6600 1500                304              BNE     ERRORSR
00001218                           305  
00001218  6000 0912                306              BRA     SORTW
0000121C                           307  *--------------------------------------------------------------------------------------*
0000121C                           308  
0000121C  5289                     309  GOTST:      ADD.L   #1,A1
0000121E  0C11 004F                310              CMP.B   #$4F,(A1)
00001222  6600 15FE                311              BNE     UNKNOWNCMD
00001226  5289                     312              ADD.L   #1,A1
00001228  0C19 0020                313              CMP.B   #$20,(A1)+
0000122C  6600 14E8                314              BNE     ERRORSR
00001230  6000 0FEA                315              BRA     GO
00001234                           316  *--------------------------------------------------------------------------------------*
00001234                           317  
00001234  5289                     318  HELPORHXDC: ADD.L   #1,A1
00001236  0C11 0045                319              CMP.B   #$45,(A1)   ;is it help?
0000123A  6700 000E                320              BEQ     HELPTST
0000123E  0C11 0058                321              CMP.B   #$58,(A1)   ;or is it hxdc
00001242  6700 0084                322              BEQ     HXDCTEST
00001246  6000 15DA                323              BRA     UNKNOWNCMD     
0000124A                           324  *--------------------------------------------------------------------------------------*
0000124A                           325  
0000124A                           326  HELPTST:   
0000124A  5289                     327             ADD.L   #1,A1   ; check next char
0000124C  0C11 004C                328             CMP.B    #$4C,(A1) ;check for L
00001250  6600 15D0                329             BNE      UNKNOWNCMD
00001254  5289                     330             ADD.L   #1,A1
00001256  0C11 0050                331             CMP.B    #$50,(A1)   ;check for P
0000125A  6600 15C6                332             BNE      UNKNOWNCMD
0000125E  5289                     333             ADD.L   #1,A1   ;check for anything else
00001260  0C11 0000                334             CMP.B    #$00,(A1)
00001264  6600 14B0                335             BNE      ERRORSR
00001268  6000 050E                336             BRA      HELP
0000126C                           337              
0000126C                           338  
0000126C                           339   
0000126C                           340  *--------------------------------------------------------------------------------------*
0000126C                           341              
0000126C  5289                     342  MEMTEST:    ADD.L   #1,A1
0000126E  0C11 0053                343              CMP.B   #$53,(A1)
00001272  6700 0016                344              BEQ     MSSPCTEST
00001276  0C11 0044                345              CMP.B   #$44,(A1)
0000127A  6700 001C                346              BEQ     MDSPCTEST
0000127E  0C11 004D                347              CMP.B   #$4D,(A1)
00001282  6700 0036                348              BEQ     MMSPCTEST
00001286  6000 159A                349              BRA     UNKNOWNCMD
0000128A                           350              
0000128A  5289                     351  MSSPCTEST   ADD.L   #1,A1
0000128C  0C11 0020                352              CMP.B   #$20,(A1)
00001290  6700 072E                353              BEQ     MEMSET
00001294  6000 1480                354              BRA     ERRORSR
00001298                           355              
00001298                           356  MDSPCTEST:  
00001298  5289                     357              ADD.L   #1,A1
0000129A  0C11 0053                358              CMP.B   #$53,(A1)
0000129E  6600 1476                359              BNE     ERRORSR
000012A2  5289                     360              ADD.L   #1,A1
000012A4  0C11 0050                361              CMP.B   #$50,(A1)
000012A8  6600 1578                362              BNE     UNKNOWNCMD
000012AC  5289                     363              ADD.L   #1,A1
000012AE  0C11 0020                364              CMP.B   #$20,(A1)
000012B2  6700 0748                365              BEQ     MEMDISP          
000012B6  6000 145E                366              BRA     ERRORSR
000012BA                           367             
000012BA  5289                     368  MMSPCTEST:  ADD.L   #1,A1
000012BC  0C11 0020                369              CMP.B   #$20,(A1)
000012C0  6700 099E                370              BEQ     MM          
000012C4  6000 1450                371              BRA     ERRORSR
000012C8                           372  *--------------------------------------------------------------------------------------*
000012C8                           373  HXDCTEST:   
000012C8  5289                     374              ADD.L   #1,A1
000012CA  0C11 0044                375              CMP.B   #$44,(A1)
000012CE  6600 1552                376              BNE    UNKNOWNCMD
000012D2  5289                     377              ADD.L   #1,A1
000012D4  0C11 0045                378              CMP.B   #$45,(A1)
000012D8  6600 1548                379              BNE     UNKNOWNCMD
000012DC  5289                     380              ADD.L   #1,A1
000012DE  0C11 0043                381              CMP.B   #$43,(A1)
000012E2  6600 153E                382              BNE     UNKNOWNCMD
000012E6  5289                     383              ADD.L   #1,A1
000012E8  0C11 0020                384              CMP.B   #$20,(A1)
000012EC  6600 1428                385              BNE     ERRORSR
000012F0  6000 07AC                386              BRA     HXDC
000012F4                           387  *--------------------------------------------------------------------------------------*
000012F4                           388  MODIFYREGTEST:
000012F4  5289                     389              ADD.L   #1,A1
000012F6  0C11 0044                390              CMP.B   #$44,(A1)
000012FA  6700 0028                391              BEQ     MRD
000012FE  0C11 0041                392              CMP.B   #$41,(A1)
00001302  6700 0066                393              BEQ     MRA
00001306  6000 151A                394              BRA     UNKNOWNCMD
0000130A                           395              
0000130A                           396  *----------------------------USER DEFINED COMMANDS---------------------------------*
0000130A                           397  *--------------------------------------------------------------------------------------*
0000130A                           398  ECHO: *What terminal DOESN'T have echo?*
0000130A                           399  
0000130A  2449                     400          MOVE.L  A1,A2   ;setup to find end of string
0000130C  0C1A 0000                401  EEND:   CMP.B   #$00,(A2)+
00001310  6700 0004                402          BEQ     EFOUND
00001314  60F6                     403          BRA     EEND
00001316                           404  EFOUND:
00001316  538A                     405          SUB.L   #1,A2   ;off by one
00001318  95C9                     406          SUB.L   A1,A2   ;find out how many bytes
0000131A  220A                     407          MOVE.L  A2,D1   ;place it for trap function
0000131C  7000                     408          MOVE.L  #0,D0
0000131E  4E4F                     409          TRAP    #15
00001320                           410          
00001320  6000 FDD4                411          BRA RESTORE
00001324                           412  *--------------------------------------------------------------------------------------*
00001324                           413  MODIFYREGS:
00001324                           414  
00001324                           415  MRD:
00001324  5289                     416          ADD.L   #1,A1   ;inc
00001326  0C11 0030                417          CMP.B   #$30,(A1)
0000132A  6700 007C                418          BEQ     MRD0
0000132E  0C11 0031                419          CMP.B   #$31,(A1)
00001332  6700 00B4                420          BEQ     MRD1
00001336  0C11 0032                421          CMP.B   #$32,(A1)
0000133A  6700 00EC                422          BEQ     MRD2
0000133E  0C11 0033                423          CMP.B   #$33,(A1)
00001342  6700 0124                424          BEQ     MRD3
00001346  0C11 0034                425          CMP.B   #$34,(A1)
0000134A  6700 015C                426          BEQ     MRD4
0000134E  0C11 0035                427          CMP.B   #$35,(A1)
00001352  6700 0194                428          BEQ     MRD5
00001356  0C11 0036                429          CMP.B   #$36,(A1)
0000135A  6700 01CC                430          BEQ     MRD6
0000135E  0C11 0037                431          CMP.B   #$37,(A1)
00001362  6700 0204                432          BEQ     MRD7
00001366  6000 13AE                433          BRA     ERRORSR
0000136A                           434  
0000136A                           435  MRA:
0000136A  5289                     436          ADD.L   #1,A1   ;inc
0000136C  0C11 0030                437          CMP.B   #$30,(A1)
00001370  6700 0236                438          BEQ     MRA0
00001374  0C11 0031                439          CMP.B   #$31,(A1)
00001378  6700 026E                440          BEQ     MRA1
0000137C  0C11 0032                441          CMP.B   #$32,(A1)
00001380  6700 02A6                442          BEQ     MRA2
00001384  0C11 0033                443          CMP.B   #$33,(A1)
00001388  6700 02DE                444          BEQ     MRA3
0000138C  0C11 0034                445          CMP.B   #$34,(A1)
00001390  6700 0316                446          BEQ     MRA4
00001394  0C11 0035                447          CMP.B   #$35,(A1)
00001398  6700 034E                448          BEQ     MRA5
0000139C  0C11 0036                449          CMP.B   #$36,(A1)
000013A0  6700 0386                450          BEQ     MRA6
000013A4  6000 1370                451          BRA     ERRORSR
000013A8                           452               
000013A8                           453  
000013A8                           454  
000013A8                           455          
000013A8                           456          
000013A8                           457  MRD0: 
000013A8  5289                     458          ADD.L   #1,A1
000013AA  0C19 0020                459          CMP.B   #$20,(A1)+
000013AE  6600 1366                460          BNE     ERRORSR
000013B2  2449                     461          MOVE.L  A1,A2
000013B4  264A                     462          MOVE.L  A2,A3
000013B6  4EB9 00001768            463          JSR     MRDFINDDATA
000013BC  538B                     464          SUB.L   #1,A3
000013BE  4EB9 00002762            465          JSR     ASCII_ADDRESS   ;convert data to hex
000013C4  2F05                     466          MOVE.L  D5,-(SP)        ;store it temporarily
000013C6  588F                     467          ADD.L   #4,SP       ;dont lose data
000013C8  4CDF 7FFF                468          MOVEM.L (SP)+,D0-D7/A0-A6
000013CC  4CDF 7FFF                469          MOVEM.L (SP)+,D0-D7/A0-A6 ;double restore because of DF hack workaround
000013D0  588F                     470          ADD.L   #4,SP       ;account for USP, it'll fix itself (it shouldn't be used)
000013D2                           471                                  ;EASY68k simulator starts in supervisor mode
000013D2  46DF                     472          MOVE    (SP)+,SR
000013D4  588F                     473          ADD.L   #4,SP       ;skip saved stack
000013D6  9FFC 00000086            474          SUB.L   #134,SP     ;find data again
000013DC  2017                     475          MOVE.L  (SP),D0
000013DE  DFFC 0000008A            476          ADD.L   #138,SP     ;go back to original spot
000013E4  6000 FC8A                477          BRA     SHELL
000013E8                           478               
000013E8                           479  MRD1:
000013E8  5289                     480          ADD.L   #1,A1
000013EA  0C19 0020                481          CMP.B   #$20,(A1)+
000013EE  6600 1326                482          BNE     ERRORSR
000013F2  2449                     483          MOVE.L  A1,A2
000013F4  264A                     484          MOVE.L  A2,A3
000013F6  4EB9 00001768            485          JSR     MRDFINDDATA
000013FC  538B                     486          SUB.L   #1,A3
000013FE  4EB9 00002762            487          JSR     ASCII_ADDRESS   ;convert data to hex
00001404  2F05                     488          MOVE.L  D5,-(SP)        ;store it temporarily
00001406  588F                     489          ADD.L   #4,SP       ;dont lose data
00001408  4CDF 7FFF                490          MOVEM.L (SP)+,D0-D7/A0-A6
0000140C  4CDF 7FFF                491          MOVEM.L (SP)+,D0-D7/A0-A6 ;double restore because of DF hack workaround
00001410  588F                     492          ADD.L   #4,SP       ;account for USP, it'll fix itself (it shouldn't be used)
00001412                           493                                  ;EASY68k simulator starts in supervisor mode
00001412  46DF                     494          MOVE    (SP)+,SR
00001414  588F                     495          ADD.L   #4,SP       ;skip saved stack
00001416  9FFC 00000086            496          SUB.L   #134,SP     ;find data again
0000141C  2217                     497          MOVE.L  (SP),D1
0000141E  DFFC 0000008A            498          ADD.L   #138,SP     ;go back to original spot
00001424  6000 FC4A                499          BRA     SHELL
00001428                           500  
00001428                           501  MRD2:
00001428  5289                     502          ADD.L   #1,A1
0000142A  0C19 0020                503          CMP.B   #$20,(A1)+
0000142E  6600 12E6                504          BNE     ERRORSR
00001432  2449                     505          MOVE.L  A1,A2
00001434  264A                     506          MOVE.L  A2,A3
00001436  4EB9 00001768            507          JSR     MRDFINDDATA
0000143C  538B                     508          SUB.L   #1,A3
0000143E  4EB9 00002762            509          JSR     ASCII_ADDRESS   ;convert data to hex
00001444  2F05                     510          MOVE.L  D5,-(SP)        ;store it temporarily
00001446  588F                     511          ADD.L   #4,SP       ;dont lose data
00001448  4CDF 7FFF                512          MOVEM.L (SP)+,D0-D7/A0-A6
0000144C  4CDF 7FFF                513          MOVEM.L (SP)+,D0-D7/A0-A6 ;double restore because of DF hack workaround
00001450  588F                     514          ADD.L   #4,SP       ;account for USP, it'll fix itself (it shouldn't be used)
00001452                           515                                  ;EASY68k simulator starts in supervisor mode
00001452  46DF                     516          MOVE    (SP)+,SR
00001454  588F                     517          ADD.L   #4,SP       ;skip saved stack
00001456  9FFC 00000086            518          SUB.L   #134,SP     ;find data again
0000145C  2417                     519          MOVE.L  (SP),D2
0000145E  DFFC 0000008A            520          ADD.L   #138,SP     ;go back to original spot
00001464  6000 FC0A                521          BRA     SHELL
00001468                           522  
00001468                           523  MRD3:
00001468  5289                     524          ADD.L   #1,A1
0000146A  0C19 0020                525          CMP.B   #$20,(A1)+
0000146E  6600 12A6                526          BNE     ERRORSR
00001472  2449                     527          MOVE.L  A1,A2
00001474  264A                     528          MOVE.L  A2,A3
00001476  4EB9 00001768            529          JSR     MRDFINDDATA
0000147C  538B                     530          SUB.L   #1,A3
0000147E  4EB9 00002762            531          JSR     ASCII_ADDRESS   ;convert data to hex
00001484  2F05                     532          MOVE.L  D5,-(SP)        ;store it temporarily
00001486  588F                     533          ADD.L   #4,SP       ;dont lose data
00001488  4CDF 7FFF                534          MOVEM.L (SP)+,D0-D7/A0-A6
0000148C  4CDF 7FFF                535          MOVEM.L (SP)+,D0-D7/A0-A6 ;double restore because of DF hack workaround
00001490  588F                     536          ADD.L   #4,SP       ;account for USP, it'll fix itself (it shouldn't be used)
00001492                           537                                  ;EASY68k simulator starts in supervisor mode
00001492  46DF                     538          MOVE    (SP)+,SR
00001494  588F                     539          ADD.L   #4,SP       ;skip saved stack
00001496  9FFC 00000086            540          SUB.L   #134,SP     ;find data again
0000149C  2617                     541          MOVE.L  (SP),D3
0000149E  DFFC 0000008A            542          ADD.L   #138,SP     ;go back to original spot
000014A4  6000 FBCA                543          BRA     SHELL
000014A8                           544  
000014A8                           545  MRD4:
000014A8  5289                     546          ADD.L   #1,A1
000014AA  0C19 0020                547          CMP.B   #$20,(A1)+
000014AE  6600 1266                548          BNE     ERRORSR
000014B2  2449                     549          MOVE.L  A1,A2
000014B4  264A                     550          MOVE.L  A2,A3
000014B6  4EB9 00001768            551          JSR     MRDFINDDATA
000014BC  538B                     552          SUB.L   #1,A3
000014BE  4EB9 00002762            553          JSR     ASCII_ADDRESS   ;convert data to hex
000014C4  2F05                     554          MOVE.L  D5,-(SP)        ;store it temporarily
000014C6  588F                     555          ADD.L   #4,SP       ;dont lose data
000014C8  4CDF 7FFF                556          MOVEM.L (SP)+,D0-D7/A0-A6
000014CC  4CDF 7FFF                557          MOVEM.L (SP)+,D0-D7/A0-A6 ;double restore because of DF hack workaround
000014D0  588F                     558          ADD.L   #4,SP       ;account for USP, it'll fix itself (it shouldn't be used)
000014D2                           559                                  ;EASY68k simulator starts in supervisor mode
000014D2  46DF                     560          MOVE    (SP)+,SR
000014D4  588F                     561          ADD.L   #4,SP       ;skip saved stack
000014D6  9FFC 00000086            562          SUB.L   #134,SP     ;find data again
000014DC  2817                     563          MOVE.L  (SP),D4
000014DE  DFFC 0000008A            564          ADD.L   #138,SP     ;go back to original spot
000014E4  6000 FB8A                565          BRA     SHELL
000014E8                           566  
000014E8                           567  MRD5:
000014E8  5289                     568          ADD.L   #1,A1
000014EA  0C19 0020                569          CMP.B   #$20,(A1)+
000014EE  6600 1226                570          BNE     ERRORSR
000014F2  2449                     571          MOVE.L  A1,A2
000014F4  264A                     572          MOVE.L  A2,A3
000014F6  4EB9 00001768            573          JSR     MRDFINDDATA
000014FC  538B                     574          SUB.L   #1,A3
000014FE  4EB9 00002762            575          JSR     ASCII_ADDRESS   ;convert data to hex
00001504  2F05                     576          MOVE.L  D5,-(SP)        ;store it temporarily
00001506  588F                     577          ADD.L   #4,SP       ;dont lose data
00001508  4CDF 7FFF                578          MOVEM.L (SP)+,D0-D7/A0-A6
0000150C  4CDF 7FFF                579          MOVEM.L (SP)+,D0-D7/A0-A6 ;double restore because of DF hack workaround
00001510  588F                     580          ADD.L   #4,SP       ;account for USP, it'll fix itself (it shouldn't be used)
00001512                           581                                  ;EASY68k simulator starts in supervisor mode
00001512  46DF                     582          MOVE    (SP)+,SR
00001514  588F                     583          ADD.L   #4,SP       ;skip saved stack
00001516  9FFC 00000086            584          SUB.L   #134,SP     ;find data again
0000151C  2A17                     585          MOVE.L  (SP),D5
0000151E  DFFC 0000008A            586          ADD.L   #138,SP     ;go back to original spot
00001524  6000 FB4A                587          BRA     SHELL
00001528                           588  
00001528                           589  MRD6:
00001528  5289                     590          ADD.L   #1,A1
0000152A  0C19 0020                591          CMP.B   #$20,(A1)+
0000152E  6600 11E6                592          BNE     ERRORSR
00001532  2449                     593          MOVE.L  A1,A2
00001534  264A                     594          MOVE.L  A2,A3
00001536  4EB9 00001768            595          JSR     MRDFINDDATA
0000153C  538B                     596          SUB.L   #1,A3
0000153E  4EB9 00002762            597          JSR     ASCII_ADDRESS   ;convert data to hex
00001544  2F05                     598          MOVE.L  D5,-(SP)        ;store it temporarily
00001546  588F                     599          ADD.L   #4,SP       ;dont lose data
00001548  4CDF 7FFF                600          MOVEM.L (SP)+,D0-D7/A0-A6
0000154C  4CDF 7FFF                601          MOVEM.L (SP)+,D0-D7/A0-A6 ;double restore because of DF hack workaround
00001550  588F                     602          ADD.L   #4,SP       ;account for USP, it'll fix itself (it shouldn't be used)
00001552                           603                                  ;EASY68k simulator starts in supervisor mode
00001552  46DF                     604          MOVE    (SP)+,SR
00001554  588F                     605          ADD.L   #4,SP       ;skip saved stack
00001556  9FFC 00000086            606          SUB.L   #134,SP     ;find data again
0000155C  2C17                     607          MOVE.L  (SP),D6
0000155E  DFFC 0000008A            608          ADD.L   #138,SP     ;go back to original spot
00001564  6000 FB0A                609          BRA     SHELL
00001568                           610  
00001568                           611  MRD7:
00001568  5289                     612          ADD.L   #1,A1
0000156A  0C19 0020                613          CMP.B   #$20,(A1)+
0000156E  6600 11A6                614          BNE     ERRORSR
00001572  2449                     615          MOVE.L  A1,A2
00001574  264A                     616          MOVE.L  A2,A3
00001576  4EB9 00001768            617          JSR     MRDFINDDATA
0000157C  538B                     618          SUB.L   #1,A3
0000157E  4EB9 00002762            619          JSR     ASCII_ADDRESS   ;convert data to hex
00001584  2F05                     620          MOVE.L  D5,-(SP)        ;store it temporarily
00001586  588F                     621          ADD.L   #4,SP       ;dont lose data
00001588  4CDF 7FFF                622          MOVEM.L (SP)+,D0-D7/A0-A6
0000158C  4CDF 7FFF                623          MOVEM.L (SP)+,D0-D7/A0-A6 ;double restore because of DF hack workaround
00001590  588F                     624          ADD.L   #4,SP       ;account for USP, it'll fix itself (it shouldn't be used)
00001592                           625                                  ;EASY68k simulator starts in supervisor mode
00001592  46DF                     626          MOVE    (SP)+,SR
00001594  588F                     627         ADD.L   #4,SP       ;skip saved stack
00001596  9FFC 00000086            628          SUB.L   #134,SP     ;find data again
0000159C  2E17                     629          MOVE.L  (SP),D7
0000159E  DFFC 0000008A            630          ADD.L   #138,SP     ;go back to original spot
000015A4  6000 FACA                631          BRA     SHELL
000015A8                           632  
000015A8                           633  MRA0:
000015A8  5289                     634          ADD.L   #1,A1
000015AA  0C19 0020                635          CMP.B   #$20,(A1)+
000015AE  6600 1166                636          BNE     ERRORSR
000015B2  2449                     637          MOVE.L  A1,A2
000015B4  264A                     638          MOVE.L  A2,A3
000015B6  4EB9 00001768            639          JSR     MRDFINDDATA
000015BC  538B                     640          SUB.L   #1,A3
000015BE  4EB9 00002762            641          JSR     ASCII_ADDRESS   ;convert data to hex
000015C4  2F05                     642          MOVE.L  D5,-(SP)        ;store it temporarily
000015C6  588F                     643          ADD.L   #4,SP       ;dont lose data
000015C8  4CDF 7FFF                644          MOVEM.L (SP)+,D0-D7/A0-A6
000015CC  4CDF 7FFF                645          MOVEM.L (SP)+,D0-D7/A0-A6 ;double restore because of DF hack workaround
000015D0  588F                     646          ADD.L   #4,SP       ;account for USP, it'll fix itself (it shouldn't be used)
000015D2                           647                                  ;EASY68k simulator starts in supervisor mode
000015D2  46DF                     648          MOVE    (SP)+,SR
000015D4  588F                     649          ADD.L   #4,SP       ;skip saved stack
000015D6  9FFC 00000086            650          SUB.L   #134,SP     ;find data again
000015DC  2057                     651          MOVE.L  (SP),A0
000015DE  DFFC 0000008A            652          ADD.L   #138,SP     ;go back to original spot
000015E4  6000 FA8A                653          BRA     SHELL
000015E8                           654  MRA1:
000015E8  5289                     655          ADD.L   #1,A1
000015EA  0C19 0020                656          CMP.B   #$20,(A1)+
000015EE  6600 1126                657          BNE     ERRORSR
000015F2  2449                     658          MOVE.L  A1,A2
000015F4  264A                     659          MOVE.L  A2,A3
000015F6  4EB9 00001768            660          JSR     MRDFINDDATA
000015FC  538B                     661          SUB.L   #1,A3
000015FE  4EB9 00002762            662          JSR     ASCII_ADDRESS   ;convert data to hex
00001604  2F05                     663          MOVE.L  D5,-(SP)        ;store it temporarily
00001606  588F                     664          ADD.L   #4,SP       ;dont lose data
00001608  4CDF 7FFF                665          MOVEM.L (SP)+,D0-D7/A0-A6
0000160C  4CDF 7FFF                666          MOVEM.L (SP)+,D0-D7/A0-A6 ;double restore because of DF hack workaround
00001610  588F                     667          ADD.L   #4,SP       ;account for USP, it'll fix itself (it shouldn't be used)
00001612                           668                                  ;EASY68k simulator starts in supervisor mode
00001612  46DF                     669          MOVE    (SP)+,SR
00001614  588F                     670         ADD.L   #4,SP       ;skip saved stack
00001616  9FFC 00000086            671          SUB.L   #134,SP     ;find data again
0000161C  2257                     672          MOVE.L  (SP),A1
0000161E  DFFC 0000008A            673          ADD.L   #138,SP     ;go back to original spot
00001624  6000 FA4A                674          BRA     SHELL
00001628                           675  
00001628                           676  MRA2:
00001628  5289                     677          ADD.L   #1,A1
0000162A  0C19 0020                678          CMP.B   #$20,(A1)+
0000162E  6600 10E6                679          BNE     ERRORSR
00001632  2449                     680          MOVE.L  A1,A2
00001634  264A                     681          MOVE.L  A2,A3
00001636  4EB9 00001768            682          JSR     MRDFINDDATA
0000163C  538B                     683          SUB.L   #1,A3
0000163E  4EB9 00002762            684          JSR     ASCII_ADDRESS   ;convert data to hex
00001644  2F05                     685          MOVE.L  D5,-(SP)        ;store it temporarily
00001646  588F                     686          ADD.L   #4,SP       ;dont lose data
00001648  4CDF 7FFF                687          MOVEM.L (SP)+,D0-D7/A0-A6
0000164C  4CDF 7FFF                688          MOVEM.L (SP)+,D0-D7/A0-A6 ;double restore because of DF hack workaround
00001650  588F                     689          ADD.L   #4,SP       ;account for USP, it'll fix itself (it shouldn't be used)
00001652                           690                                  ;EASY68k simulator starts in supervisor mode
00001652  46DF                     691          MOVE    (SP)+,SR
00001654  588F                     692          ADD.L   #4,SP       ;skip saved stack
00001656  9FFC 00000086            693          SUB.L   #134,SP     ;find data again
0000165C  2457                     694          MOVE.L  (SP),A2
0000165E  DFFC 0000008A            695          ADD.L   #138,SP     ;go back to original spot
00001664  6000 FA0A                696          BRA     SHELL
00001668                           697          
00001668                           698  MRA3:
00001668  5289                     699          ADD.L   #1,A1
0000166A  0C19 0020                700          CMP.B   #$20,(A1)+
0000166E  6600 10A6                701          BNE     ERRORSR
00001672  2449                     702          MOVE.L  A1,A2
00001674  264A                     703          MOVE.L  A2,A3
00001676  4EB9 00001768            704          JSR     MRDFINDDATA
0000167C  538B                     705          SUB.L   #1,A3
0000167E  4EB9 00002762            706          JSR     ASCII_ADDRESS   ;convert data to hex
00001684  2F05                     707          MOVE.L  D5,-(SP)        ;store it temporarily
00001686  588F                     708          ADD.L   #4,SP       ;dont lose data
00001688  4CDF 7FFF                709          MOVEM.L (SP)+,D0-D7/A0-A6
0000168C  4CDF 7FFF                710          MOVEM.L (SP)+,D0-D7/A0-A6 ;double restore because of DF hack workaround
00001690  588F                     711          ADD.L   #4,SP       ;account for USP, it'll fix itself (it shouldn't be used)
00001692                           712                                  ;EASY68k simulator starts in supervisor mode
00001692  46DF                     713          MOVE    (SP)+,SR
00001694  588F                     714          ADD.L   #4,SP       ;skip saved stack
00001696  9FFC 00000086            715          SUB.L   #134,SP     ;find data again
0000169C  2657                     716          MOVE.L  (SP),A3
0000169E  DFFC 0000008A            717          ADD.L   #138,SP     ;go back to original spot
000016A4  6000 F9CA                718          BRA     SHELL
000016A8                           719  
000016A8                           720  MRA4:
000016A8  5289                     721          ADD.L   #1,A1
000016AA  0C19 0020                722          CMP.B   #$20,(A1)+
000016AE  6600 1066                723          BNE     ERRORSR
000016B2  2449                     724          MOVE.L  A1,A2
000016B4  264A                     725          MOVE.L  A2,A3
000016B6  4EB9 00001768            726          JSR     MRDFINDDATA
000016BC  538B                     727          SUB.L   #1,A3
000016BE  4EB9 00002762            728          JSR     ASCII_ADDRESS   ;convert data to hex
000016C4  2F05                     729          MOVE.L  D5,-(SP)        ;store it temporarily
000016C6  588F                     730          ADD.L   #4,SP       ;dont lose data
000016C8  4CDF 7FFF                731          MOVEM.L (SP)+,D0-D7/A0-A6
000016CC  4CDF 7FFF                732          MOVEM.L (SP)+,D0-D7/A0-A6 ;double restore because of DF hack workaround
000016D0  588F                     733          ADD.L   #4,SP       ;account for USP, it'll fix itself (it shouldn't be used)
000016D2                           734                                  ;EASY68k simulator starts in supervisor mode
000016D2  46DF                     735          MOVE    (SP)+,SR
000016D4  588F                     736          ADD.L   #4,SP       ;skip saved stack
000016D6  9FFC 00000086            737          SUB.L   #134,SP     ;find data again
000016DC  2857                     738          MOVE.L  (SP),A4
000016DE  DFFC 0000008A            739          ADD.L   #138,SP     ;go back to original spot
000016E4  6000 F98A                740          BRA     SHELL
000016E8                           741  
000016E8                           742  MRA5:
000016E8  5289                     743          ADD.L   #1,A1
000016EA  0C19 0020                744          CMP.B   #$20,(A1)+
000016EE  6600 1026                745          BNE     ERRORSR
000016F2  2449                     746          MOVE.L  A1,A2
000016F4  264A                     747          MOVE.L  A2,A3
000016F6  4EB9 00001768            748          JSR     MRDFINDDATA
000016FC  538B                     749          SUB.L   #1,A3
000016FE  4EB9 00002762            750          JSR     ASCII_ADDRESS   ;convert data to hex
00001704  2F05                     751          MOVE.L  D5,-(SP)        ;store it temporarily
00001706  588F                     752          ADD.L   #4,SP       ;dont lose data
00001708  4CDF 7FFF                753          MOVEM.L (SP)+,D0-D7/A0-A6
0000170C  4CDF 7FFF                754          MOVEM.L (SP)+,D0-D7/A0-A6 ;double restore because of DF hack workaround
00001710  588F                     755          ADD.L   #4,SP       ;account for USP, it'll fix itself (it shouldn't be used)
00001712                           756                                  ;EASY68k simulator starts in supervisor mode
00001712  46DF                     757          MOVE    (SP)+,SR
00001714  588F                     758         ADD.L   #4,SP       ;skip saved stack
00001716  9FFC 00000086            759          SUB.L   #134,SP     ;find data again
0000171C  2A57                     760          MOVE.L  (SP),A5
0000171E  DFFC 0000008A            761          ADD.L   #138,SP     ;go back to original spot
00001724  6000 F94A                762          BRA     SHELL
00001728                           763  
00001728                           764  MRA6:
00001728  5289                     765          ADD.L   #1,A1
0000172A  0C19 0020                766          CMP.B   #$20,(A1)+
0000172E  6600 0FE6                767          BNE     ERRORSR
00001732  2449                     768          MOVE.L  A1,A2
00001734  264A                     769          MOVE.L  A2,A3
00001736  4EB9 00001768            770          JSR     MRDFINDDATA
0000173C  538B                     771          SUB.L   #1,A3
0000173E  4EB9 00002762            772          JSR     ASCII_ADDRESS   ;convert data to hex
00001744  2F05                     773          MOVE.L  D5,-(SP)        ;store it temporarily
00001746  588F                     774          ADD.L   #4,SP       ;dont lose data
00001748  4CDF 7FFF                775          MOVEM.L (SP)+,D0-D7/A0-A6
0000174C  4CDF 7FFF                776          MOVEM.L (SP)+,D0-D7/A0-A6 ;double restore because of DF hack workaround
00001750  588F                     777          ADD.L   #4,SP       ;account for USP, it'll fix itself (it shouldn't be used)
00001752                           778                                  ;EASY68k simulator starts in supervisor mode
00001752  46DF                     779          MOVE    (SP)+,SR
00001754  588F                     780          ADD.L   #4,SP       ;skip saved stack
00001756  9FFC 00000086            781          SUB.L   #134,SP     ;find data again
0000175C  2C57                     782          MOVE.L  (SP),A6
0000175E  DFFC 0000008A            783          ADD.L   #138,SP     ;go back to original spot
00001764  6000 F90A                784          BRA     SHELL
00001768                           785  
00001768                           786  MRDFINDDATA:
00001768  0C1B 0000                787          CMP.B   #$00,(A3)+
0000176C  6700 0004                788          BEQ     GOBACK
00001770  60F6                     789          BRA     MRDFINDDATA
00001772  4E75                     790  GOBACK: RTS
00001774                           791          
00001774                           792  
00001774  6000 F980                793          BRA RESTORE
00001778                           794  *--------------------REQUIRED COMMAND DEFINITION START---------------------------------*
00001778                           795  *--------------------------------------------------------------------------------------*
00001778  43F8 3063                796  HELP:       LEA     HTXT,A1     ;list of commands test
0000177C  323C 0011                797              MOVE.W  #17,D1
00001780  103C 0000                798              MOVE.B  #0,D0
00001784  4E4F                     799              TRAP    #15
00001786  323C 0000                800              MOVE.W  #0,D1       ;newline
0000178A  4E4F                     801              TRAP    #15
0000178C                           802              
0000178C  43F8 3074                803              LEA     HTXT1,A1    ;mem display command
00001790  323C 004B                804              MOVE.W  #75,D1
00001794  103C 0000                805              MOVE.B  #0,D0
00001798  4E4F                     806              TRAP    #15
0000179A  43F8 30BF                807              LEA     HTXT1A,A1   ;mem display
0000179E  323C 003D                808              MOVE.W  #61,D1
000017A2  103C 0000                809              MOVE.B  #0,D0
000017A6  4E4F                     810              TRAP    #15
000017A8  43F8 30FC                811              LEA     HTXT1B,A1   ;mem display
000017AC  323C 0014                812              MOVE.W  #20,D1
000017B0  103C 0000                813              MOVE.B  #0,D0
000017B4  4E4F                     814              TRAP    #15
000017B6  323C 0000                815              MOVE.W  #0,D1       ;newline
000017BA  4E4F                     816              TRAP    #15
000017BC                           817              
000017BC  43F8 3110                818              LEA     HTXT2,A1    ;hxdec command text
000017C0  323C 004B                819              MOVE.W  #75,D1
000017C4  103C 0000                820              MOVE.B  #0,D0
000017C8  4E4F                     821              TRAP    #15
000017CA  123C 0000                822              MOVE.B  #0,D1       ;newline
000017CE  4E4F                     823              TRAP    #15
000017D0                           824              
000017D0  43F8 315B                825              LEA     HTXT3,A1    ;sort command text
000017D4  323C 0045                826              MOVE.W  #69,D1
000017D8  103C 0000                827              MOVE.B  #0,D0
000017DC  4E4F                     828              TRAP    #15
000017DE  43F8 31A0                829              LEA     HTXT3A,A1    ;sort command text continued
000017E2  323C 0039                830              MOVE.W  #57,D1
000017E6  103C 0000                831              MOVE.B  #0,D0
000017EA  4E4F                     832              TRAP    #15
000017EC  43F8 31D9                833              LEA     HTXT3B,A1    ;sort command text continued
000017F0  323C 0014                834              MOVE.W  #20,D1
000017F4  103C 0000                835              MOVE.B  #0,D0
000017F8  4E4F                     836              TRAP    #15
000017FA  43F8 31ED                837              LEA     HTXT3C,A1    ;sort command text continued
000017FE  323C 0015                838              MOVE.W  #21,D1
00001802  103C 0000                839              MOVE.B  #0,D0
00001806  4E4F                     840              TRAP    #15
00001808  43F8 3202                841              LEA     HTXT3D,A1    ;sort command text continued
0000180C  323C 001D                842              MOVE.W  #29,D1
00001810  103C 0000                843              MOVE.B  #0,D0
00001814  4E4F                     844              TRAP    #15
00001816  43F8 321F                845              LEA     HTXT3E,A1    ;sort command text continued
0000181A  323C 0033                846              MOVE.W  #51,D1
0000181E  103C 0000                847              MOVE.B  #0,D0
00001822  4E4F                     848              TRAP    #15
00001824  123C 0000                849              MOVE.B  #0,D1       ;newline
00001828  4E4F                     850              TRAP    #15
0000182A                           851              
0000182A  43F8 3252                852              LEA     HTXT4,A1    ;memory modify command text 
0000182E  323C 0047                853              MOVE.W  #71,D1
00001832  103C 0000                854              MOVE.B  #0,D0
00001836  4E4F                     855              TRAP    #15
00001838  43F8 3299                856              LEA     HTXT4A,A1    ;mem modify command text continued
0000183C  323C 0045                857              MOVE.W  #69,D1
00001840  103C 0000                858              MOVE.B  #0,D0
00001844  4E4F                     859              TRAP    #15
00001846  43F8 32DE                860              LEA     HTXT4B,A1    ;mem modify command text continued
0000184A  323C 001B                861              MOVE.W  #27,D1
0000184E  103C 0000                862              MOVE.B  #0,D0
00001852  4E4F                     863              TRAP    #15
00001854  43F8 32F9                864              LEA     HTXT4C,A1    ;mem modify command text continued
00001858  323C 001E                865              MOVE.W  #30,D1
0000185C  103C 0000                866              MOVE.B  #0,D0
00001860  4E4F                     867              TRAP    #15
00001862  43F8 3317                868              LEA     HTXT4D,A1    ;mem modify command text continued
00001866  323C 001F                869              MOVE.W  #31,D1
0000186A  103C 0000                870              MOVE.B  #0,D0
0000186E  4E4F                     871              TRAP    #15
00001870  43F8 3336                872              LEA     HTXT4E,A1    ;mem modify command text continued
00001874  323C 0024                873              MOVE.W  #36,D1
00001878  103C 0000                874              MOVE.B  #0,D0
0000187C  4E4F                     875              TRAP    #15
0000187E  123C 0000                876              MOVE.B  #0,D1
00001882  4E4F                     877              TRAP    #15         ;newline
00001884                           878              
00001884  43F8 335A                879              LEA     HTXT5,A1    ;memory set command text 
00001888  323C 0046                880              MOVE.W  #70,D1
0000188C  103C 0000                881              MOVE.B  #0,D0
00001890  4E4F                     882              TRAP    #15
00001892  43F8 33A0                883              LEA     HTXT5A,A1    ;memory set command text continued
00001896  323C 001C                884              MOVE.W  #28,D1
0000189A  103C 0000                885              MOVE.B  #0,D0
0000189E  4E4F                     886              TRAP    #15
000018A0  123C 0000                887              MOVE.B  #0,D1       ;newline
000018A4  4E4F                     888              TRAP    #15
000018A6                           889              
000018A6  43F8 33BC                890              LEA     HTXT6,A1    ;block fill command text
000018AA  323C 0046                891              MOVE.W  #70,D1
000018AE  103C 0000                892              MOVE.B  #0,D0
000018B2  4E4F                     893              TRAP    #15
000018B4  43F8 3402                894              LEA     HTXT6A,A1    ;block fill command text
000018B8  323C 0048                895              MOVE.W  #72,D1
000018BC  103C 0000                896              MOVE.B  #0,D0
000018C0  4E4F                     897              TRAP    #15
000018C2  43F8 344A                898              LEA     HTXT6B,A1    ;block fill command text
000018C6  323C 0026                899              MOVE.W  #38,D1
000018CA  103C 0000                900              MOVE.B  #0,D0
000018CE  4E4F                     901              TRAP    #15
000018D0  123C 0000                902              MOVE.B  #0,D1
000018D4  4E4F                     903              TRAP    #15         ;newline
000018D6                           904              
000018D6                           905              
000018D6  43F8 3470                906              LEA     HTXT7,A1    ;block move command text
000018DA  323C 0044                907              MOVE.W  #68,D1
000018DE  103C 0000                908              MOVE.B  #0,D0
000018E2  4E4F                     909              TRAP    #15
000018E4  43F8 34B4                910              LEA     HTXT7A,A1    ;block move command text
000018E8  323C 0048                911              MOVE.W  #72,D1
000018EC  103C 0000                912              MOVE.B  #0,D0
000018F0  4E4F                     913              TRAP    #15
000018F2  43F8 34FC                914              LEA     HTXT7B,A1    ;block move command text
000018F6  323C 0018                915              MOVE.W  #24,D1
000018FA  103C 0000                916              MOVE.B  #0,D0
000018FE  4E4F                     917              TRAP    #15
00001900  123C 0000                918              MOVE.B  #0,D1       ;newline
00001904  4E4F                     919              TRAP    #15
00001906                           920              
00001906  43F8 3514                921              LEA     HTXT8,A1    ;block test command text
0000190A  323C 0047                922              MOVE.W  #71,D1
0000190E  103C 0000                923              MOVE.B  #0,D0
00001912  4E4F                     924              TRAP    #15
00001914  43F8 355B                925              LEA     HTXT8A,A1    ;block test command text
00001918  323C 003B                926              MOVE.W  #59,D1
0000191C  103C 0000                927              MOVE.B  #0,D0
00001920  4E4F                     928              TRAP    #15
00001922  123C 0000                929              MOVE.B  #0,D1       ;newline
00001926  4E4F                     930              TRAP    #15
00001928                           931              
00001928  43F8 3596                932              LEA     HTXT9,A1    ;block search command text
0000192C  323C 0046                933              MOVE.W  #70,D1
00001930  103C 0000                934              MOVE.B  #0,D0
00001934  4E4F                     935              TRAP    #15
00001936  43F8 35DE                936              LEA     HTXT9A,A1    ;block search command text
0000193A  323C 002D                937              MOVE.W  #45,D1
0000193E  103C 0000                938              MOVE.B  #0,D0
00001942  4E4F                     939              TRAP    #15
00001944  123C 0000                940              MOVE.B  #0,D1       ;newline
00001948  4E4F                     941              TRAP    #15
0000194A                           942              
0000194A  43F8 360B                943              LEA     HTXT10,A1    ;go command text
0000194E  323C 003D                944              MOVE.W  #61,D1
00001952  103C 0000                945              MOVE.B  #0,D0
00001956  4E4F                     946              TRAP    #15
00001958  123C 0000                947              MOVE.B  #0,D1      ;newline
0000195C  4E4F                     948              TRAP    #15
0000195E                           949  
0000195E  43F8 3648                950              LEA     HTXT11,A1   ;df command text   
00001962  323C 0038                951              MOVE.W  #56,D1
00001966  103C 0000                952              MOVE.B  #0,D0
0000196A  4E4F                     953              TRAP    #15
0000196C  123C 0000                954              MOVE.B  #0,D1
00001970  4E4F                     955              TRAP    #15
00001972                           956              
00001972  43F8 3680                957              LEA     HTXT12,A1   ;help command text
00001976  323C 0042                958              MOVE.W  #66,D1
0000197A  103C 0000                959              MOVE.B  #0,D0
0000197E  4E4F                     960              TRAP    #15
00001980  123C 0000                961              MOVE.B  #0,D1       ;newline
00001984  4E4F                     962              TRAP    #15   
00001986                           963              
00001986  43F8 36C2                964              LEA     HTXT13,A1   ;echo command text   
0000198A  323C 0034                965              MOVE.W  #52,D1
0000198E  103C 0000                966              MOVE.B  #0,D0
00001992  4E4F                     967              TRAP    #15
00001994  123C 0000                968              MOVE.B  #0,D1       ;newline
00001998  4E4F                     969              TRAP    #15
0000199A                           970              
0000199A  43F8 36F5                971              LEA     HTXT14,A1   ;modify register command text   
0000199E  323C 0047                972              MOVE.W  #71,D1
000019A2  103C 0000                973              MOVE.B  #0,D0
000019A6  4E4F                     974              TRAP    #15
000019A8  43F8 373C                975              LEA     HTXT15,A1   ;modify register command text   
000019AC  323C 003F                976              MOVE.W  #63,D1
000019B0  103C 0000                977              MOVE.B  #0,D0
000019B4  4E4F                     978              TRAP    #15
000019B6  123C 0000                979              MOVE.B  #0,D1       ;newline
000019BA  4E4F                     980              TRAP    #15
000019BC                           981   
000019BC  6000 F738                982              BRA     RESTORE  
000019C0                           983  *--------------------------------------------------------------------------------------*
000019C0                           984  *Fix ASCII String input? ask in lab*
000019C0  45F8 3000                985  MEMSET:     LEA     BUFFER,A2
000019C4  568A                     986              ADD.L   #3,A2
000019C6  264A                     987              MOVE.L  A2,A3   ;set up to find end
000019C8  0C1B 0020                988  FINDEND:    CMP.B   #$20,(A3)+
000019CC  6700 0004                989              BEQ     MEMCONT
000019D0  60F6                     990              BRA     FINDEND
000019D2  538B                     991  MEMCONT:    SUB.L  #1,A3   ;get rid of off by one erro
000019D4  284B                     992              MOVE.L  A3,A4   ;used for data length calculator
000019D6                           993            
000019D6  4EB9 00002762            994              JSR ASCII_ADDRESS
000019DC  2E05                     995              MOVE.L  D5,D7   ;store value to be put in mem into D7
000019DE  528B                     996              ADD.L   #1,A3   ;increment to address to store it
000019E0  244B                     997              MOVE.L  A3,A2
000019E2                           998  MSFINDADDRESS:
000019E2  0C1B 0000                999              CMP.B   #$00,(A3)+
000019E6  6700 0004               1000              BEQ     MOVEDATA
000019EA  60F6                    1001              BRA     MSFINDADDRESS
000019EC                          1002  
000019EC                          1003  MOVEDATA:
000019EC  538B                    1004              SUB.L   #1,A3   ;off by one error
000019EE  4EB9 00002762           1005              JSR     ASCII_ADDRESS
000019F4  2645                    1006              MOVE.L  D5,A3   ;setup for storage
000019F6  1687                    1007              MOVE.B  D7,(A3)   ;store data 
000019F8                          1008              
000019F8                          1009  
000019F8                          1010  
000019F8                          1011            ;  MOVE.B  (A2)+,D1
000019F8                          1012            ;  MOVE.B  (A2),D2
000019F8                          1013            ;  MOVE.B  D1,D3       ;pass value to subroutine
000019F8                          1014            ;  JSR     ASCII_TO_BCD           
000019F8                          1015            ;  MOVE.B  D3,D1       ;get converted value
000019F8                          1016            ;  MOVE.B  D2,D3       ;pass value
000019F8                          1017            ;  JSR     ASCII_TO_BCD
000019F8                          1018            ;  MOVE.B  D3,D2       ;get returned value
000019F8                          1019            ;  MOVE.B  D1,D3
000019F8                          1020            ;  JSR     BCD_TO_HEX
000019F8                          1021            ;  MOVE.B  D3,D1
000019F8                          1022            ;  MOVE.B  D2,D3
000019F8                          1023            ;  JSR     BCD_TO_HEX
000019F8                          1024            ;  MOVE.B  D3,D2
000019F8                          1025            ;  ROL.L   #4,D1       ;put data in correct place
000019F8                          1026            ;  ADD     D1,D2       ;get combined data input
000019F8                          1027            ;  ADD.L   #2,A2       ;go to start of address
000019F8                          1028            ;  JSR     ASCII_ADDRESS  ;get address in workable form
000019F8                          1029            ;  MOVE.L  D5,A4       ;load target address
000019F8                          1030            ;  MOVE.B  D2,(A4)       ;put data in target address
000019F8  6000 F6FC               1031              BRA     RESTORE                 ;return to shell
000019FC                          1032  *--------------------------------------------------------------------------------------*
000019FC  45F8 3000               1033  MEMDISP:    LEA     BUFFER,A2
00001A00  7C01                    1034              MOVE.L  #1,D6       ;counter for how many times to loop
00001A02  5A8A                    1035              ADD.L   #5,A2       ;get first address
00001A04  264A                    1036              MOVE.L  A2,A3       
00001A06  0C1B 0020               1037  FINDEND1:   CMP.B   #$20,(A3)+
00001A0A  6700 0004               1038              BEQ     FINDNEXT
00001A0E  60F6                    1039              BRA     FINDEND1  
00001A10  284B                    1040  FINDNEXT:   MOVE.L  A3,A4
00001A12  2A4B                    1041              MOVE.L  A3,A5
00001A14  538B                    1042              SUB.L   #1,A3   ;get rid of off by one error
00001A16  0C1D 0000               1043  FINDEND2:   CMP.B   #$00,(A5)+
00001A1A  6700 0004               1044              BEQ     MEMNEXT
00001A1E  60F6                    1045              BRA     FINDEND2
00001A20  538D                    1046  MEMNEXT:    SUB.L   #1,A5   ;off by one error
00001A22  4EB9 00002762           1047              JSR     ASCII_ADDRESS
00001A28  2C45                    1048              MOVE.L  D5,A6   ;put 1st address in A6
00001A2A  244C                    1049              MOVE.L  A4,A2
00001A2C  264D                    1050              MOVE.L  A5,A3
00001A2E  4EB9 00002762           1051              JSR ASCII_ADDRESS
00001A34  2A45                    1052              MOVE.L  D5,A5   ;second address in A5
00001A36  204E                    1053              MOVE.L  A6,A0   ;for second run through
00001A38  224D                    1054              MOVE.L  A5,A1   ;see above comment
00001A3A  D3FC 00000010           1055              ADD.L   #16,A1 ;16 byte offset
00001A40  48E7 0040               1056              MOVEM.L A1,-(SP)
00001A44  BBCE                    1057  DISPLOOP:   CMP.L   A6,A5
00001A46  6D00 0034               1058              BLT     SECONDLOOP
00001A4A  260E                    1059              MOVE.L  A6,D3
00001A4C  4EB9 000027A2           1060              JSR     HEXTOASCII
00001A52  97CA                    1061              SUB.L   A2,A3
00001A54  220B                    1062              MOVE.L  A3,D1   ;number of ascii values to display
00001A56  224A                    1063              MOVE.L  A2,A1
00001A58  7001                    1064              MOVE.L  #1,D0
00001A5A  4E4F                    1065              TRAP    #15
00001A5C  43F8 37BC               1066              LEA     SPACE,A1
00001A60  7201                    1067              MOVE.L #1,D1
00001A62  4E4F                    1068              TRAP    #15
00001A64  4283                    1069              CLR.L   D3
00001A66  1616                    1070              MOVE.B  (A6),D3
00001A68  4EB9 000027A2           1071              JSR     HEXTOASCII
00001A6E  97CA                    1072              SUB.L   A2,A3
00001A70  220B                    1073              MOVE.L  A3,D1
00001A72  224A                    1074              MOVE.L  A2,A1
00001A74  7000                    1075              MOVE.L  #0,D0
00001A76  4E4F                    1076              TRAP    #15
00001A78  528E                    1077              ADD.L   #1,A6
00001A7A  60C8                    1078              BRA     DISPLOOP
00001A7C                          1079              
00001A7C                          1080  SECONDLOOP: 
00001A7C  103C 0000               1081              MOVE.B  #0,D0
00001A80  123C 0000               1082              MOVE.B  #0,D1
00001A84  4E4F                    1083              TRAP    #15
00001A86  4CDF 0200               1084              MOVEM.L (SP)+,A1
00001A8A  2C48                    1085              MOVE.L  A0,A6   ;reinit
00001A8C  2A49                    1086              MOVE.L  A1,A5
00001A8E  5386                    1087              SUBI.L  #1,D6
00001A90  BCBC 00000000           1088              CMP.L   #$0,D6
00001A96  67AC                    1089              BEQ     DISPLOOP
00001A98  598F                    1090              SUB.L   #4,SP   ;off by long error on stack
00001A9A  6000 F65A               1091              BRA     RESTORE
00001A9E                          1092              
00001A9E                          1093  *--------------------------------------------------------------------------------------*
00001A9E                          1094  
00001A9E  45F8 3000               1095  HXDC:   LEA BUFFER,A2   ;load buffer
00001AA2  5C8A                    1096          ADD.L   #6,A2   ; start of number
00001AA4  264A                    1097          MOVE.L  A2,A3   ;set up end pointer
00001AA6  7201                    1098          MOVE.L  #1,D1   ;set up 16's place
00001AA8  4282                    1099          CLR.L   D2      ;clear total
00001AAA  4283                    1100          CLR.L   D3      ;temp holder for number
00001AAC  4286                    1101          CLR.L   D6      ;Final Value in BCD
00001AAE  283C 00002710           1102          MOVE.L  #10000,D4    ;maximum 10's place of converted number
00001AB4  7A10                    1103          MOVE.L  #16,D5      ;Max number of rotates needed
00001AB6  4BF8 3A00               1104          LEA $3A00,A5
00001ABA  49F8 3A00               1105          LEA $3A00,A4   ;set up start pointer
00001ABE                          1106  FINDLASTNUM:    
00001ABE  0C1B 0000               1107          CMP.B #$00,(A3)+
00001AC2  6700 0004               1108          BEQ     CONVERTMINUS1
00001AC6  60F6                    1109          BRA     FINDLASTNUM
00001AC8                          1110  CONVERTMINUS1:   
00001AC8  538B                    1111               SUB.L   #1,A3 ; cure off by 1 error
00001ACA                          1112  CONVERT:
00001ACA  538B                    1113              SUB.L   #1,A3
00001ACC  B4CB                    1114              CMP   A3,A2
00001ACE  6E00 0028               1115              BGT   ENDCONVERT
00001AD2  0C13 0040               1116              CMP.B   #$40,(A3)
00001AD6  6E00 000A               1117              BGT     HIGHHEX
00001ADA  0413 0030               1118              SUBI.B  #$30,(A3)   ;get hex value
00001ADE  6000 0006               1119              BRA     COMPUTATION
00001AE2  0413 0037               1120  HIGHHEX:     SUBI.B  #$37,(A3)  ;get hex value
00001AE6                          1121  COMPUTATION:
00001AE6  1613                    1122              MOVE.B  (A3),D3 
00001AE8  C6C1                    1123              MULU    D1,D3   ;get 16's place
00001AEA                          1124             ; DIVU    #16,D3  ;get rid of off by 1 exponent error
00001AEA  C2FC 0010               1125              MULU    #16,D1  ;inc 16's place counter
00001AEE  1883                    1126              MOVE.B  D3,(A4)
00001AF0  538C                    1127              SUB.L   #1,A4
00001AF2  D483                    1128              ADD.L   D3,D2   ;store it in total for debugging 
00001AF4  4283                    1129              CLR.L   D3      ;get rid of any numbers in there   
00001AF6  60D2                    1130              BRA     CONVERT     
00001AF8                          1131  ENDCONVERT:                  ;must convert back to ascii for display
00001AF8  4283                    1132              CLR.L   D3      ;Cleared for workability
00001AFA  84C4                    1133              DIVU    D4,D2   ;get 10's place digit
00001AFC  3602                    1134              MOVE.W  D2,D3   ;extract 10's place digit to D3
00001AFE  EBBB                    1135              ROL.L   D5,D3   ;put it in its place
00001B00  4242                    1136              CLR.W   D2      ;get rid of whole number
00001B02  4842                    1137              SWAP    D2      ;keep remainder
00001B04  5985                    1138              SUBI.L  #4,D5   ;dec rotate counter
00001B06  DC83                    1139              ADD.L   D3,D6   ;put it into it's place
00001B08  88FC 000A               1140              DIVU    #10,D4  ;go down a 10's place
00001B0C  B87C 0000               1141              CMP.W   #0,D4   ;are we done
00001B10  6700 0004               1142              BEQ     OUTPUTNUM
00001B14  60E2                    1143              BRA     ENDCONVERT
00001B16                          1144              
00001B16                          1145  OUTPUTNUM:
00001B16  2606                    1146             MOVE.L   D6,D3   ;put into register for conversion to ASCII
00001B18  4EB9 000027A2           1147             JSR      HEXTOASCII
00001B1E  224A                    1148             MOVEA.L  A2,A1   ;get start of number
00001B20  96CA                    1149             SUBA     A2,A3   ;get how many bytes to output
00001B22  220B                    1150             MOVE.L   A3,D1   ;for Trap call
00001B24  7000                    1151             MOVE.L   #0,D0   
00001B26  4E4F                    1152             TRAP     #15
00001B28                          1153             
00001B28  6000 F5CC               1154             BRA RESTORE
00001B2C                          1155  
00001B2C                          1156  *--------------------------------------------------------------------------------------*
00001B2C                          1157  
00001B2C  5289                    1158  SORTW:  ADD.L   #1,A1       ;increment to check for semicolon/dash
00001B2E  0C11 002D               1159          CMP.B   #$2D,(A1)   ;check for default
00001B32  6700 001E               1160          BEQ     DEFAULTTEST
00001B36  0C19 003B               1161          CMP.B   #$3B,(A1)+
00001B3A  6600 0BDA               1162          BNE     ERRORSR
00001B3E  0C11 0041               1163          CMP.B   #$41,(A1)   ;is it ascending?
00001B42  6700 005C               1164          BEQ     ASCEND
00001B46  0C11 0044               1165          CMP.B   #$44,(A1)   ;or descending?
00001B4A  6600 0BCA               1166          BNE     ERRORSR
00001B4E  6000 00AE               1167          BRA     DESCEND
00001B52                          1168          
00001B52                          1169  DEFAULTTEST:
00001B52  5289                    1170                  ADD.L  #1,A1   ;check for paren
00001B54  0C19 0028               1171          CMP.B   #$28,(A1)+  ;(
00001B58  6600 0BBC               1172          BNE     ERRORSR
00001B5C  0C19 0064               1173          CMP.B   #$64,(A1)+  ;d
00001B60  6600 0BB4               1174          BNE     ERRORSR
00001B64  0C19 0065               1175          CMP.B   #$65,(A1)+  ;e
00001B68  6600 0BAC               1176          BNE     ERRORSR
00001B6C  0C19 0066               1177          CMP.B   #$66,(A1)+  ;f
00001B70  6600 0BA4               1178          BNE     ERRORSR
00001B74  0C19 0061               1179          CMP.B   #$61,(A1)+  ;a
00001B78  6600 0B9C               1180          BNE     ERRORSR
00001B7C  0C19 0075               1181          CMP.B   #$75,(A1)+  ;u
00001B80  6600 0B94               1182          BNE     ERRORSR
00001B84  0C19 006C               1183          CMP.B   #$6C,(A1)+  ;l
00001B88  6600 0B8C               1184          BNE     ERRORSR     
00001B8C  0C19 0074               1185          CMP.B   #$74,(A1)+  ;t
00001B90  6600 0B84               1186          BNE     ERRORSR
00001B94  0C11 0029               1187          CMP.B   #$29,(A1)  ;)
00001B98  6600 0B7C               1188          BNE     ERRORSR
00001B9C  6000 0060               1189          BRA     DESCEND
00001BA0                          1190  
00001BA0                          1191          
00001BA0                          1192  ASCEND:
00001BA0  5289                    1193         ADD.L    #1,A1   ;inc
00001BA2  0C11 0020               1194         CMP.B    #$20,(A1)   ;check space
00001BA6  6600 0B6E               1195         BNE      ERRORSR
00001BAA  5289                    1196         ADD.L    #1,A1   ;start of 1st address
00001BAC  2449                    1197         MOVE.L   A1,A2
00001BAE  264A                    1198         MOVE.L   A2,A3
00001BB0                          1199  AGETFIRSTADDRESS:
00001BB0  0C13 0000               1200         CMP.B    #$00,(A3)
00001BB4  6700 0B60               1201         BEQ      ERRORSR     ;incorrect syntax
00001BB8  0C1B 0020               1202         CMP.B    #$20,(A3)+  ;trying to find the end
00001BBC  6700 0004               1203         BEQ      AFADDCONV
00001BC0  60EE                    1204         BRA      AGETFIRSTADDRESS
00001BC2                          1205  AFADDCONV:
00001BC2  538B                    1206         SUB.L    #1,A3   ;off by one error
00001BC4  4EB9 00002762           1207         JSR ASCII_ADDRESS    ;D5 now has that address 
00001BCA  2845                    1208         MOVE.L D5,A4
00001BCC  528B                    1209         ADD.L    #1,A3   ;start of second address
00001BCE  244B                    1210         MOVE.L   A3,A2   ;setup for second address
00001BD0                          1211  AGETSECADDRESS:
00001BD0  0C1B 0000               1212         CMP.B    #$00,(A3)+  ;trying to find the end
00001BD4  6700 0004               1213         BEQ      ASADDCONV
00001BD8  60F6                    1214         BRA      AGETSECADDRESS
00001BDA                          1215  ASADDCONV:
00001BDA  538B                    1216          SUB.L   #1,A3   ;off by one
00001BDC  4EB9 00002762           1217          JSR     ASCII_ADDRESS
00001BE2  2A45                    1218          MOVE.L  D5,A5
00001BE4  2C4C                    1219          MOVEA.L  A4,A6  ;CLR A6
00001BE6                          1220          
00001BE6  284E                    1221  ARESETLOOP: MOVE.L  A6,A4    ;reset to top of loop
00001BE8  B94C                    1222  ACMP:       CMP.W   (A4)+,(A4)+  ;check adjacent mem
00001BEA  630A                    1223              BLS.S   ASWAP    
00001BEC  558C                    1224              SUBQ.L  #2,A4
00001BEE  BBCC                    1225              CMP.L   A4,A5   ;done?
00001BF0  66F6                    1226              BNE     ACMP     ;nope
00001BF2  6000 0068               1227              BRA     DONEASCEND  ;yep
00001BF6  2024                    1228  ASWAP:       MOVE.L  -(A4),D0    ;start bubbling 
00001BF8  4840                    1229              SWAP.W  D0
00001BFA  2880                    1230              MOVE.L  D0,(A4)
00001BFC  60E8                    1231              BRA     ARESETLOOP
00001BFE                          1232  
00001BFE                          1233  
00001BFE                          1234  DESCEND:
00001BFE  5289                    1235         ADD.L    #1,A1   ;inc
00001C00  0C11 0020               1236         CMP.B    #$20,(A1)   ;check space
00001C04  6600 0B10               1237         BNE      ERRORSR
00001C08  5289                    1238         ADD.L    #1,A1   ;start of 1st address
00001C0A  2449                    1239         MOVE.L   A1,A2
00001C0C  264A                    1240         MOVE.L   A2,A3
00001C0E                          1241  DGETFIRSTADDRESS:
00001C0E  0C13 0000               1242         CMP.B    #$00,(A3)
00001C12  6700 0B02               1243         BEQ      ERRORSR     ;incorrect syntax
00001C16  0C1B 0020               1244         CMP.B    #$20,(A3)+  ;trying to find the end
00001C1A  6700 0004               1245         BEQ      DFADDCONV
00001C1E  60EE                    1246         BRA      DGETFIRSTADDRESS
00001C20                          1247  DFADDCONV:
00001C20  538B                    1248         SUB.L    #1,A3   ;off by one error
00001C22  4EB9 00002762           1249         JSR ASCII_ADDRESS    ;D5 now has that address 
00001C28  2845                    1250         MOVE.L D5,A4
00001C2A  528B                    1251         ADD.L    #1,A3   ;start of second address
00001C2C  244B                    1252         MOVE.L   A3,A2   ;setup for second address
00001C2E                          1253  DGETSECADDRESS:
00001C2E  0C1B 0000               1254         CMP.B    #$00,(A3)+  ;trying to find the end
00001C32  6700 0004               1255         BEQ      DSADDCONV
00001C36  60F6                    1256         BRA      DGETSECADDRESS
00001C38                          1257  DSADDCONV:
00001C38  538B                    1258          SUB.L   #1,A3   ;off by one
00001C3A  4EB9 00002762           1259          JSR     ASCII_ADDRESS
00001C40  2A45                    1260          MOVE.L  D5,A5
00001C42  2C4C                    1261          MOVEA.L  A4,A6  ;CLR A6
00001C44                          1262          
00001C44  284E                    1263  DRESETLOOP: MOVE.L  A6,A4    ;reset to top of loop
00001C46  B94C                    1264  DCMP:       CMP.W   (A4)+,(A4)+  ;check adjacent mem
00001C48  620A                    1265              BHI.S   DSWAP    
00001C4A  558C                    1266              SUBQ.L  #2,A4
00001C4C  BBCC                    1267              CMP.L   A4,A5   ;done?
00001C4E  66F6                    1268              BNE     DCMP     ;nope
00001C50  6000 000A               1269              BRA     DONEDESCEND  ;yep
00001C54  2024                    1270  DSWAP:       MOVE.L  -(A4),D0    ;start bubbling 
00001C56  4840                    1271              SWAP.W  D0
00001C58  2880                    1272              MOVE.L  D0,(A4)
00001C5A  60E8                    1273              BRA     DRESETLOOP
00001C5C                          1274  
00001C5C                          1275  DONEASCEND:
00001C5C                          1276  DONEDESCEND:
00001C5C  6000 F498               1277              BRA RESTORE
00001C60                          1278  
00001C60                          1279  *--------------------------------------------------------------------------------------*
00001C60                          1280  
00001C60  4282                    1281  MM:    CLR.L    D2      ;used for storing values
00001C62  4286                    1282         CLR.L    D6      
00001C64                          1283  SIZECHECK:  
00001C64  2649                    1284          MOVE.L  A1,A3   ;set up to find end ptr
00001C66                          1285  ENDPTRMM:
00001C66  0C1B 0000               1286          CMP.B   #$00,(A3)+
00001C6A  66FA                    1287          BNE     ENDPTRMM
00001C6C  538B                    1288          SUB.L   #1,A3   ;off by one error
00001C6E  5289                    1289          ADD.L   #1,A1   ;inc pointer to start of specifier
00001C70  0C11 002D               1290          CMP.B   #$2D,(A1)   ;check for default
00001C74  6700 0020               1291          BEQ     DEFAULT        
00001C78  0C11 003B               1292          CMP.B   #$3B,(A1)
00001C7C  6600 0A98               1293          BNE     ERRORSR
00001C80  5289                    1294          ADD.L   #1,A1   ;find out which size
00001C82  0C11 0057               1295          CMP.B   #$57,(A1) ; word
00001C86  6700 00FE               1296          BEQ     WORD
00001C8A  0C11 004C               1297          CMP.B   #$4C,(A1)   ;long
00001C8E  6700 01C0               1298          BEQ     LONG
00001C92  6000 0A82               1299          BRA     ERRORSR
00001C96                          1300  
00001C96                          1301  ***************************************************
00001C96                          1302  
00001C96                          1303  DEFAULT: 
00001C96  5289                    1304          ADD.L  #1,A1   ;check for paren
00001C98  0C19 0028               1305          CMP.B   #$28,(A1)+  ;(
00001C9C  6600 0A78               1306          BNE     ERRORSR
00001CA0  0C19 0064               1307          CMP.B   #$64,(A1)+  ;d
00001CA4  6600 0A70               1308          BNE     ERRORSR
00001CA8  0C19 0065               1309          CMP.B   #$65,(A1)+  ;e
00001CAC  6600 0A68               1310          BNE     ERRORSR
00001CB0  0C19 0066               1311          CMP.B   #$66,(A1)+  ;f
00001CB4  6600 0A60               1312          BNE     ERRORSR
00001CB8  0C19 0061               1313          CMP.B   #$61,(A1)+  ;a
00001CBC  6600 0A58               1314          BNE     ERRORSR
00001CC0  0C19 0075               1315          CMP.B   #$75,(A1)+  ;u
00001CC4  6600 0A50               1316          BNE     ERRORSR
00001CC8  0C19 006C               1317          CMP.B   #$6C,(A1)+  ;l
00001CCC  6600 0A48               1318          BNE     ERRORSR     
00001CD0  0C19 0074               1319          CMP.B   #$74,(A1)+  ;t
00001CD4  6600 0A40               1320          BNE     ERRORSR
00001CD8  0C19 0029               1321          CMP.B   #$29,(A1)+  ;)
00001CDC  6600 0A38               1322          BNE     ERRORSR
00001CE0                          1323          
00001CE0                          1324          
00001CE0  5289                    1325          ADD.L   #1,A1       ;set up for subroutine
00001CE2  3449                    1326          MOVE    A1,A2       ;set up for subroutine
00001CE4  48E7 4270               1327          MOVEM.L D1/D6/A1-A3,-(SP)
00001CE8  4EB9 00002762           1328          JSR     ASCII_ADDRESS
00001CEE  4CDF 0E42               1329          MOVEM.L (SP)+,D1/D6/A1-A3
00001CF2  2845                    1330          MOVE.L  D5,A4       ;set up address to modify
00001CF4                          1331         
00001CF4                          1332  MODIFYLOOP:
00001CF4                          1333          *-------Display Memory First-----*
00001CF4  260C                    1334          MOVE.L  A4,D3       ;set up for subroutine
00001CF6  4EB9 000027A2           1335          JSR     HEXTOASCII  ;convert new address to ascii for output
00001CFC  96CA                    1336          SUBA    A2,A3       ;get num of bytes to produce
00001CFE  7001                    1337          MOVE.L  #1,D0
00001D00  220B                    1338          MOVE.L  A3,D1
00001D02  224A                    1339          MOVE.L  A2,A1
00001D04  4E4F                    1340          TRAP    #15
00001D06                          1341          
00001D06                          1342          *add colon to denote containing data*
00001D06  12BC 003A               1343          MOVE.B  #$3A,(A1)
00001D0A  7201                    1344          MOVE.L  #1,D1   ;display only the colon
00001D0C  7001                    1345          MOVE.L  #1,D0
00001D0E  4E4F                    1346          TRAP    #15
00001D10                          1347          
00001D10  1614                    1348          MOVE.B  (A4),D3
00001D12  4EB9 000027A2           1349          JSR     HEXTOASCII
00001D18  7202                    1350          MOVE.L  #2,D1
00001D1A  97CA                    1351          SUB.L   A2,A3
00001D1C  B6FC 0002               1352          CMP     #2,A3
00001D20  6700 0004               1353          BEQ     FORMATGOOD
00001D24  538A                    1354          SUB.L   #1,A2
00001D26                          1355  FORMATGOOD:
00001D26  224A                    1356          MOVE.L  A2,A1
00001D28  103C 0001               1357          MOVE.B  #1,D0
00001D2C  4E4F                    1358          TRAP    #15
00001D2E                          1359          
00001D2E  12BC 0020               1360          MOVE.B  #$20,(A1)
00001D32  7201                    1361          MOVE.L  #1,D1   ;space between held data and input
00001D34  7001                    1362          MOVE.L  #1,D0
00001D36  4E4F                    1363          TRAP    #15
00001D38                          1364  
00001D38                          1365          
00001D38                          1366          *-----Enter Input-------*
00001D38  4283                    1367          CLR.L   D3
00001D3A  7C04                    1368          MOVE.L  #4,D6
00001D3C  43F8 3000               1369          LEA     BUFFER,A1   ;set up storage for command
00001D40  103C 0002               1370          MOVE.B  #2,D0       ;load input trap call
00001D44  4E4F                    1371          TRAP    #15
00001D46  0C11 002E               1372          CMP.B   #$2E,(A1)
00001D4A  6700 020A               1373          BEQ     ENDLP
00001D4E  0C11 0000               1374          CMP.B   #$00,(A1)
00001D52  6700 002C               1375          BEQ     ENTER
00001D56                          1376          
00001D56                          1377  PARSELOOP:
00001D56  0C11 0000               1378          CMP.B   #$00,(A1)
00001D5A  6700 0022               1379          BEQ     ENDPARSE        
00001D5E  0C11 0040               1380          CMP.B   #$40,(A1)
00001D62  6E00 000A               1381          BGT     HIGHHEXMM
00001D66  0411 0030               1382          SUBI.B  #$30,(A1)   ;get hex value
00001D6A  6000 0006               1383          BRA     NEXTMMSTEP
00001D6E  0411 0037               1384  HIGHHEXMM: SUBI.B  #$37,(A1)  ;get hex value
00001D72                          1385  NEXTMMSTEP:
00001D72  1411                    1386          MOVE.B  (A1),D2
00001D74  EDBA                    1387          ROL.L   D6,D2
00001D76  5986                    1388          SUBI.L  #4,D6
00001D78  5289                    1389          ADD.L   #1,A1
00001D7A  D602                    1390          ADD.B   D2,D3   ;total byte stored in D3
00001D7C  60D8                    1391          BRA     PARSELOOP
00001D7E                          1392  ENDPARSE:
00001D7E  1883                    1393          MOVE.B  D3,(A4)   ;commit memory change 
00001D80  528C                    1394  ENTER:  ADD.L   #1,A4   ;increment address
00001D82  6000 FF70               1395          BRA     MODIFYLOOP
00001D86                          1396          
00001D86                          1397  ***************************************************
00001D86                          1398  
00001D86                          1399  WORD:
00001D86                          1400              
00001D86  5489                    1401          ADD.L   #2,A1       ;set up for subroutine
00001D88  3449                    1402          MOVE    A1,A2       ;set up for subroutine
00001D8A  48E7 4270               1403          MOVEM.L D1/D6/A1-A3,-(SP)
00001D8E  4EB9 00002762           1404          JSR     ASCII_ADDRESS
00001D94  4CDF 0E42               1405          MOVEM.L (SP)+,D1/D6/A1-A3
00001D98  2845                    1406          MOVE.L  D5,A4       ;set up address to modify
00001D9A                          1407         
00001D9A                          1408  MODIFYLOOPW:
00001D9A                          1409          *-------Display Memory First-----*
00001D9A                          1410         ; MOVE.L  A4,D0
00001D9A                          1411         ; DIVU    #2,D0
00001D9A                          1412         ; SWAP    D0      ;check if it's an odd address
00001D9A                          1413         ; CMP.W   #$00,D0
00001D9A                          1414         ; BNE     ERRORSR
00001D9A  260C                    1415          MOVE.L  A4,D3       ;set up for subroutine
00001D9C  2A4C                    1416          MOVE.L  A4,A5       ;next byte of memory may not be needed
00001D9E  528D                    1417          ADD.L   #1,A5
00001DA0  4EB9 000027A2           1418          JSR     HEXTOASCII  ;convert new address to ascii for output
00001DA6  96CA                    1419          SUBA    A2,A3       ;get num of bytes to produce
00001DA8  7001                    1420          MOVE.L  #1,D0
00001DAA  220B                    1421          MOVE.L  A3,D1
00001DAC  224A                    1422          MOVE.L  A2,A1
00001DAE  4E4F                    1423          TRAP    #15
00001DB0                          1424          
00001DB0                          1425          *add colon to denote containing data*
00001DB0  12BC 003A               1426          MOVE.B  #$3A,(A1)
00001DB4  7201                    1427          MOVE.L  #1,D1   ;display only the colon
00001DB6  7001                    1428          MOVE.L  #1,D0
00001DB8  4E4F                    1429          TRAP    #15
00001DBA                          1430          
00001DBA  1614                    1431          MOVE.B  (A4),D3
00001DBC  4EB9 000027A2           1432          JSR     HEXTOASCII
00001DC2  7202                    1433          MOVE.L  #2,D1
00001DC4  97CA                    1434          SUB.L   A2,A3
00001DC6  B6FC 0002               1435          CMP     #2,A3
00001DCA  6700 0004               1436          BEQ     FORMATGOOD1
00001DCE  538A                    1437          SUB.L   #1,A2     
00001DD0                          1438  FORMATGOOD1:
00001DD0                          1439  
00001DD0  224A                    1440          MOVE.L  A2,A1
00001DD2  103C 0001               1441          MOVE.B  #1,D0
00001DD6  4E4F                    1442          TRAP    #15
00001DD8                          1443          
00001DD8  1615                    1444          MOVE.B  (A5),D3
00001DDA  4EB9 000027A2           1445          JSR     HEXTOASCII
00001DE0  7202                    1446          MOVE.L  #2,D1
00001DE2  97CA                    1447          SUB.L   A2,A3
00001DE4  B6FC 0002               1448          CMP     #2,A3
00001DE8  6700 0004               1449          BEQ     FORMATGOOD2
00001DEC  538A                    1450          SUB.L   #1,A2     
00001DEE                          1451  FORMATGOOD2:
00001DEE                          1452  
00001DEE  224A                    1453          MOVE.L  A2,A1
00001DF0  103C 0001               1454          MOVE.B  #1,D0
00001DF4  4E4F                    1455          TRAP    #15
00001DF6                          1456  
00001DF6                          1457          
00001DF6  12BC 0020               1458          MOVE.B  #$20,(A1)
00001DFA  7201                    1459          MOVE.L  #1,D1   ;space between held data and input
00001DFC  7001                    1460          MOVE.L  #1,D0
00001DFE  4E4F                    1461          TRAP    #15
00001E00                          1462  
00001E00                          1463          
00001E00                          1464          *-----Enter Input-------*
00001E00  4283                    1465          CLR.L   D3
00001E02  7C0C                    1466          MOVE.L  #12,D6
00001E04  43F8 3000               1467          LEA     BUFFER,A1   ;set up storage for command
00001E08  103C 0002               1468          MOVE.B  #2,D0       ;load input trap call
00001E0C  4E4F                    1469          TRAP    #15
00001E0E  0C11 002E               1470          CMP.B   #$2E,(A1)
00001E12  6700 0142               1471          BEQ     ENDLP
00001E16  0C11 0000               1472          CMP.B   #$00,(A1)
00001E1A  6700 002E               1473          BEQ     ENTERW
00001E1E                          1474          
00001E1E                          1475  PARSELOOPW:
00001E1E  0C11 0000               1476          CMP.B   #$00,(A1)
00001E22  6700 0024               1477          BEQ     ENDPARSEW        
00001E26  0C11 0040               1478          CMP.B   #$40,(A1)
00001E2A  6E00 000A               1479          BGT     HIGHHEXMMW
00001E2E  0411 0030               1480          SUBI.B  #$30,(A1)   ;get hex value
00001E32  6000 0006               1481          BRA     NEXTMMSTEPW
00001E36  0411 0037               1482  HIGHHEXMMW: SUBI.B  #$37,(A1)  ;get hex value
00001E3A                          1483  NEXTMMSTEPW:
00001E3A  1411                    1484          MOVE.B  (A1),D2
00001E3C  EDBA                    1485          ROL.L   D6,D2
00001E3E  5986                    1486          SUBI.L  #4,D6
00001E40  5289                    1487          ADD.L   #1,A1
00001E42  D682                    1488          ADD.L   D2,D3   ;total byte stored in D3
00001E44  4282                    1489          CLR.L   D2      ;clear for next rotate
00001E46  60D6                    1490          BRA     PARSELOOPW
00001E48                          1491  ENDPARSEW:
00001E48                          1492          
00001E48  3883                    1493          MOVE.W  D3,(A4)   ;commit memory change 
00001E4A  548C                    1494  ENTERW:  ADD.L   #2,A4   ;increment address
00001E4C  6000 FF4C               1495          BRA     MODIFYLOOPW
00001E50                          1496  
00001E50                          1497  ***************************************************
00001E50                          1498  
00001E50                          1499  LONG:  
00001E50  5489                    1500          ADD.L   #2,A1       ;set up for subroutine
00001E52  3449                    1501          MOVE    A1,A2       ;set up for subroutine
00001E54  48E7 4270               1502          MOVEM.L D1/D6/A1-A3,-(SP)
00001E58  4EB9 00002762           1503          JSR     ASCII_ADDRESS
00001E5E  2845                    1504          MOVE.L  D5,A4       ;set up address to modify
00001E60  4CDF 0E42               1505          MOVEM.L (SP)+,D1/D6/A1-A3
00001E64                          1506          
00001E64                          1507         
00001E64                          1508  MODIFYLOOPL:
00001E64                          1509          *-------Display Memory First-----*
00001E64                          1510         ; MOVE.L  A4,D0
00001E64                          1511         ; DIVU    #2,D0
00001E64                          1512         ; SWAP    D0      ;check if it's an odd address
00001E64                          1513         ; CMP.W   #$00,D0
00001E64                          1514         ; BNE     ERRORSR
00001E64  260C                    1515          MOVE.L  A4,D3       ;set up for subroutine
00001E66  2A4C                    1516          MOVE.L  A4,A5       ;next byte of memory may not be needed
00001E68  528D                    1517          ADD.L   #1,A5
00001E6A  4EB9 000027A2           1518          JSR     HEXTOASCII  ;convert new address to ascii for output
00001E70  96CA                    1519          SUBA    A2,A3       ;get num of bytes to produce
00001E72  7001                    1520          MOVE.L  #1,D0
00001E74  220B                    1521          MOVE.L  A3,D1
00001E76  224A                    1522          MOVE.L  A2,A1
00001E78  4E4F                    1523          TRAP    #15
00001E7A                          1524          
00001E7A                          1525          *add colon to denote containing data*
00001E7A  12BC 003A               1526          MOVE.B  #$3A,(A1)
00001E7E  7201                    1527          MOVE.L  #1,D1   ;display only the colon
00001E80  7001                    1528          MOVE.L  #1,D0
00001E82  4E4F                    1529          TRAP    #15
00001E84                          1530          
00001E84  1614                    1531          MOVE.B  (A4),D3
00001E86  4EB9 000027A2           1532          JSR     HEXTOASCII
00001E8C  7202                    1533          MOVE.L  #2,D1
00001E8E  97CA                    1534          SUB.L   A2,A3
00001E90  B6FC 0002               1535          CMP     #2,A3
00001E94  6700 0004               1536          BEQ     FORMATGOOD3
00001E98  538A                    1537          SUB.L   #1,A2     
00001E9A                          1538  FORMATGOOD3:
00001E9A                          1539  
00001E9A  224A                    1540          MOVE.L  A2,A1
00001E9C  103C 0001               1541          MOVE.B  #1,D0
00001EA0  4E4F                    1542          TRAP    #15
00001EA2                          1543          
00001EA2  161D                    1544          MOVE.B  (A5)+,D3
00001EA4  4EB9 000027A2           1545          JSR     HEXTOASCII
00001EAA  7202                    1546          MOVE.L  #2,D1
00001EAC  97CA                    1547          SUB.L   A2,A3
00001EAE  B6FC 0002               1548          CMP     #2,A3
00001EB2  6700 0004               1549          BEQ     FORMATGOOD4
00001EB6  538A                    1550          SUB.L   #1,A2     
00001EB8                          1551  FORMATGOOD4:
00001EB8                          1552  
00001EB8  224A                    1553          MOVE.L  A2,A1
00001EBA  103C 0001               1554          MOVE.B  #1,D0
00001EBE  4E4F                    1555          TRAP    #15
00001EC0                          1556          
00001EC0  161D                    1557          MOVE.B  (A5)+,D3
00001EC2  4EB9 000027A2           1558          JSR     HEXTOASCII
00001EC8  7202                    1559          MOVE.L  #2,D1
00001ECA  97CA                    1560          SUB.L   A2,A3
00001ECC  B6FC 0002               1561          CMP     #2,A3
00001ED0  6700 0004               1562          BEQ     FORMATGOOD5
00001ED4  538A                    1563          SUB.L   #1,A2     
00001ED6                          1564  FORMATGOOD5:
00001ED6                          1565  
00001ED6  224A                    1566          MOVE.L  A2,A1
00001ED8  103C 0001               1567          MOVE.B  #1,D0
00001EDC  4E4F                    1568          TRAP    #15
00001EDE  161D                    1569          MOVE.B  (A5)+,D3
00001EE0  4EB9 000027A2           1570          JSR     HEXTOASCII
00001EE6  7202                    1571          MOVE.L  #2,D1
00001EE8  97CA                    1572          SUB.L   A2,A3
00001EEA  B6FC 0002               1573          CMP     #2,A3
00001EEE  6700 0004               1574          BEQ     FORMATGOOD6
00001EF2  538A                    1575          SUB.L   #1,A2     
00001EF4                          1576  FORMATGOOD6:
00001EF4                          1577  
00001EF4  224A                    1578          MOVE.L  A2,A1
00001EF6  103C 0001               1579          MOVE.B  #1,D0
00001EFA  4E4F                    1580          TRAP    #15
00001EFC                          1581     
00001EFC  12BC 0020               1582          MOVE.B  #$20,(A1)
00001F00  7201                    1583          MOVE.L  #1,D1   ;space between held data and input
00001F02  7001                    1584          MOVE.L  #1,D0
00001F04  4E4F                    1585          TRAP    #15
00001F06                          1586  
00001F06                          1587          
00001F06                          1588          *-----Enter Input-------*
00001F06  4283                    1589          CLR.L   D3
00001F08  7C1C                    1590          MOVE.L  #28,D6
00001F0A  43F8 3000               1591          LEA     BUFFER,A1   ;set up storage for command
00001F0E  103C 0002               1592          MOVE.B  #2,D0       ;load input trap call
00001F12  4E4F                    1593          TRAP    #15
00001F14  0C11 002E               1594          CMP.B   #$2E,(A1)
00001F18  6700 003C               1595          BEQ     ENDLP
00001F1C  0C11 0000               1596          CMP.B   #$00,(A1)
00001F20  6700 002E               1597          BEQ     ENTERL
00001F24                          1598          
00001F24                          1599  PARSELOOPL:
00001F24  0C11 0000               1600          CMP.B   #$00,(A1)
00001F28  6700 0024               1601          BEQ     ENDPARSEL        
00001F2C  0C11 0040               1602          CMP.B   #$40,(A1)
00001F30  6E00 000A               1603          BGT     HIGHHEXMML
00001F34  0411 0030               1604          SUBI.B  #$30,(A1)   ;get hex value
00001F38  6000 0006               1605          BRA     NEXTMMSTEPL
00001F3C  0411 0037               1606  HIGHHEXMML: SUBI.B  #$37,(A1)  ;get hex value
00001F40                          1607  NEXTMMSTEPL:
00001F40  1411                    1608          MOVE.B  (A1),D2
00001F42  EDBA                    1609          ROL.L   D6,D2
00001F44  5986                    1610          SUBI.L  #4,D6
00001F46  5289                    1611          ADD.L   #1,A1
00001F48  D682                    1612          ADD.L   D2,D3   ;total byte stored in D3
00001F4A  4282                    1613          CLR.L   D2      ;clear for next rotate
00001F4C  60D6                    1614          BRA     PARSELOOPL
00001F4E                          1615  ENDPARSEL:
00001F4E  2883                    1616          MOVE.L  D3,(A4)   ;commit memory change 
00001F50  588C                    1617  ENTERL:  ADD.L   #4,A4   ;increment address
00001F52  6000 FF10               1618          BRA     MODIFYLOOPL
00001F56                          1619  
00001F56                          1620  
00001F56  6000 F19E               1621  ENDLP:  BRA RESTORE
00001F5A                          1622          
00001F5A                          1623          
00001F5A                          1624  *--------------------------------------------------------------------------------------*
00001F5A                          1625  
00001F5A                          1626  BF:    
00001F5A  5289                    1627         ADD.L    #1,A1   ;first byte of data
00001F5C  2649                    1628         MOVE.L   A1,A3   ;for end ptr
00001F5E                          1629  BFGETENDDATA:
00001F5E  0C1B 0020               1630          CMP.B   #$20,(A3)+
00001F62  6700 0004               1631          BEQ     BFNEXTADDR
00001F66  60F6                    1632          BRA     BFGETENDDATA
00001F68                          1633  BFNEXTADDR:
00001F68  2449                    1634          MOVE.L  A1,A2   ;for subroutine
00001F6A  538B                    1635          SUB.L   #1,A3   ;off by one error
00001F6C  4EB9 00002762           1636          JSR     ASCII_ADDRESS
00001F72  2F05                    1637          MOVE.L  D5,-(SP)    ;save data on the stack
00001F74                          1638          
00001F74  528B                    1639          ADD.L   #1,A3   ;inc end ptr to first byte of address
00001F76  244B                    1640          MOVE.L  A3,A2   ;set start ptr
00001F78                          1641  BFGETENDADDRONE:
00001F78  0C1B 0020               1642          CMP.B   #$20,(A3)+
00001F7C  6700 0004               1643          BEQ     BFNEXTADDRTWO
00001F80  60F6                    1644          BRA     BFGETENDADDRONE
00001F82                          1645          
00001F82                          1646  BFNEXTADDRTWO:
00001F82  538B                    1647          SUB.L   #1,A3   ;off by one error
00001F84  4EB9 00002762           1648          JSR     ASCII_ADDRESS   ;convert address to hex
00001F8A  2A45                    1649          MOVE.L  D5,A5       ;store address 1 in A5
00001F8C  8AFC 0002               1650          DIVU    #2,D5
00001F90  4845                    1651          SWAP    D5
00001F92  BA7C 0000               1652          CMP.W   #$00,D5
00001F96  6600 077E               1653          BNE     ERRORSR
00001F9A                          1654          
00001F9A  528B                    1655          ADD.L   #1,A3   ;inc end ptr to first byte of address
00001F9C  244B                    1656          MOVE.L  A3,A2   ;set start ptr
00001F9E                          1657  BFGETLASTEND:
00001F9E  0C1B 0000               1658          CMP.B   #$00,(A3)+
00001FA2  6700 0004               1659          BEQ     STOREDATA
00001FA6  60F6                    1660          BRA     BFGETLASTEND
00001FA8                          1661          
00001FA8                          1662  STOREDATA:
00001FA8  538B                    1663          SUB.L   #1,A3   ;off by one error
00001FAA  4EB9 00002762           1664          JSR     ASCII_ADDRESS
00001FB0  2C45                    1665          MOVE.L  D5,A6   ;end address in A6
00001FB2  8AFC 0002               1666          DIVU    #2,D5
00001FB6  4845                    1667          SWAP    D5
00001FB8  BA7C 0000               1668          CMP.W   #$00,D5
00001FBC  6600 0758               1669          BNE     ERRORSR
00001FC0  2A1F                    1670          MOVE.L  (SP)+,D5
00001FC2                          1671          
00001FC2                          1672  DATALOOP:
00001FC2  BDCD                    1673          CMP.L   A5,A6
00001FC4  6D00 0006               1674          BLT     ENDBF
00001FC8  3AC5                    1675          MOVE.W  D5,(A5)+
00001FCA  60F6                    1676          BRA     DATALOOP
00001FCC                          1677  
00001FCC  6000 F128               1678  ENDBF:  BRA RESTORE
00001FD0                          1679  *--------------------------------------------------------------------------------------*
00001FD0                          1680  
00001FD0  5289                    1681  BMOV:   ADD.L   #1,A1   ;get to start of first address
00001FD2  2449                    1682          MOVE.L  A1,A2   ;set up start ptr
00001FD4  264A                    1683          MOVE.L  A2,A3   ;set up end ptr
00001FD6                          1684          
00001FD6                          1685  FIRSTADDRESS:
00001FD6  0C1B 0020               1686          CMP.B #$20,(A3)+
00001FDA  6700 0004               1687          BEQ     COMPUTEFIRSTADD
00001FDE  60F6                    1688          BRA     FIRSTADDRESS
00001FE0                          1689          
00001FE0                          1690  COMPUTEFIRSTADD:
00001FE0  538B                    1691          SUB.L   #1,A3   ;off by one error
00001FE2  4EB9 00002762           1692          JSR     ASCII_ADDRESS
00001FE8  2045                    1693          MOVE.L  D5,A0   ; save 1st address
00001FEA                          1694          
00001FEA  528B                    1695          ADD.L   #1,A3
00001FEC  244B                    1696          MOVE.L  A3,A2
00001FEE                          1697  SECONDADDRESS:
00001FEE  0C1B 0020               1698          CMP.B   #$20,(A3)+
00001FF2  6700 0004               1699          BEQ     COMPUTESECONDADDRESS
00001FF6  60F6                    1700          BRA     SECONDADDRESS
00001FF8                          1701          
00001FF8                          1702  COMPUTESECONDADDRESS:
00001FF8  538B                    1703          SUB.L   #1,A3   ;off by one error
00001FFA  4EB9 00002762           1704          JSR     ASCII_ADDRESS
00002000  2845                    1705          MOVE.L  D5,A4   ;save 2nd address
00002002                          1706  
00002002  528B                    1707          ADD.L   #1,A3
00002004  244B                    1708          MOVE.L  A3,A2
00002006                          1709  THIRDADDRESS:
00002006  0C1B 0020               1710          CMP.B   #$20,(A3)+
0000200A  6700 0004               1711          BEQ     COMPUTETHIRDADDRESS
0000200E  60F6                    1712          BRA     THIRDADDRESS
00002010                          1713          
00002010                          1714  COMPUTETHIRDADDRESS:
00002010  538B                    1715          SUB.L   #1,A3
00002012  4EB9 00002762           1716          JSR     ASCII_ADDRESS
00002018  2A45                    1717          MOVE.L  D5,A5   ;save 3rd address
0000201A                          1718          
0000201A  528B                    1719          ADD.L   #1,A3
0000201C  244B                    1720          MOVE.L  A3,A2
0000201E                          1721  FOURTHADDRESS:
0000201E  0C1B 0000               1722          CMP.B   #$00,(A3)+
00002022  6700 0004               1723          BEQ     COMPUTEFOURTHADDRESS
00002026  60F6                    1724          BRA     FOURTHADDRESS
00002028                          1725          
00002028                          1726  COMPUTEFOURTHADDRESS:
00002028  538B                    1727          SUB.L   #1,A3
0000202A  4EB9 00002762           1728          JSR     ASCII_ADDRESS
00002030  2C45                    1729          MOVE.L  D5,A6   ;save 3rd address
00002032                          1730          
00002032                          1731          
00002032                          1732  
00002032                          1733          *Check for matching dimensions*
00002032  2008                    1734          MOVE.L  A0,D0
00002034  220C                    1735          MOVE.L  A4,D1
00002036  2A0D                    1736          MOVE.L  A5,D5
00002038  2C0E                    1737          MOVE.L  A6,D6
0000203A  9280                    1738          SUB.L   D0,D1
0000203C  9C85                    1739          SUB.L   D5,D6
0000203E  BC81                    1740          CMP.L   D1,D6
00002040  6600 06D4               1741          BNE     ERRORSR
00002044  B9C8                    1742          CMP.L   A0,A4
00002046  6D00 06CE               1743          BLT     ERRORSR
0000204A  BDCD                    1744          CMP.L   A5,A6
0000204C  6D00 06C8               1745          BLT     ERRORSR
00002050  528C                    1746          ADD.L   #1,A4
00002052                          1747  
00002052                          1748  DATATRANSFER:
00002052  B9C8                    1749          CMP.L   A0,A4
00002054  6D00 0006               1750          BLT     BMOVDONE
00002058  1AD8                    1751          MOVE.B  (A0)+,(A5)+
0000205A  60F6                    1752          BRA     DATATRANSFER
0000205C                          1753          
0000205C                          1754  
0000205C                          1755  
0000205C                          1756  BMOVDONE:
0000205C  6000 F098               1757          BRA RESTORE
00002060                          1758  
00002060                          1759  *--------------------------------------------------------------------------------------*
00002060                          1760  
00002060                          1761  BTST:   
00002060  5289                    1762         ADD.L    #1,A1   ;first byte of data
00002062  2649                    1763         MOVE.L   A1,A3   ;for end ptr
00002064                          1764  BTSTGETENDDATA:
00002064  0C1B 0020               1765          CMP.B   #$20,(A3)+
00002068  6700 0004               1766          BEQ     BTSTNEXTADDR
0000206C  60F6                    1767          BRA     BTSTGETENDDATA
0000206E                          1768  BTSTNEXTADDR:
0000206E  2449                    1769          MOVE.L  A1,A2   ;for subroutine
00002070  538B                    1770          SUB.L   #1,A3   ;off by one error
00002072  4EB9 00002762           1771          JSR     ASCII_ADDRESS
00002078  2F05                    1772          MOVE.L  D5,-(SP)    ;save data on the stack
0000207A                          1773          
0000207A  528B                    1774          ADD.L   #1,A3   ;inc end ptr to first byte of address
0000207C  244B                    1775          MOVE.L  A3,A2   ;set start ptr
0000207E                          1776  BTSTGETENDADDRONE:
0000207E  0C1B 0020               1777          CMP.B   #$20,(A3)+
00002082  6700 0004               1778          BEQ     BTSTNEXTADDRTWO
00002086  60F6                    1779          BRA     BTSTGETENDADDRONE
00002088                          1780          
00002088                          1781  BTSTNEXTADDRTWO:
00002088  538B                    1782          SUB.L   #1,A3   ;off by one error
0000208A  4EB9 00002762           1783          JSR     ASCII_ADDRESS   ;convert address to hex
00002090  2A45                    1784          MOVE.L  D5,A5       ;store address 1 in A5
00002092  2845                    1785          MOVE.L  D5,A4       ;for second run through
00002094                          1786                
00002094  528B                    1787          ADD.L   #1,A3   ;inc end ptr to first byte of address
00002096  244B                    1788          MOVE.L  A3,A2   ;set start ptr
00002098                          1789  BTSTGETLASTEND:
00002098  0C1B 0000               1790          CMP.B   #$00,(A3)+
0000209C  6700 0004               1791          BEQ     STOREDATABTST
000020A0  60F6                    1792          BRA     BTSTGETLASTEND
000020A2                          1793  
000020A2                          1794  
000020A2                          1795  STOREDATABTST:
000020A2  538B                    1796          SUB.L   #1,A3   ;off by one error
000020A4  4EB9 00002762           1797          JSR     ASCII_ADDRESS
000020AA  2C45                    1798          MOVE.L  D5,A6   ;end address in A6
000020AC  2A1F                    1799          MOVE.L  (SP)+,D5
000020AE                          1800          
000020AE                          1801  BTSTDATALOOP:
000020AE  BDCD                    1802          CMP.L   A5,A6
000020B0  6D00 0006               1803          BLT     READ
000020B4  1AC5                    1804          MOVE.B  D5,(A5)+
000020B6  60F6                    1805          BRA     BTSTDATALOOP
000020B8                          1806  
000020B8                          1807  
000020B8                          1808  READ:
000020B8  BDCC                    1809          CMP.L   A4,A6
000020BA  6D00 006C               1810          BLT     COMPLETE
000020BE  BA1C                    1811          CMP.B   (A4)+,D5
000020C0  6600 0004               1812          BNE     FAIL
000020C4  60F2                    1813          BRA     READ
000020C6                          1814          
000020C6                          1815  FAIL:
000020C6  43F8 37F7               1816          LEA     BTST4,A1
000020CA  720B                    1817          MOVE.L  #11,D1
000020CC  7000                    1818          MOVE.L  #0,D0
000020CE  4E4F                    1819          TRAP    #15
000020D0                          1820          
000020D0  43F8 37C0               1821          LEA     BTST1,A1
000020D4  7001                    1822          MOVE.L  #1,D0
000020D6  7214                    1823          MOVE.L  #20,D1
000020D8  4E4F                    1824          TRAP    #15
000020DA                          1825          
000020DA  1605                    1826          MOVE.B  D5,D3   ;for subroutine
000020DC  4EB9 000027A2           1827          JSR     HEXTOASCII
000020E2  224A                    1828          MOVE.L     A2,A1
000020E4  7000                    1829          MOVE.L  #0,D0
000020E6  97CA                    1830          SUBA.L  A2,A3   ;number of bytes
000020E8  220B                    1831          MOVE.L  A3,D1
000020EA  4E4F                    1832          TRAP    #15
000020EC                          1833          
000020EC                          1834          
000020EC  43F8 37D4               1835          LEA     BTST2,A1
000020F0  7001                    1836          MOVE.L  #1,D0
000020F2  7211                    1837          MOVE.L  #17,D1
000020F4  4E4F                    1838          TRAP    #15
000020F6                          1839          
000020F6                          1840          
000020F6  538C                    1841          SUB.L   #1,A4   ;go back to address that failed
000020F8  1614                    1842          MOVE.B  (A4),D3
000020FA  4EB9 000027A2           1843          JSR     HEXTOASCII  ;convert for output
00002100  224A                    1844          MOVE.L     A2,A1
00002102  7000                    1845          MOVE.L  #0,D0
00002104  97CA                    1846          SUBA.L  A2,A3   ;number of bytes
00002106  220B                    1847          MOVE.L  A3,D1
00002108  4E4F                    1848          TRAP    #15
0000210A                          1849          
0000210A  43F8 3802               1850          LEA     BTST5,A1
0000210E  721B                    1851          MOVE.L  #27,D1
00002110  103C 0001               1852          MOVE.B  #1,D0
00002114  4E4F                    1853          TRAP    #15
00002116  260C                    1854          MOVE.L  A4,D3
00002118  4EB9 000027A2           1855          JSR     HEXTOASCII
0000211E  224A                    1856          MOVE.L     A2,A1
00002120  7000                    1857          MOVE.L  #0,D0
00002122  97CA                    1858          SUBA.L  A2,A3   ;number of bytes
00002124  220B                    1859          MOVE.L  A3,D1
00002126  4E4F                    1860          TRAP    #15
00002128                          1861  
00002128                          1862  
00002128                          1863          
00002128                          1864  COMPLETE:
00002128                          1865  
00002128  43F8 37E5               1866          LEA     BTST3,A1
0000212C  7212                    1867          MOVE.L  #18,D1
0000212E  7000                    1868          MOVE.L  #0,D0
00002130  4E4F                    1869          TRAP    #15
00002132  6000 EFC2               1870          BRA RESTORE
00002136                          1871  
00002136                          1872  *--------------------------------------------------------------------------------------*
00002136                          1873  
00002136                          1874  BSCH:   
00002136  5289                    1875          ADD.L   #1,A1   ;start of data
00002138  2449                    1876          MOVE.L  A1,A2   ;set up bac ptr
0000213A                          1877          
0000213A                          1878  BSCHENDDATA:
0000213A  0C1A 0020               1879          CMP.B   #$20,(A2)+
0000213E  6700 0004               1880          BEQ     BSCHFIRSTADD
00002142  60F6                    1881          BRA     BSCHENDDATA
00002144                          1882  
00002144                          1883  
00002144                          1884  BSCHFIRSTADD:
00002144  538A                    1885          SUB.L   #1,A2
00002146  264A                    1886          MOVE.L  A2,A3
00002148  2449                    1887          MOVE.L  A1,A2
0000214A  4EB9 00002762           1888          JSR     ASCII_ADDRESS
00002150  97C9                    1889          SUB.L   A1,A3   ;see how many bytes
00002152  2C0B                    1890          MOVE.L  A3,D6   ;store byte/word/long in D6   
00002154  528A                    1891          ADD.L   #1,A2   ;set up for start of next address     
00002156  264A                    1892          MOVE.L  A2,A3   ;set up for end ptr
00002158  2F05                    1893          MOVE.L  D5,-(SP)    ;save data to stack
0000215A                          1894          
0000215A                          1895          
0000215A                          1896  BSCHFADDEND:
0000215A  0C1B 0020               1897          CMP.B   #$20,(A3)+
0000215E  6700 0004               1898          BEQ     BSCHSECONDADD
00002162  60F6                    1899          BRA     BSCHFADDEND
00002164                          1900          
00002164                          1901          
00002164                          1902  BSCHSECONDADD:
00002164  538B                    1903          SUB.L   #1,A3   ;off by one
00002166  4EB9 00002762           1904          JSR     ASCII_ADDRESS
0000216C  2A45                    1905          MOVE.L  D5,A5   ;first address destination
0000216E  528B                    1906          ADD.L   #1,A3   ;start it at next address
00002170  244B                    1907          MOVE.L  A3,A2   ; set up for next address
00002172                          1908          
00002172                          1909          
00002172                          1910  BSCHSECONDFIND:
00002172  0C1B 0000               1911          CMP.B   #$00,(A3)+
00002176  6700 0004               1912          BEQ     TESTOP
0000217A  60F6                    1913          BRA     BSCHSECONDFIND
0000217C                          1914          
0000217C                          1915          
0000217C                          1916  TESTOP: 
0000217C  538B                    1917          SUB.L   #1,A3   ;off by one
0000217E  4EB9 00002762           1918          JSR     ASCII_ADDRESS
00002184  2C45                    1919          MOVE.L  D5,A6   ;end address at A6
00002186  2A1F                    1920          MOVE.L  (SP)+,D5    ;restore data
00002188  BC3C 0002               1921          CMP.B   #2,D6
0000218C  6700 0016               1922          BEQ     BYTEBSCH
00002190  BC3C 0004               1923          CMP.B   #4,D6
00002194  6700 001C               1924          BEQ     WORDBSCH
00002198  BC3C 0008               1925          CMP.B   #8,D6
0000219C  6700 0022               1926          BEQ     LONGBSCH
000021A0  6000 0574               1927          BRA     ERRORSR
000021A4                          1928          
000021A4                          1929  BYTEBSCH:
000021A4  BDCD                    1930          CMP.L   A5,A6
000021A6  6D00 0070               1931          BLT     ENDBSCH
000021AA  BA1D                    1932          CMP.B   (A5)+,D5
000021AC  6700 0020               1933          BEQ     FOUNDB
000021B0  60F2                    1934          BRA     BYTEBSCH
000021B2                          1935  
000021B2                          1936  WORDBSCH:
000021B2  BDCD                    1937          CMP.L   A5,A6
000021B4  6D00 0062               1938          BLT     ENDBSCH
000021B8  BA5D                    1939          CMP.W   (A5)+,D5
000021BA  6700 001A               1940          BEQ     FOUNDW
000021BE  60F2                    1941          BRA     WORDBSCH
000021C0                          1942  
000021C0                          1943  LONGBSCH:
000021C0  BDCD                    1944          CMP.L   A5,A6
000021C2  6D00 0054               1945          BLT     ENDBSCH
000021C6  BA9D                    1946          CMP.L   (A5)+,D5
000021C8  6700 0014               1947          BEQ     FOUNDL
000021CC  60F2                    1948          BRA     LONGBSCH
000021CE                          1949  
000021CE                          1950  
000021CE                          1951  
000021CE                          1952  FOUNDB:
000021CE  538D                    1953          SUB.L   #1,A5
000021D0  1615                    1954          MOVE.B  (A5),D3
000021D2  6000 000E               1955          BRA     SUCCESSTEXT
000021D6                          1956  FOUNDW:
000021D6  558D                    1957          SUB.L   #2,A5
000021D8  3615                    1958          MOVE.W  (A5),D3
000021DA  6000 0006               1959          BRA     SUCCESSTEXT
000021DE                          1960  FOUNDL:
000021DE  598D                    1961          SUB.L   #4,A5
000021E0  2615                    1962          MOVE.L  (A5),D3
000021E2                          1963          
000021E2                          1964  SUCCESSTEXT:
000021E2  43F8 381D               1965          LEA BSCH1,A1
000021E6  7206                    1966          MOVE.L  #6,D1
000021E8  7001                    1967          MOVE.L  #1,D0
000021EA  4E4F                    1968          TRAP    #15
000021EC                          1969  
000021EC  4EB9 000027A2           1970          JSR     HEXTOASCII
000021F2  224A                    1971          MOVE.L  A2,A1
000021F4  97CA                    1972          SUB.L   A2,A3
000021F6  220B                    1973          MOVE.L  A3,D1   ;how many bytes
000021F8  7000                    1974          MOVE.L  #0,D0
000021FA  4E4F                    1975          TRAP    #15
000021FC                          1976          
000021FC  43F8 3823               1977          LEA BSCH2,A1
00002200  7212                    1978          MOVE.L  #18,D1
00002202  7001                    1979          MOVE.L  #1,D0
00002204  4E4F                    1980          TRAP    #15
00002206                          1981          
00002206  260D                    1982          MOVE.L  A5,D3
00002208  4EB9 000027A2           1983          JSR     HEXTOASCII
0000220E  224A                    1984          MOVE.L  A2,A1
00002210  97CA                    1985          SUB.L   A2,A3
00002212  220B                    1986          MOVE.L  A3,D1   ;how many bytes
00002214  7000                    1987          MOVE.L  #0,D0
00002216  4E4F                    1988          TRAP    #15
00002218                          1989  
00002218                          1990          
00002218                          1991  ENDBSCH:        
00002218  6000 EEDC               1992          BRA RESTORE
0000221C                          1993  
0000221C                          1994  *--------------------------------------------------------------------------------------*
0000221C                          1995  
0000221C                          1996  GO:    
0000221C  2449                    1997          MOVE.L  A1,A2   ;setup for hex conversion
0000221E  264A                    1998          MOVE.L  A2,A3   
00002220                          1999  GGETEND:
00002220  0C1B 0000               2000          CMP.B   #$00,(A3)+
00002224  6700 0004               2001          BEQ     EXECUTE
00002228  60F6                    2002          BRA     GGETEND
0000222A                          2003          
0000222A                          2004  EXECUTE:
0000222A  538B                    2005          SUB.L   #1,A3   ;off by one error
0000222C  4EB9 00002762           2006          JSR     ASCII_ADDRESS
00002232  2045                    2007          MOVE.L  D5,A0   
00002234  4E90                    2008          JSR     (A0)    ;go to program
00002236                          2009          **NOTE: THE PROGRAM MUST HAVE RTS OR CONTROL WILL NOT BE RETURNED BACK TO MONITOR441!!!**
00002236  6000 EEBE               2010          BRA RESTORE
0000223A                          2011  
0000223A                          2012  *--------------------------------------------------------------------------------------*
0000223A                          2013  
0000223A                          2014  DF:    *Registers have already been saved to STACK, just need to pop them off first*
0000223A                          2015          *Stack looks like this*
0000223A                          2016          
0000223A                          2017          *-------------*
0000223A                          2018          *|D0-D7/A0-A6|*
0000223A                          2019          *|     USP   |*
0000223A                          2020          *|     SR    |*
0000223A                          2021          *|     SSP   |*
0000223A                          2022          *|     PC    |*
0000223A                          2023          *-------------*
0000223A                          2024          *I should've used loops for efficiency but runtime is not a design constraint*
0000223A                          2025          *Maybe fix this in the future?*
0000223A                          2026          
0000223A                          2027            *----------D0-----------*
0000223A  43F8 3846               2028         LEA      RD0,A1
0000223E  7204                    2029         MOVE.L   #4,D1
00002240  7001                    2030         MOVE.L   #1,D0
00002242  4E4F                    2031         TRAP     #15
00002244  261F                    2032         MOVE.L   (SP)+,D3    
00002246  4EB9 000027A2           2033         JSR      HEXTOASCII
0000224C  224A                    2034         MOVE.L   A2,A1
0000224E  95CB                    2035         SUB.L    A3,A2
00002250  240A                    2036         MOVE.L   A2,D2
00002252  B4BC FFFFFFF8           2037         CMP.L    #-8,D2
00002258  6700 0006               2038         BEQ      D0DONTWORRY
0000225C                          2039  D0ACCOUNTFORZEROS:
0000225C  5082                    2040          ADDI.L  #8,D2
0000225E  93C2                    2041          SUB.L   D2,A1
00002260                          2042  D0DONTWORRY:
00002260  7000                    2043         MOVE.L   #0,D0
00002262  7208                    2044         MOVE.L   #8,D1
00002264  4E4F                    2045         TRAP     #15
00002266                          2046         
00002266                          2047             *----------D1-----------*
00002266  43F8 384A               2048         LEA      RD1,A1
0000226A  7204                    2049         MOVE.L   #4,D1
0000226C  7001                    2050         MOVE.L   #1,D0
0000226E  4E4F                    2051         TRAP     #15
00002270  261F                    2052         MOVE.L   (SP)+,D3    
00002272  4EB9 000027A2           2053         JSR      HEXTOASCII
00002278  224A                    2054         MOVE.L   A2,A1
0000227A  95CB                    2055         SUB.L    A3,A2
0000227C  240A                    2056         MOVE.L   A2,D2
0000227E  B4BC FFFFFFF8           2057         CMP.L    #-8,D2
00002284  6700 0006               2058         BEQ      D1DONTWORRY
00002288                          2059  D1ACCOUNTFORZEROS:
00002288  5082                    2060          ADDI.L  #8,D2
0000228A  93C2                    2061          SUB.L   D2,A1
0000228C                          2062  D1DONTWORRY:
0000228C  7000                    2063         MOVE.L   #0,D0
0000228E  7208                    2064         MOVE.L   #8,D1
00002290  4E4F                    2065         TRAP     #15
00002292                          2066         
00002292                          2067             *----------D2-----------*
00002292  43F8 384E               2068         LEA      RD2,A1
00002296  7204                    2069         MOVE.L   #4,D1
00002298  7001                    2070         MOVE.L   #1,D0
0000229A  4E4F                    2071         TRAP     #15
0000229C  261F                    2072         MOVE.L   (SP)+,D3   
0000229E  4EB9 000027A2           2073         JSR      HEXTOASCII
000022A4  224A                    2074         MOVE.L   A2,A1
000022A6  95CB                    2075         SUB.L    A3,A2
000022A8  240A                    2076         MOVE.L   A2,D2
000022AA  B4BC FFFFFFF8           2077         CMP.L    #-8,D2
000022B0  6700 0006               2078         BEQ      D2DONTWORRY
000022B4                          2079  D2ACCOUNTFORZEROS:
000022B4  5082                    2080          ADDI.L  #8,D2
000022B6  93C2                    2081          SUB.L   D2,A1
000022B8                          2082  D2DONTWORRY:
000022B8  7000                    2083         MOVE.L   #0,D0
000022BA  7208                    2084         MOVE.L   #8,D1
000022BC  4E4F                    2085         TRAP     #15
000022BE                          2086         
000022BE                          2087              *----------D3-----------*
000022BE  43F8 3852               2088         LEA      RD3,A1
000022C2  7204                    2089         MOVE.L   #4,D1
000022C4  7001                    2090         MOVE.L   #1,D0
000022C6  4E4F                    2091         TRAP     #15   
000022C8  261F                    2092         MOVE.L   (SP)+,D3  
000022CA  4EB9 000027A2           2093         JSR      HEXTOASCII
000022D0  224A                    2094         MOVE.L   A2,A1
000022D2  95CB                    2095         SUB.L    A3,A2
000022D4  240A                    2096         MOVE.L   A2,D2
000022D6  B4BC FFFFFFF8           2097         CMP.L    #-8,D2
000022DC  6700 0006               2098         BEQ      D3DONTWORRY
000022E0                          2099  D3ACCOUNTFORZEROS:
000022E0  5082                    2100          ADDI.L  #8,D2
000022E2  93C2                    2101          SUB.L   D2,A1
000022E4                          2102  D3DONTWORRY:
000022E4  7000                    2103         MOVE.L   #0,D0
000022E6  7208                    2104         MOVE.L   #8,D1
000022E8  4E4F                    2105         TRAP     #15
000022EA                          2106         
000022EA                          2107              *----------D4-----------*
000022EA  43F8 3856               2108         LEA      RD4,A1
000022EE  7204                    2109         MOVE.L   #4,D1
000022F0  7001                    2110         MOVE.L   #1,D0
000022F2  4E4F                    2111         TRAP     #15
000022F4  261F                    2112         MOVE.L   (SP)+,D3    
000022F6  4EB9 000027A2           2113         JSR      HEXTOASCII
000022FC  224A                    2114         MOVE.L   A2,A1
000022FE  95CB                    2115         SUB.L    A3,A2
00002300  240A                    2116         MOVE.L   A2,D2
00002302  B4BC FFFFFFF8           2117         CMP.L    #-8,D2
00002308  6700 0006               2118         BEQ      D4DONTWORRY
0000230C                          2119  D4ACCOUNTFORZEROS:
0000230C  5082                    2120          ADDI.L  #8,D2
0000230E  93C2                    2121          SUB.L   D2,A1
00002310                          2122  D4DONTWORRY:
00002310  7000                    2123         MOVE.L   #0,D0
00002312  7208                    2124         MOVE.L   #8,D1
00002314  4E4F                    2125         TRAP     #15
00002316                          2126         
00002316                          2127         *----------D5-----------*
00002316  43F8 385A               2128         LEA      RD5,A1
0000231A  7204                    2129         MOVE.L   #4,D1
0000231C  7001                    2130         MOVE.L   #1,D0
0000231E  4E4F                    2131         TRAP     #15
00002320  261F                    2132         MOVE.L   (SP)+,D3    
00002322  4EB9 000027A2           2133         JSR      HEXTOASCII
00002328  224A                    2134         MOVE.L   A2,A1
0000232A  95CB                    2135         SUB.L    A3,A2
0000232C  240A                    2136         MOVE.L   A2,D2
0000232E  B4BC FFFFFFF8           2137         CMP.L    #-8,D2
00002334  6700 0006               2138         BEQ      D5DONTWORRY
00002338                          2139  D5ACCOUNTFORZEROS:
00002338  5082                    2140          ADDI.L  #8,D2
0000233A  93C2                    2141          SUB.L   D2,A1
0000233C                          2142  D5DONTWORRY:
0000233C  7000                    2143         MOVE.L   #0,D0
0000233E  7208                    2144         MOVE.L   #8,D1
00002340  4E4F                    2145         TRAP     #15
00002342                          2146  
00002342                          2147          *----------D6-----------*
00002342  43F8 385E               2148         LEA      RD6,A1
00002346  7204                    2149         MOVE.L   #4,D1
00002348  7001                    2150         MOVE.L   #1,D0
0000234A  4E4F                    2151         TRAP     #15
0000234C  261F                    2152         MOVE.L   (SP)+,D3    
0000234E  4EB9 000027A2           2153         JSR      HEXTOASCII
00002354  224A                    2154         MOVE.L   A2,A1
00002356  95CB                    2155         SUB.L    A3,A2
00002358  240A                    2156         MOVE.L   A2,D2
0000235A  B4BC FFFFFFF8           2157         CMP.L    #-8,D2
00002360  6700 0006               2158         BEQ      D6DONTWORRY
00002364                          2159  D6ACCOUNTFORZEROS:
00002364  5082                    2160          ADDI.L  #8,D2
00002366  93C2                    2161          SUB.L   D2,A1
00002368                          2162  D6DONTWORRY:
00002368  7000                    2163         MOVE.L   #0,D0
0000236A  7208                    2164         MOVE.L   #8,D1
0000236C  4E4F                    2165         TRAP     #15
0000236E                          2166         
0000236E                          2167           *----------D7-----------*
0000236E  43F8 3862               2168         LEA      RD7,A1
00002372  7204                    2169         MOVE.L   #4,D1
00002374  7001                    2170         MOVE.L   #1,D0
00002376  4E4F                    2171         TRAP     #15
00002378  261F                    2172         MOVE.L   (SP)+,D3    
0000237A  4EB9 000027A2           2173         JSR      HEXTOASCII
00002380  224A                    2174         MOVE.L   A2,A1
00002382  95CB                    2175         SUB.L    A3,A2
00002384  240A                    2176         MOVE.L   A2,D2
00002386  B4BC FFFFFFF8           2177         CMP.L    #-8,D2
0000238C  6700 0006               2178         BEQ      D7DONTWORRY
00002390                          2179  D7ACCOUNTFORZEROS:
00002390  5082                    2180          ADDI.L  #8,D2
00002392  93C2                    2181          SUB.L   D2,A1
00002394                          2182  D7DONTWORRY:
00002394  7000                    2183         MOVE.L   #0,D0
00002396  7208                    2184         MOVE.L   #8,D1
00002398  4E4F                    2185         TRAP     #15
0000239A                          2186  
0000239A                          2187     *----------A0-----------*
0000239A  43F8 3866               2188         LEA      RA0,A1
0000239E  7204                    2189         MOVE.L   #4,D1
000023A0  7001                    2190         MOVE.L   #1,D0
000023A2  4E4F                    2191         TRAP     #15
000023A4  261F                    2192         MOVE.L   (SP)+,D3    
000023A6  4EB9 000027A2           2193         JSR      HEXTOASCII
000023AC  224A                    2194         MOVE.L   A2,A1
000023AE  95CB                    2195         SUB.L    A3,A2
000023B0  240A                    2196         MOVE.L   A2,D2
000023B2  B4BC FFFFFFF8           2197         CMP.L    #-8,D2
000023B8  6700 0006               2198         BEQ      A0DONTWORRY
000023BC                          2199  A0ACCOUNTFORZEROS:
000023BC  5082                    2200          ADDI.L  #8,D2
000023BE  93C2                    2201          SUB.L   D2,A1
000023C0                          2202  A0DONTWORRY:
000023C0  7000                    2203         MOVE.L   #0,D0
000023C2  7208                    2204         MOVE.L   #8,D1
000023C4  4E4F                    2205         TRAP     #15
000023C6                          2206         
000023C6                          2207            *----------A1-----------*
000023C6  43F8 386A               2208         LEA      RA1,A1
000023CA  7204                    2209         MOVE.L   #4,D1
000023CC  7001                    2210         MOVE.L   #1,D0
000023CE  4E4F                    2211         TRAP     #15
000023D0  261F                    2212         MOVE.L   (SP)+,D3    
000023D2  4EB9 000027A2           2213         JSR      HEXTOASCII
000023D8  224A                    2214         MOVE.L   A2,A1
000023DA  95CB                    2215         SUB.L    A3,A2
000023DC  240A                    2216         MOVE.L   A2,D2
000023DE  B4BC FFFFFFF8           2217         CMP.L    #-8,D2
000023E4  6700 0006               2218         BEQ      A1DONTWORRY
000023E8                          2219  A1ACCOUNTFORZEROS:
000023E8  5082                    2220          ADDI.L  #8,D2
000023EA  93C2                    2221          SUB.L   D2,A1
000023EC                          2222  A1DONTWORRY:
000023EC  7000                    2223         MOVE.L   #0,D0
000023EE  7208                    2224         MOVE.L   #8,D1
000023F0  4E4F                    2225         TRAP     #15
000023F2                          2226         
000023F2                          2227          *----------A2-----------*
000023F2  43F8 386E               2228         LEA      RA2,A1
000023F6  7204                    2229         MOVE.L   #4,D1
000023F8  7001                    2230         MOVE.L   #1,D0
000023FA  4E4F                    2231         TRAP     #15
000023FC  261F                    2232         MOVE.L   (SP)+,D3    
000023FE  4EB9 000027A2           2233         JSR      HEXTOASCII
00002404  224A                    2234         MOVE.L   A2,A1
00002406  95CB                    2235         SUB.L    A3,A2
00002408  240A                    2236         MOVE.L   A2,D2
0000240A  B4BC FFFFFFF8           2237         CMP.L    #-8,D2
00002410  6700 0006               2238         BEQ      A2DONTWORRY
00002414                          2239  A2ACCOUNTFORZEROS:
00002414  5082                    2240          ADDI.L  #8,D2
00002416  93C2                    2241          SUB.L   D2,A1
00002418                          2242  A2DONTWORRY:
00002418  7000                    2243         MOVE.L   #0,D0
0000241A  7208                    2244         MOVE.L   #8,D1
0000241C  4E4F                    2245         TRAP     #15
0000241E                          2246         
0000241E                          2247           *----------A3-----------*
0000241E  43F8 3872               2248         LEA      RA3,A1
00002422  7204                    2249         MOVE.L   #4,D1
00002424  7001                    2250         MOVE.L   #1,D0
00002426  4E4F                    2251         TRAP     #15
00002428  261F                    2252         MOVE.L   (SP)+,D3    
0000242A  4EB9 000027A2           2253         JSR      HEXTOASCII
00002430  224A                    2254         MOVE.L   A2,A1
00002432  95CB                    2255         SUB.L    A3,A2
00002434  240A                    2256         MOVE.L   A2,D2
00002436  B4BC FFFFFFF8           2257         CMP.L    #-8,D2
0000243C  6700 0006               2258         BEQ      A3DONTWORRY
00002440                          2259  A3ACCOUNTFORZEROS:
00002440  5082                    2260          ADDI.L  #8,D2
00002442  93C2                    2261          SUB.L   D2,A1
00002444                          2262  A3DONTWORRY:
00002444  7000                    2263         MOVE.L   #0,D0
00002446  7208                    2264         MOVE.L   #8,D1
00002448  4E4F                    2265         TRAP     #15
0000244A                          2266         
0000244A                          2267          *----------A4-----------*
0000244A  43F8 3872               2268         LEA      RA3,A1
0000244E  7204                    2269         MOVE.L   #4,D1
00002450  7001                    2270         MOVE.L   #1,D0
00002452  4E4F                    2271         TRAP     #15
00002454  261F                    2272         MOVE.L   (SP)+,D3    
00002456  4EB9 000027A2           2273         JSR      HEXTOASCII
0000245C  224A                    2274         MOVE.L   A2,A1
0000245E  95CB                    2275         SUB.L    A3,A2
00002460  240A                    2276         MOVE.L   A2,D2
00002462  B4BC FFFFFFF8           2277         CMP.L    #-8,D2
00002468  6700 0006               2278         BEQ      A4DONTWORRY
0000246C                          2279  A4ACCOUNTFORZEROS:
0000246C  5082                    2280          ADDI.L  #8,D2
0000246E  93C2                    2281          SUB.L   D2,A1
00002470                          2282  A4DONTWORRY:
00002470  7000                    2283         MOVE.L   #0,D0
00002472  7208                    2284         MOVE.L   #8,D1
00002474  4E4F                    2285         TRAP     #15
00002476                          2286         
00002476                          2287         *----------A5-----------*
00002476  43F8 3872               2288         LEA      RA3,A1
0000247A  7204                    2289         MOVE.L   #4,D1
0000247C  7001                    2290         MOVE.L   #1,D0
0000247E  4E4F                    2291         TRAP     #15
00002480  261F                    2292         MOVE.L   (SP)+,D3    
00002482  4EB9 000027A2           2293         JSR      HEXTOASCII
00002488  224A                    2294         MOVE.L   A2,A1
0000248A  95CB                    2295         SUB.L    A3,A2
0000248C  240A                    2296         MOVE.L   A2,D2
0000248E  B4BC FFFFFFF8           2297         CMP.L    #-8,D2
00002494  6700 0006               2298         BEQ      A5DONTWORRY
00002498                          2299  A5ACCOUNTFORZEROS:
00002498  5082                    2300          ADDI.L  #8,D2
0000249A  93C2                    2301          SUB.L   D2,A1
0000249C                          2302  A5DONTWORRY:
0000249C  7000                    2303         MOVE.L   #0,D0
0000249E  7208                    2304         MOVE.L   #8,D1
000024A0  4E4F                    2305         TRAP     #15
000024A2                          2306         
000024A2                          2307         *----------A6-----------*
000024A2  43F8 3872               2308         LEA      RA3,A1
000024A6  7204                    2309         MOVE.L   #4,D1
000024A8  7001                    2310         MOVE.L   #1,D0
000024AA  4E4F                    2311         TRAP     #15
000024AC  261F                    2312         MOVE.L   (SP)+,D3    
000024AE  4EB9 000027A2           2313         JSR      HEXTOASCII
000024B4  224A                    2314         MOVE.L   A2,A1
000024B6  95CB                    2315         SUB.L    A3,A2
000024B8  240A                    2316         MOVE.L   A2,D2
000024BA  B4BC FFFFFFF8           2317         CMP.L    #-8,D2
000024C0  6700 0006               2318         BEQ      A6DONTWORRY
000024C4                          2319  A6ACCOUNTFORZEROS:
000024C4  5082                    2320          ADDI.L  #8,D2
000024C6  93C2                    2321          SUB.L   D2,A1
000024C8                          2322  A6DONTWORRY:
000024C8  7000                    2323         MOVE.L   #0,D0
000024CA  7208                    2324         MOVE.L   #8,D1
000024CC  4E4F                    2325         TRAP     #15
000024CE                          2326       *-----HACK---*
000024CE  DFFC 0000003C           2327       ADD.L  #60,SP  ;should put stack in correct place
000024D4                          2328       
000024D4                          2329                *----------USP-----------*
000024D4  43F8 3889               2330         LEA      RUS,A1
000024D8  7204                    2331         MOVE.L   #4,D1
000024DA  7001                    2332         MOVE.L   #1,D0
000024DC  4E4F                    2333         TRAP     #15
000024DE  261F                    2334         MOVE.L   (SP)+,D3    
000024E0  4EB9 000027A2           2335         JSR      HEXTOASCII
000024E6  224A                    2336         MOVE.L   A2,A1
000024E8  95CB                    2337         SUB.L    A3,A2
000024EA  240A                    2338         MOVE.L   A2,D2
000024EC  B4BC FFFFFFF8           2339         CMP.L    #-8,D2
000024F2  6700 0006               2340         BEQ      USPDONTWORRY
000024F6                          2341  USPACCOUNTFORZEROS:
000024F6  5082                    2342          ADDI.L  #8,D2
000024F8  93C2                    2343          SUB.L   D2,A1
000024FA                          2344  USPDONTWORRY:
000024FA  7000                    2345         MOVE.L   #0,D0
000024FC  7208                    2346         MOVE.L   #8,D1
000024FE  4E4F                    2347         TRAP     #15
00002500                          2348  
00002500                          2349                *----------SR-----------*
00002500  43F8 3891               2350         LEA      RSR,A1
00002504  7204                    2351         MOVE.L   #4,D1
00002506  7001                    2352         MOVE.L   #1,D0
00002508  4E4F                    2353         TRAP     #15
0000250A  361F                    2354         MOVE.W   (SP)+,D3
0000250C  3E03                    2355         MOVE.W   D3,D7   ;temp storage to restore before return    
0000250E  4EB9 000027A2           2356         JSR      HEXTOASCII
00002514  224A                    2357         MOVE.L   A2,A1
00002516  95CB                    2358         SUB.L    A3,A2
00002518  240A                    2359         MOVE.L   A2,D2
0000251A  B4BC FFFFFFFC           2360         CMP.L    #-4,D2
00002520  6700 0006               2361         BEQ      SRDONTWORRY
00002524                          2362  SRACCOUNTFORZEROS:
00002524  5882                    2363          ADDI.L  #4,D2
00002526  93C2                    2364          SUB.L   D2,A1
00002528                          2365  SRDONTWORRY:
00002528  7000                    2366         MOVE.L   #0,D0
0000252A  7204                    2367         MOVE.L   #4,D1
0000252C  4E4F                    2368         TRAP     #15
0000252E                          2369         
0000252E                          2370      *----------SS/A7-----------*
0000252E  43F8 3882               2371         LEA      RSS,A1
00002532  7207                    2372         MOVE.L   #7,D1
00002534  7001                    2373         MOVE.L   #1,D0
00002536  4E4F                    2374         TRAP     #15
00002538  261F                    2375         MOVE.L   (SP)+,D3    
0000253A  4EB9 000027A2           2376         JSR      HEXTOASCII
00002540  224A                    2377         MOVE.L   A2,A1
00002542  95CB                    2378         SUB.L    A3,A2
00002544  240A                    2379         MOVE.L   A2,D2
00002546  B4BC FFFFFFF8           2380         CMP.L    #-8,D2
0000254C  6700 0006               2381         BEQ      SSDONTWORRY
00002550                          2382  SSACCOUNTFORZEROS:
00002550  5082                    2383          ADDI.L  #8,D2
00002552  93C2                    2384          SUB.L   D2,A1
00002554                          2385  SSDONTWORRY:
00002554  7000                    2386         MOVE.L   #0,D0
00002556  7208                    2387         MOVE.L   #8,D1
00002558  4E4F                    2388         TRAP     #15
0000255A                          2389         
0000255A                          2390      *----------PC-----------*
0000255A  43F8 388D               2391         LEA      RPC,A1
0000255E  7204                    2392         MOVE.L   #4,D1
00002560  7001                    2393         MOVE.L   #1,D0
00002562  4E4F                    2394         TRAP     #15
00002564  261F                    2395         MOVE.L   (SP)+,D3    
00002566  4EB9 000027A2           2396         JSR      HEXTOASCII
0000256C  224A                    2397         MOVE.L   A2,A1
0000256E  95CB                    2398         SUB.L    A3,A2
00002570  240A                    2399         MOVE.L   A2,D2
00002572  B4BC FFFFFFF8           2400         CMP.L    #-8,D2
00002578  6700 0006               2401         BEQ      PCDONTWORRY
0000257C                          2402  PCACCOUNTFORZEROS:
0000257C  5082                    2403          ADDI.L  #8,D2
0000257E  93C2                    2404          SUB.L   D2,A1
00002580                          2405  PCDONTWORRY:
00002580  7000                    2406         MOVE.L   #0,D0
00002582  7208                    2407         MOVE.L   #8,D1
00002584  4E4F                    2408         TRAP     #15       
00002586                          2409         
00002586                          2410     *---DF HACK RESTORE---*
00002586  3F07                    2411     MOVE.W   D7,-(SP)
00002588  DFFC FFFFFFB8           2412     ADD.L    #-72,SP
0000258E  4CDF 7FFF               2413     MOVEM.L  (SP)+,D0-D7/A0-A6
00002592  DFFC 0000000C           2414     ADD.L    #12,SP  ;go back to original value
00002598  46DF                    2415     MOVE.W   (SP)+,SR
0000259A                          2416          
0000259A  6000 EAD4               2417         BRA SHELL
0000259E                          2418  
0000259E                          2419  *--------------------------------------------------------------------------------------*
0000259E                          2420  
0000259E                          2421  
0000259E                          2422  ************************************EXCEPTIONS!*****************************************
0000259E                          2423  *--------------------------------------------------------------------------------------*
0000259E                          2424  
0000259E                          2425  BERR:
0000259E  48E7 C070               2426          MOVEM.L A1-A3/D0-D1,-(SP)
000025A2  43F8 3895               2427          LEA     BERR_TEXT,A1
000025A6  700D                    2428          MOVE.L  #13,D0
000025A8  4E4F                    2429          TRAP    #15
000025AA  43F8 3986               2430          LEA     SSW,A1
000025AE  700E                    2431          MOVE.L  #14,D0
000025B0  4E4F                    2432          TRAP    #15
000025B2  362F 001C               2433          MOVE.W  (28,SP),D3
000025B6  4EB9 000027A2           2434          JSR     HEXTOASCII
000025BC  598B                    2435          SUB.L   #4,A3
000025BE  224B                    2436          MOVEA.L A3,A1
000025C0  7204                    2437          MOVE.L  #4,D1
000025C2  7000                    2438          MOVE.L  #0,D0
000025C4  4E4F                    2439          TRAP    #15
000025C6  43F8 398C               2440          LEA     BA,A1
000025CA  700E                    2441          MOVE.L  #14,D0
000025CC  4E4F                    2442          TRAP    #15
000025CE  262F 001E               2443          MOVE.L  (30,SP),D3
000025D2  4EB9 000027A2           2444          JSR     HEXTOASCII
000025D8  518B                    2445          SUB.L   #8,A3
000025DA  224B                    2446          MOVEA.L A3,A1
000025DC  7208                    2447          MOVE.L  #8,D1
000025DE  7000                    2448          MOVE.L  #0,D0
000025E0  4E4F                    2449          TRAP    #15
000025E2  43F8 3991               2450          LEA     IR,A1
000025E6  700E                    2451          MOVE.L  #14,D0
000025E8  4E4F                    2452          TRAP    #15
000025EA  362F 0022               2453          MOVE.W  (34,SP),D3
000025EE  4EB9 000027A2           2454          JSR     HEXTOASCII
000025F4  598B                    2455          SUB.L   #4,A3
000025F6  224B                    2456          MOVEA.L A3,A1
000025F8  7204                    2457          MOVE.L  #4,D1
000025FA  7000                    2458          MOVE.L  #0,D0
000025FC  4E4F                    2459          TRAP    #15
000025FE  4CDF 0E03               2460          MOVEM.L (SP)+,A1-A3/D0-D1
00002602  2E7C 01000000           2461          MOVE.L  #$01000000,SP   ;reset stack
00002608  6000 EA66               2462          BRA     SHELL
0000260C                          2463  
0000260C                          2464  AERR:
0000260C  48E7 CC70               2465          MOVEM.L A1-A3/D0-D1/D4-D5,-(SP)
00002610  43F8 38AD               2466          LEA     AERR_TEXT,A1
00002614  700D                    2467          MOVE.L  #13,D0
00002616  4E4F                    2468          TRAP    #15
00002618  43F8 3986               2469          LEA     SSW,A1
0000261C  700E                    2470          MOVE.L  #14,D0
0000261E  4E4F                    2471          TRAP    #15
00002620  362F 001C               2472          MOVE.W  (28,SP),D3
00002624  4EB9 000027A2           2473          JSR     HEXTOASCII
0000262A  598B                    2474          SUB.L   #4,A3
0000262C  224B                    2475          MOVEA.L A3,A1
0000262E  7204                    2476          MOVE.L  #4,D1
00002630  7000                    2477          MOVE.L  #0,D0
00002632  4E4F                    2478          TRAP    #15
00002634  43F8 398C               2479          LEA     BA,A1
00002638  700E                    2480          MOVE.L  #14,D0
0000263A  4E4F                    2481          TRAP    #15
0000263C  262F 001E               2482          MOVE.L  (30,SP),D3
00002640  4EB9 000027A2           2483          JSR     HEXTOASCII
00002646  518B                    2484          SUB.L   #8,A3
00002648  224B                    2485          MOVEA.L A3,A1
0000264A  7208                    2486          MOVE.L  #8,D1
0000264C  7000                    2487          MOVE.L  #0,D0
0000264E  4E4F                    2488          TRAP    #15
00002650  43F8 3991               2489          LEA     IR,A1
00002654  700E                    2490          MOVE.L  #14,D0
00002656  4E4F                    2491          TRAP    #15
00002658  362F 0022               2492          MOVE.W  (34,SP),D3
0000265C  4EB9 000027A2           2493          JSR     HEXTOASCII
00002662  598B                    2494          SUB.L   #4,A3
00002664  224B                    2495          MOVEA.L A3,A1
00002666  7204                    2496          MOVE.L  #4,D1
00002668  7000                    2497          MOVE.L  #0,D0
0000266A  4E4F                    2498          TRAP    #15
0000266C  4CDF 0E33               2499          MOVEM.L (SP)+,A1-A3/D0-D1/D4-D5
00002670  2E7C 01000000           2500          MOVE.L  #$01000000,SP   ;reset stack
00002676  6000 E9F8               2501          BRA     SHELL
0000267A                          2502  
0000267A                          2503  IERR:
0000267A  48E7 8040               2504      MOVEM.L A1/D0,-(SP)
0000267E  43F8 38CA               2505      LEA IERR_TEXT,A1
00002682  700D                    2506      MOVE.L #13,D0
00002684  4E4F                    2507      TRAP #15
00002686  4CDF 0201               2508      MOVEM.L (SP)+,A1/D0
0000268A  2E7C 01000000           2509      MOVE.L #$01000000,SP
00002690  6000 E9DE               2510      BRA SHELL
00002694                          2511  
00002694                          2512  PERR:
00002694  48E7 8040               2513      MOVEM.L A1/D0,-(SP)
00002698  43F8 38F3               2514      LEA PERR_TEXT,A1
0000269C  700D                    2515      MOVE.L #13,D0
0000269E  4E4F                    2516      TRAP #15
000026A0  4CDF 0201               2517      MOVEM.L (SP)+,A1/D0
000026A4  2E7C 01000000           2518      MOVE.L #$01000000,SP
000026AA  6000 E9C4               2519      BRA SHELL
000026AE                          2520      
000026AE                          2521  ZERR:
000026AE  48E7 8040               2522      MOVEM.L A1/D0,-(SP)
000026B2  43F8 3911               2523      LEA ZERR_TEXT,A1
000026B6  700D                    2524      MOVE.L #13,D0
000026B8  4E4F                    2525      TRAP #15
000026BA  4CDF 0201               2526      MOVEM.L (SP)+,A1/D0
000026BE  2E7C 01000000           2527      MOVE.L #$01000000,SP
000026C4  6000 E9AA               2528      BRA SHELL
000026C8                          2529  
000026C8                          2530  ALERR:
000026C8  48E7 8040               2531      MOVEM.L A1/D0,-(SP)
000026CC  43F8 3934               2532      LEA ALERR_TEXT,A1
000026D0  700D                    2533      MOVE.L #13,D0
000026D2  4E4F                    2534      TRAP #15
000026D4  4CDF 0201               2535      MOVEM.L (SP)+,A1/D0
000026D8  2E7C 01000000           2536      MOVE.L #$01000000,SP
000026DE  6000 E990               2537      BRA SHELL
000026E2                          2538      
000026E2                          2539  FLERR:
000026E2  48E7 8040               2540      MOVEM.L A1/D0,-(SP)
000026E6  43F8 3950               2541      LEA FLERR_TEXT,A1
000026EA  700D                    2542      MOVE.L #13,D0
000026EC  4E4F                    2543      TRAP #15
000026EE  4CDF 0201               2544      MOVEM.L (SP)+,A1/D0
000026F2  2E7C 01000000           2545      MOVE.L #$01000000,SP
000026F8  6000 E976               2546      BRA SHELL
000026FC                          2547      
000026FC                          2548  CHKERR:
000026FC  48E7 8040               2549      MOVEM.L A1/D0,-(SP)
00002700  43F8 396C               2550      LEA CHKERR_TEXT,A1
00002704  700D                    2551      MOVE.L #13,D0
00002706  4E4F                    2552      TRAP #15
00002708  4CDF 0201               2553      MOVEM.L (SP)+,A1/D0
0000270C  2E7C 01000000           2554      MOVE.L #$01000000,SP
00002712  6000 E95C               2555      BRA SHELL
00002716                          2556  
00002716                          2557  
00002716                          2558  
00002716                          2559  ****************************COMMON SUBROUTINES NEEDED**********************************
00002716                          2560  
00002716                          2561  
00002716                          2562  *--------------------------------------------------------------------------------------*
00002716  43F8 377B               2563  ERRORSR:        LEA   ERROR,A1    ;load message
0000271A  323C 002C               2564                  MOVE.W  #44,D1
0000271E  7000                    2565                  MOVE.L  #0,D0
00002720  4E4F                    2566                  TRAP    #15
00002722  6000 E9D2               2567                  BRA     RESTORE
00002726                          2568  *--------------------------------------------------------------------------------------*
00002726                          2569  ASCII_TO_BCD:   *Number passed via D3 byte size only(to be expected)*
00002726  B67C 0046               2570                  CMP #$46,D3
0000272A  6EEA                    2571                  BGT ERRORSR
0000272C  B67C 0040               2572                  CMP #$40,D3
00002730  6E00 000A               2573                  BGT UPPER
00002734  0483 00000030           2574                  SUBI.L  #$30,D3
0000273A  4E75                    2575                  RTS
0000273C  0483 00000031           2576  UPPER:          SUBI.L  #$31,D3 ;If ASCII number is A-F
00002742  4E75                    2577                  RTS
00002744                          2578  *--------------------------------------------------------------------------------------*
00002744                          2579  
00002744                          2580  BCD_TO_HEX:     *Number passed via D3 accepts BYTE ONLY*
00002744  2803                    2581                  MOVE.L  D3,D4   
00002746  2A03                    2582                  MOVE.L  D3,D5
00002748  0284 000000F0           2583                  ANDI.L  #240,D4 ;upper byte
0000274E  0285 0000000F           2584                  ANDI.L  #15,D5  ;lower byte
00002754  E89C                    2585                  ROR.L   #4,D4   ;get bits into correct place
00002756  C8FC 000A               2586                  MULU    #10,D4  ;multiply by its tens place
0000275A  4283                    2587                  CLR.L   D3
0000275C  D684                    2588                  ADD.L   D4,D3
0000275E  D685                    2589                  ADD.L   D5,D3
00002760  4E75                    2590                  RTS
00002762                          2591  *--------------------------------------------------------------------------------------*                
00002762                          2592  ASCII_ADDRESS:   *Address to be converted from ascii to hex passed through A2 and A3*
00002762                          2593                   *Returned in D5                                                    *
00002762  4283                    2594                  CLR.L   D3
00002764  4285                    2595                  CLR.L   D5
00002766  220A                    2596                  MOVE.L   A2,D1
00002768  200B                    2597                  MOVE.L   A3,D0
0000276A  9081                    2598                  SUB.L   D1,D0   ;store the difference in D0
0000276C  7800                    2599                  MOVE.L  #0,D4   ;set up 10's place counter
0000276E  5380                    2600                  SUBI.L  #1,D0
00002770  B07C 0000               2601  PLACECOUNTER:   CMP     #0,D0
00002774  6700 0008               2602                  BEQ     CONVERTADDRESS
00002778  5884                    2603                  ADDI.L  #4,D4
0000277A  5380                    2604                  SUBI.L  #1,D0
0000277C  60F2                    2605                  BRA     PLACECOUNTER
0000277E  B6CA                    2606  CONVERTADDRESS  CMP     A2,A3
00002780  6700 001E               2607                  BEQ     ADDRESSDONE
00002784  4283                    2608                  CLR.L   D3
00002786  161A                    2609                  MOVE.B  (A2)+,D3
00002788  48E7 EC30               2610                  MOVEM.L A2-A3/D0-D2/D4-D5,-(SP)   ;so regs dont get destroyed
0000278C  4EB8 2726               2611                  JSR     ASCII_TO_BCD
00002790  4EB8 2744               2612                  JSR     BCD_TO_HEX
00002794  4CDF 0C37               2613                  MOVEM.L (SP)+,A2-A3/D0-D2/D4-D5
00002798  E9BB                    2614                  ROL.L     D4,D3
0000279A  5984                    2615                  SUBI.L  #4,D4
0000279C  DA83                    2616                  ADD.L     D3,D5   ;get total
0000279E  60DE                    2617                  BRA     CONVERTADDRESS
000027A0  4E75                    2618  ADDRESSDONE     RTS
000027A2                          2619  
000027A2                          2620  *--------------------------------------------------------------------------------------*
000027A2                          2621  HEXTOASCII: *Result returned in address buffer from A2 to A3, HEX number passed*
000027A2                          2622              *through D3*
000027A2  4284                    2623              CLR.L   D4
000027A4  4285                    2624              CLR.L   D5
000027A6  247C 00003A00           2625              MOVE.L  #$3A00,A2
000027AC  267C 00003A32           2626              MOVE.L  #$3A32,A3
000027B2                          2627  KEEP_CONVERTING:
000027B2  1803                    2628              MOVE.B  D3,D4  
000027B4  1A03                    2629              MOVE.B  D3,D5 
000027B6  E08B                    2630              LSR.L   #8,D3   ;prepare for next byte
000027B8  0284 0000000F           2631              ANDI.L  #15,D4   ;get lower byte
000027BE  0285 000000F0           2632              ANDI.L  #240,D5 ;get upper byte'
000027C4  E85D                    2633              ROR     #4,D5   ;move D5 into position
000027C6  B83C 0009               2634              CMP.B     #$9,D4
000027CA  6E00 000C               2635              BGT     A_TO_F
000027CE  0684 00000030           2636              ADDI.L  #$30,D4
000027D4  6000 0008               2637              BRA     NEXTHEX
000027D8  0684 00000037           2638  A_TO_F:     ADDI.L  #$37,D4
000027DE  BA3C 0009               2639  NEXTHEX:    CMP.B     #$9,D5
000027E2  6E00 000C               2640              BGT     A_TO_F2
000027E6  0685 00000030           2641              ADDI.L  #$30,D5
000027EC  6000 0008               2642              BRA     PUTBUFFER
000027F0  0685 00000037           2643  A_TO_F2:    ADDI.L  #$37,D5
000027F6  1704                    2644  PUTBUFFER:  MOVE.B  D4,-(A3)
000027F8  1705                    2645              MOVE.B  D5,-(A3)
000027FA  B6CA                    2646              CMP      A2,A3
000027FC  66B4                    2647              BNE      KEEP_CONVERTING
000027FE  0C12 0030               2648  RID_ZEROS:  CMP.B   #$30,(A2)
00002802  6700 0006               2649              BEQ     ADD
00002806  6000 0006               2650              BRA     HEXASCIIDONE
0000280A  528A                    2651  ADD:        ADD.L   #1,A2   ;increment to find start of string
0000280C  60F0                    2652              BRA     RID_ZEROS
0000280E                          2653  HEXASCIIDONE:   
0000280E  267C 00003A32           2654              MOVE.L  #$3A32,A3    ;end of original number
00002814  B7CA                    2655              CMP.L   A2,A3
00002816  6700 0006               2656              BEQ     ZEROS
0000281A  6000 0004               2657              BRA     NOTZEROS
0000281E  518A                    2658  ZEROS       SUB.L   #8,A2               
00002820  4E75                    2659  NOTZEROS    RTS
00002822                          2660  *--------------------------------------------------------------------------------------*
00002822  43F8 37A7               2661  UNKNOWNCMD:     LEA   ERROR1,A1    ;load message
00002826  323C 0015               2662                  MOVE.W  #21,D1
0000282A  7000                    2663                  MOVE.L  #0,D0
0000282C  4E4F                    2664                  TRAP    #15
0000282E  6000 E8C6               2665                  BRA     RESTORE
00002832                          2666  
00002832                          2667  
00002832                          2668  NEXT:   ;for debugging single commands
00002832                          2669              
00002832                          2670              
00002832                          2671              
00002832                          2672              
00002832                          2673  
00002832                          2674  
00002832                          2675         END    START        

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
A0ACCOUNTFORZEROS   23BC
A0DONTWORRY         23C0
A1ACCOUNTFORZEROS   23E8
A1DONTWORRY         23EC
A2ACCOUNTFORZEROS   2414
A2DONTWORRY         2418
A3ACCOUNTFORZEROS   2440
A3DONTWORRY         2444
A4ACCOUNTFORZEROS   246C
A4DONTWORRY         2470
A5ACCOUNTFORZEROS   2498
A5DONTWORRY         249C
A6ACCOUNTFORZEROS   24C4
A6DONTWORRY         24C8
ACMP                1BE8
ADD                 280A
ADDRESSDONE         27A0
AERR                260C
AERR_TEXT           38AD
AFADDCONV           1BC2
AGETFIRSTADDRESS    1BB0
AGETSECADDRESS      1BD0
ALERR               26C8
ALERR_TEXT          3934
ARESETLOOP          1BE6
ASADDCONV           1BDA
ASCEND              1BA0
ASCII_ADDRESS       2762
ASCII_TO_BCD        2726
ASWAP               1BF6
A_TO_F              27D8
A_TO_F2             27F0
BA                  398C
BCD_TO_HEX          2744
BERR                259E
BERR_TEXT           3895
BF                  1F5A
BFGETENDADDRONE     1F78
BFGETENDDATA        1F5E
BFGETLASTEND        1F9E
BFNEXTADDR          1F68
BFNEXTADDRTWO       1F82
BFTEST              11C0
BLCKTEST            1134
BMOV                1FD0
BMOVDONE            205C
BMOVTEST            119E
BSCH                2136
BSCH1               381D
BSCH2               3823
BSCH3               3835
BSCHENDDATA         213A
BSCHFADDEND         215A
BSCHFIRSTADD        2144
BSCHSECONDADD       2164
BSCHSECONDFIND      2172
BSCHTEST            115A
BTST                2060
BTST1               37C0
BTST2               37D4
BTST3               37E5
BTST4               37F7
BTST5               3802
BTSTDATALOOP        20AE
BTSTGETENDADDRONE   207E
BTSTGETENDDATA      2064
BTSTGETLASTEND      2098
BTSTNEXTADDR        206E
BTSTNEXTADDRTWO     2088
BTSTTEST            117C
BUFFER              3000
BYTEBSCH            21A4
CHKERR              26FC
CHKERR_TEXT         396C
COMPLETE            2128
COMPUTATION         1AE6
COMPUTEFIRSTADD     1FE0
COMPUTEFOURTHADDRESS  2028
COMPUTESECONDADDRESS  1FF8
COMPUTETHIRDADDRESS  2010
CONVERT             1ACA
CONVERTADDRESS      277E
CONVERTMINUS1       1AC8
D0ACCOUNTFORZEROS   225C
D0DONTWORRY         2260
D1ACCOUNTFORZEROS   2288
D1DONTWORRY         228C
D2ACCOUNTFORZEROS   22B4
D2DONTWORRY         22B8
D3ACCOUNTFORZEROS   22E0
D3DONTWORRY         22E4
D4ACCOUNTFORZEROS   230C
D4DONTWORRY         2310
D5ACCOUNTFORZEROS   2338
D5DONTWORRY         233C
D6ACCOUNTFORZEROS   2364
D6DONTWORRY         2368
D7ACCOUNTFORZEROS   2390
D7DONTWORRY         2394
DATALOOP            1FC2
DATATRANSFER        2052
DCMP                1C46
DEBUG               37BD
DEFAULT             1C96
DEFAULTTEST         1B52
DESCEND             1BFE
DF                  223A
DFADDCONV           1C20
DFTST               11CE
DGETFIRSTADDRESS    1C0E
DGETSECADDRESS      1C2E
DISPLOOP            1A44
DONEASCEND          1C5C
DONEDESCEND         1C5C
DRESETLOOP          1C44
DSADDCONV           1C38
DSWAP               1C54
ECHO                130A
ECHOTEST            110E
EEND                130C
EFOUND              1316
ENDBF               1FCC
ENDBSCH             2218
ENDCONVERT          1AF8
ENDLP               1F56
ENDPARSE            1D7E
ENDPARSEL           1F4E
ENDPARSEW           1E48
ENDPTRMM            1C66
ENTER               1D80
ENTERL              1F50
ENTERW              1E4A
ERROR               377B
ERROR1              37A7
ERRORSR             2716
EXECUTE             222A
FAIL                20C6
FINDEND             19C8
FINDEND1            1A06
FINDEND2            1A16
FINDLASTNUM         1ABE
FINDNEXT            1A10
FIRSTADDRESS        1FD6
FLERR               26E2
FLERR_TEXT          3950
FONT                1090000
FORMATGOOD          1D26
FORMATGOOD1         1DD0
FORMATGOOD2         1DEE
FORMATGOOD3         1E9A
FORMATGOOD4         1EB8
FORMATGOOD5         1ED6
FORMATGOOD6         1EF4
FOUNDB              21CE
FOUNDL              21DE
FOUNDW              21D6
FOURTHADDRESS       201E
GGETEND             2220
GO                  221C
GOBACK              1772
GOTST               121C
GREEN               FF00
HELP                1778
HELPORHXDC          1234
HELPTST             124A
HEXASCIIDONE        280E
HEXTOASCII          27A2
HIGHHEX             1AE2
HIGHHEXMM           1D6E
HIGHHEXMML          1F3C
HIGHHEXMMW          1E36
HTXT                3063
HTXT1               3074
HTXT10              360B
HTXT11              3648
HTXT12              3680
HTXT13              36C2
HTXT14              36F5
HTXT15              373C
HTXT1A              30BF
HTXT1B              30FC
HTXT2               3110
HTXT3               315B
HTXT3A              31A0
HTXT3B              31D9
HTXT3C              31ED
HTXT3D              3202
HTXT3E              321F
HTXT4               3252
HTXT4A              3299
HTXT4B              32DE
HTXT4C              32F9
HTXT4D              3317
HTXT4E              3336
HTXT5               335A
HTXT5A              33A0
HTXT6               33BC
HTXT6A              3402
HTXT6B              344A
HTXT7               3470
HTXT7A              34B4
HTXT7B              34FC
HTXT8               3514
HTXT8A              355B
HTXT9               3596
HTXT9A              35DE
HXDC                1A9E
HXDCTEST            12C8
IERR                267A
IERR_TEXT           38CA
IR                  3991
KEEP_CONVERTING     27B2
LONG                1E50
LONGBSCH            21C0
MDSPCTEST           1298
MEMCONT             19D2
MEMDISP             19FC
MEMNEXT             1A20
MEMSET              19C0
MEMTEST             126C
MM                  1C60
MMSPCTEST           12BA
MODIFYLOOP          1CF4
MODIFYLOOPL         1E64
MODIFYLOOPW         1D9A
MODIFYREGS          1324
MODIFYREGTEST       12F4
MOVEDATA            19EC
MRA                 136A
MRA0                15A8
MRA1                15E8
MRA2                1628
MRA3                1668
MRA4                16A8
MRA5                16E8
MRA6                1728
MRD                 1324
MRD0                13A8
MRD1                13E8
MRD2                1428
MRD3                1468
MRD4                14A8
MRD5                14E8
MRD6                1528
MRD7                1568
MRDFINDDATA         1768
MSFINDADDRESS       19E2
MSSPCTEST           128A
NEXT                2832
NEXTHEX             27DE
NEXTMMSTEP          1D72
NEXTMMSTEPL         1F40
NEXTMMSTEPW         1E3A
NOTZEROS            2820
OUTPUTBUFF          3050
OUTPUTNUM           1B16
PARSELOOP           1D56
PARSELOOPL          1F24
PARSELOOPW          1E1E
PCACCOUNTFORZEROS   257C
PCDONTWORRY         2580
PERR                2694
PERR_TEXT           38F3
PLACECOUNTER        2770
PROMPT              3058
PUTBUFFER           27F6
RA0                 3866
RA1                 386A
RA2                 386E
RA3                 3872
RA4                 3876
RA5                 387A
RA6                 387E
RD0                 3846
RD1                 384A
RD2                 384E
RD3                 3852
RD4                 3856
RD5                 385A
RD6                 385E
RD7                 3862
READ                20B8
RESTORE             10F6
RID_ZEROS           27FE
RPC                 388D
RSR                 3891
RSS                 3882
RUS                 3889
SECONDADDRESS       1FEE
SECONDLOOP          1A7C
SHELL               1070
SIZECHECK           1C64
SORTTEST            11E6
SORTW               1B2C
SPACE               37BC
SRACCOUNTFORZEROS   2524
SRDONTWORRY         2528
SSACCOUNTFORZEROS   2550
SSDONTWORRY         2554
SSW                 3986
START               1000
STOREDATA           1FA8
STOREDATABTST       20A2
SUCCESSTEXT         21E2
TESTOP              217C
THIRDADDRESS        2006
UNKNOWNCMD          2822
UPPER               273C
USPACCOUNTFORZEROS  24F6
USPDONTWORRY        24FA
WORD                1D86
WORDBSCH            21B2
ZEROS               281E
ZERR                26AE
ZERR_TEXT           3911
